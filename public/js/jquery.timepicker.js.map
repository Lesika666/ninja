{"version":3,"sources":["jquery.timepicker.js"],"names":[],"mappingsfile":"jquery.timepicker.js","sourcesContent":["/*!\r\n * jquery-timepicker v1.13.18 - A jQuery timepicker plugin inspired by Google Calendar. It supports both mouse and keyboard navigation.\r\n * Copyright (c) 2021 Jon Thornton - https://www.jonthornton.com/jquery-timepicker/\r\n * License: MIT\r\n */\r\n(function () {\r\n  'use strict';\r\n\r\n  function _typeof(obj) {\r\n    \"@babel/helpers - typeof\";\r\n\r\n    if (typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\") {\r\n      _typeof = function (obj) {\r\n        return typeof obj;\r\n      };\r\n    } else {\r\n      _typeof = function (obj) {\r\n        return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj;\r\n      };\r\n    }\r\n\r\n    return _typeof(obj);\r\n  }\r\n\r\n  function _classCallCheck(instance, Constructor) {\r\n    if (!(instance instanceof Constructor)) {\r\n      throw new TypeError(\"Cannot call a class as a function\");\r\n    }\r\n  }\r\n\r\n  function _defineProperties(target, props) {\r\n    for (var i = 0; i < props.length; i++) {\r\n      var descriptor = props[i];\r\n      descriptor.enumerable = descriptor.enumerable || false;\r\n      descriptor.configurable = true;\r\n      if (\"value\" in descriptor) descriptor.writable = true;\r\n      Object.defineProperty(target, descriptor.key, descriptor);\r\n    }\r\n  }\r\n\r\n  function _createClass(Constructor, protoProps, staticProps) {\r\n    if (protoProps) _defineProperties(Constructor.prototype, protoProps);\r\n    if (staticProps) _defineProperties(Constructor, staticProps);\r\n    return Constructor;\r\n  }\r\n\r\n  function _defineProperty(obj, key, value) {\r\n    if (key in obj) {\r\n      Object.defineProperty(obj, key, {\r\n        value: value,\r\n        enumerable: true,\r\n        configurable: true,\r\n        writable: true\r\n      });\r\n    } else {\r\n      obj[key] = value;\r\n    }\r\n\r\n    return obj;\r\n  }\r\n\r\n  function ownKeys(object, enumerableOnly) {\r\n    var keys = Object.keys(object);\r\n\r\n    if (Object.getOwnPropertySymbols) {\r\n      var symbols = Object.getOwnPropertySymbols(object);\r\n      if (enumerableOnly) symbols = symbols.filter(function (sym) {\r\n        return Object.getOwnPropertyDescriptor(object, sym).enumerable;\r\n      });\r\n      keys.push.apply(keys, symbols);\r\n    }\r\n\r\n    return keys;\r\n  }\r\n\r\n  function _objectSpread2(target) {\r\n    for (var i = 1; i < arguments.length; i++) {\r\n      var source = arguments[i] != null ? arguments[i] : {};\r\n\r\n      if (i % 2) {\r\n        ownKeys(Object(source), true).forEach(function (key) {\r\n          _defineProperty(target, key, source[key]);\r\n        });\r\n      } else if (Object.getOwnPropertyDescriptors) {\r\n        Object.defineProperties(target, Object.getOwnPropertyDescriptors(source));\r\n      } else {\r\n        ownKeys(Object(source)).forEach(function (key) {\r\n          Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key));\r\n        });\r\n      }\r\n    }\r\n\r\n    return target;\r\n  }\r\n\r\n  function _unsupportedIterableToArray(o, minLen) {\r\n    if (!o) return;\r\n    if (typeof o === \"string\") return _arrayLikeToArray(o, minLen);\r\n    var n = Object.prototype.toString.call(o).slice(8, -1);\r\n    if (n === \"Object\" && o.constructor) n = o.constructor.name;\r\n    if (n === \"Map\" || n === \"Set\") return Array.from(o);\r\n    if (n === \"Arguments\" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _arrayLikeToArray(o, minLen);\r\n  }\r\n\r\n  function _arrayLikeToArray(arr, len) {\r\n    if (len == null || len > arr.length) len = arr.length;\r\n\r\n    for (var i = 0, arr2 = new Array(len); i < len; i++) arr2[i] = arr[i];\r\n\r\n    return arr2;\r\n  }\r\n\r\n  function _createForOfIteratorHelper(o, allowArrayLike) {\r\n    var it;\r\n\r\n    if (typeof Symbol === \"undefined\" || o[Symbol.iterator] == null) {\r\n      if (Array.isArray(o) || (it = _unsupportedIterableToArray(o)) || allowArrayLike && o && typeof o.length === \"number\") {\r\n        if (it) o = it;\r\n        var i = 0;\r\n\r\n        var F = function () {};\r\n\r\n        return {\r\n          s: F,\r\n          n: function () {\r\n            if (i >= o.length) return {\r\n              done: true\r\n            };\r\n            return {\r\n              done: false,\r\n              value: o[i++]\r\n            };\r\n          },\r\n          e: function (e) {\r\n            throw e;\r\n          },\r\n          f: F\r\n        };\r\n      }\r\n\r\n      throw new TypeError(\"Invalid attempt to iterate non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\");\r\n    }\r\n\r\n    var normalCompletion = true,\r\n        didErr = false,\r\n        err;\r\n    return {\r\n      s: function () {\r\n        it = o[Symbol.iterator]();\r\n      },\r\n      n: function () {\r\n        var step = it.next();\r\n        normalCompletion = step.done;\r\n        return step;\r\n      },\r\n      e: function (e) {\r\n        didErr = true;\r\n        err = e;\r\n      },\r\n      f: function () {\r\n        try {\r\n          if (!normalCompletion && it.return != null) it.return();\r\n        } finally {\r\n          if (didErr) throw err;\r\n        }\r\n      }\r\n    };\r\n  }\r\n\r\n  var ONE_DAY = 86400;\r\n\r\n  var roundingFunction = function roundingFunction(seconds, settings) {\r\n    if (seconds === null) {\r\n      return null;\r\n    } else if (typeof settings.step !== \"number\") {\r\n      // TODO: nearest fit irregular steps\r\n      return seconds;\r\n    } else {\r\n      var _settings$minTime;\r\n\r\n      var offset = seconds % (settings.step * 60); // step is in minutes\r\n\r\n      var start = (_settings$minTime = settings.minTime()) !== null && _settings$minTime !== void 0 ? _settings$minTime : 0; // adjust offset by start mod step so that the offset is aligned not to 00:00 but to the start\r\n\r\n      offset -= start % (settings.step * 60);\r\n\r\n      if (offset >= settings.step * 30) {\r\n        // if offset is larger than a half step, round up\r\n        seconds += settings.step * 60 - offset;\r\n      } else {\r\n        // round down\r\n        seconds -= offset;\r\n      }\r\n\r\n      return _moduloSeconds(seconds, settings);\r\n    }\r\n  };\r\n\r\n  function _moduloSeconds(seconds, settings) {\r\n    if (seconds == ONE_DAY && settings.show2400) {\r\n      return seconds;\r\n    }\r\n\r\n    return seconds % ONE_DAY;\r\n  }\r\n\r\n  var DEFAULT_SETTINGS = {\r\n    appendTo: \"body\",\r\n    className: null,\r\n    closeOnWindowScroll: false,\r\n    disableTextInput: false,\r\n    disableTimeRanges: [],\r\n    disableTouchKeyboard: false,\r\n    durationTime: null,\r\n    forceRoundTime: false,\r\n    lang: {},\r\n    listWidth: null,\r\n    maxTime: null,\r\n    minTime: null,\r\n    noneOption: false,\r\n    orientation: \"l\",\r\n    roundingFunction: roundingFunction,\r\n    scrollDefault: null,\r\n    selectOnBlur: false,\r\n    show2400: false,\r\n    showDuration: false,\r\n    showOn: [\"click\", \"focus\"],\r\n    showOnFocus: true,\r\n    step: 30,\r\n    stopScrollPropagation: false,\r\n    timeFormat: \"g:ia\",\r\n    typeaheadHighlight: true,\r\n    useSelect: false,\r\n    wrapHours: true\r\n  };\r\n  var DEFAULT_LANG = {\r\n    am: \"am\",\r\n    pm: \"pm\",\r\n    AM: \"AM\",\r\n    PM: \"PM\",\r\n    decimal: \".\",\r\n    mins: \"mins\",\r\n    hr: \"hr\",\r\n    hrs: \"hrs\"\r\n  };\r\n\r\n  var EVENT_DEFAULTS = {\r\n    bubbles: true,\r\n    cancelable: false,\r\n    detail: null\r\n  };\r\n\r\n  var Timepicker = /*#__PURE__*/function () {\r\n    function Timepicker(targetEl) {\r\n      var options = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\r\n\r\n      _classCallCheck(this, Timepicker);\r\n\r\n      this._handleFormatValue = this._handleFormatValue.bind(this);\r\n      this._handleKeyUp = this._handleKeyUp.bind(this);\r\n      this.targetEl = targetEl;\r\n      var attrOptions = Timepicker.extractAttrOptions(targetEl, Object.keys(DEFAULT_SETTINGS));\r\n      this.settings = this.parseSettings(_objectSpread2(_objectSpread2(_objectSpread2({}, DEFAULT_SETTINGS), options), attrOptions));\r\n    }\r\n\r\n    _createClass(Timepicker, [{\r\n      key: \"hideMe\",\r\n      value: function hideMe() {\r\n        if (this.settings.useSelect) {\r\n          this.targetEl.blur();\r\n          return;\r\n        }\r\n\r\n        if (!this.list || !Timepicker.isVisible(this.list)) {\r\n          return;\r\n        }\r\n\r\n        if (this.settings.selectOnBlur) {\r\n          this._selectValue();\r\n        }\r\n\r\n        this.list.hide();\r\n        var hideTimepickerEvent = new CustomEvent('hideTimepicker', EVENT_DEFAULTS);\r\n        this.targetEl.dispatchEvent(hideTimepickerEvent);\r\n      }\r\n    }, {\r\n      key: \"_findRow\",\r\n      value: function _findRow(value) {\r\n        if (!value && value !== 0) {\r\n          return false;\r\n        }\r\n\r\n        var out = false;\r\n        var value = this.settings.roundingFunction(value, this.settings);\r\n\r\n        if (!this.list) {\r\n          return false;\r\n        }\r\n\r\n        this.list.find(\"li\").each(function (i, obj) {\r\n          var parsed = parseInt(obj.dataset.time);\r\n\r\n          if (isNaN(parsed)) {\r\n            return;\r\n          }\r\n\r\n          if (parsed == value) {\r\n            out = obj;\r\n            return false;\r\n          }\r\n        });\r\n        return out;\r\n      }\r\n    }, {\r\n      key: \"_hideKeyboard\",\r\n      value: function _hideKeyboard() {\r\n        return (window.navigator.msMaxTouchPoints || \"ontouchstart\" in document) && this.settings.disableTouchKeyboard;\r\n      }\r\n    }, {\r\n      key: \"_setTimeValue\",\r\n      value: function _setTimeValue(value, source) {\r\n        if (this.targetEl.nodeName === \"INPUT\") {\r\n          if (value !== null || this.targetEl.value != \"\") {\r\n            this.targetEl.value = value;\r\n          }\r\n\r\n          var tp = this;\r\n          var settings = tp.settings;\r\n\r\n          if (settings.useSelect && source != \"select\" && tp.list) {\r\n            tp.list.val(tp._roundAndFormatTime(tp.anytime2int(value)));\r\n          }\r\n        }\r\n\r\n        var selectTimeEvent = new CustomEvent('selectTime', EVENT_DEFAULTS);\r\n\r\n        if (this.selectedValue != value) {\r\n          this.selectedValue = value;\r\n          var changeTimeEvent = new CustomEvent('changeTime', EVENT_DEFAULTS);\r\n          var changeEvent = new CustomEvent('change', Object.assign(EVENT_DEFAULTS, {\r\n            detail: 'timepicker'\r\n          }));\r\n\r\n          if (source == \"select\") {\r\n            this.targetEl.dispatchEvent(selectTimeEvent);\r\n            this.targetEl.dispatchEvent(changeTimeEvent);\r\n            this.targetEl.dispatchEvent(changeEvent);\r\n          } else if ([\"error\", \"initial\"].indexOf(source) == -1) {\r\n            this.targetEl.dispatchEvent(changeTimeEvent);\r\n          }\r\n\r\n          return true;\r\n        } else {\r\n          if ([\"error\", \"initial\"].indexOf(source) == -1) {\r\n            this.targetEl.dispatchEvent(selectTimeEvent);\r\n          }\r\n\r\n          return false;\r\n        }\r\n      }\r\n    }, {\r\n      key: \"_getTimeValue\",\r\n      value: function _getTimeValue() {\r\n        if (this.targetEl.nodeName === \"INPUT\") {\r\n          return this.targetEl.value;\r\n        } else {\r\n          // use the element's data attributes to store values\r\n          return this.selectedValue;\r\n        }\r\n      }\r\n    }, {\r\n      key: \"_selectValue\",\r\n      value: function _selectValue() {\r\n        var tp = this;\r\n        tp.settings;\r\n        var list = tp.list;\r\n        var cursor = list.find(\".ui-timepicker-selected\");\r\n\r\n        if (cursor.hasClass(\"ui-timepicker-disabled\")) {\r\n          return false;\r\n        }\r\n\r\n        if (!cursor.length) {\r\n          return true;\r\n        }\r\n\r\n        var timeValue = cursor.get(0).dataset.time; // selected value found\r\n\r\n        if (timeValue) {\r\n          var parsedTimeValue = parseInt(timeValue);\r\n\r\n          if (!isNaN(parsedTimeValue)) {\r\n            timeValue = parsedTimeValue;\r\n          }\r\n        }\r\n\r\n        if (timeValue !== null) {\r\n          if (typeof timeValue != \"string\") {\r\n            timeValue = tp._int2time(timeValue);\r\n          }\r\n\r\n          tp._setTimeValue(timeValue, \"select\");\r\n        }\r\n\r\n        return true;\r\n      }\r\n    }, {\r\n      key: \"anytime2int\",\r\n      value: function anytime2int(input) {\r\n        if (typeof input === 'number') {\r\n          return input;\r\n        } else if (typeof input === 'string') {\r\n          return this.time2int(input);\r\n        } else if (_typeof(input) === 'object' && input instanceof Date) {\r\n          return input.getHours() * 3600 + input.getMinutes() * 60 + input.getSeconds();\r\n        } else if (typeof input == 'function') {\r\n          return input();\r\n        } else {\r\n          return null;\r\n        }\r\n      }\r\n    }, {\r\n      key: \"time2int\",\r\n      value: function time2int(timeString) {\r\n        if (timeString === \"\" || timeString === null || timeString === undefined) {\r\n          return null;\r\n        }\r\n\r\n        if (timeString === 'now') {\r\n          return this.anytime2int(new Date());\r\n        }\r\n\r\n        if (typeof timeString != \"string\") {\r\n          return timeString;\r\n        }\r\n\r\n        timeString = timeString.toLowerCase().replace(/[\\s\\.]/g, \"\"); // if the last character is an \"a\" or \"p\", add the \"m\"\r\n\r\n        if (timeString.slice(-1) == \"a\" || timeString.slice(-1) == \"p\") {\r\n          timeString += \"m\";\r\n        }\r\n\r\n        var pattern = /^(([^0-9]*))?([0-9]?[0-9])(([0-5][0-9]))?(([0-5][0-9]))?(([^0-9]*))$/;\r\n        var hasDelimetersMatch = timeString.match(/\\W/);\r\n\r\n        if (hasDelimetersMatch) {\r\n          pattern = /^(([^0-9]*))?([0-9]?[0-9])(\\W+([0-5][0-9]?))?(\\W+([0-5][0-9]))?(([^0-9]*))$/;\r\n        }\r\n\r\n        var time = timeString.match(pattern);\r\n\r\n        if (!time) {\r\n          return null;\r\n        }\r\n\r\n        var hour = parseInt(time[3] * 1, 10);\r\n        var ampm = time[2] || time[9];\r\n        var hours = hour;\r\n        var minutes = time[5] * 1 || 0;\r\n        var seconds = time[7] * 1 || 0;\r\n\r\n        if (!ampm && time[3].length == 2 && time[3][0] == \"0\") {\r\n          // preceding '0' implies AM\r\n          ampm = \"am\";\r\n        }\r\n\r\n        if (hour <= 12 && ampm) {\r\n          ampm = ampm.trim();\r\n          var isPm = ampm == this.settings.lang.pm || ampm == this.settings.lang.PM;\r\n\r\n          if (hour == 12) {\r\n            hours = isPm ? 12 : 0;\r\n          } else {\r\n            hours = hour + (isPm ? 12 : 0);\r\n          }\r\n        } else {\r\n          var t = hour * 3600 + minutes * 60 + seconds;\r\n\r\n          if (t >= ONE_DAY + (this.settings.show2400 ? 1 : 0)) {\r\n            if (this.settings.wrapHours === false) {\r\n              return null;\r\n            }\r\n\r\n            hours = hour % 24;\r\n          }\r\n        }\r\n\r\n        var timeInt = hours * 3600 + minutes * 60 + seconds; // if no am/pm provided, intelligently guess based on the scrollDefault\r\n\r\n        if (hour < 12 && !ampm && this.settings._twelveHourTime && this.settings.scrollDefault()) {\r\n          var delta = timeInt - this.settings.scrollDefault();\r\n\r\n          if (delta < 0 && delta >= ONE_DAY / -2) {\r\n            timeInt = (timeInt + ONE_DAY / 2) % ONE_DAY;\r\n          }\r\n        }\r\n\r\n        return timeInt;\r\n      }\r\n    }, {\r\n      key: \"intStringDateOrFunc2func\",\r\n      value: function intStringDateOrFunc2func(input) {\r\n        var _this = this;\r\n\r\n        if (input === null || input === undefined) {\r\n          return function () {\r\n            return null;\r\n          };\r\n        } else if (typeof input === 'function') {\r\n          return function () {\r\n            return _this.anytime2int(input());\r\n          };\r\n        } else {\r\n          return function () {\r\n            return _this.anytime2int(input);\r\n          };\r\n        }\r\n      }\r\n    }, {\r\n      key: \"parseSettings\",\r\n      value: function parseSettings(settings) {\r\n        settings.lang = _objectSpread2(_objectSpread2({}, DEFAULT_LANG), settings.lang); // lang is used by other functions the rest of this depends on\r\n        // todo: unwind circular dependency on lang\r\n\r\n        this.settings = settings;\r\n\r\n        if (settings.listWidth) {\r\n          settings.listWidth = this.anytime2int(settings.listWidth);\r\n        }\r\n\r\n        settings.minTime = this.intStringDateOrFunc2func(settings.minTime);\r\n        settings.maxTime = this.intStringDateOrFunc2func(settings.maxTime);\r\n        settings.durationTime = this.intStringDateOrFunc2func(settings.durationTime);\r\n\r\n        if (settings.scrollDefault) {\r\n          settings.scrollDefault = this.intStringDateOrFunc2func(settings.scrollDefault);\r\n        } else {\r\n          settings.scrollDefault = settings.minTime;\r\n        }\r\n\r\n        if (typeof settings.timeFormat === \"string\" && settings.timeFormat.match(/[gh]/)) {\r\n          settings._twelveHourTime = true;\r\n        }\r\n\r\n        if (settings.showOnFocus === false && settings.showOn.indexOf(\"focus\") != -1) {\r\n          settings.showOn.splice(settings.showOn.indexOf(\"focus\"), 1);\r\n        }\r\n\r\n        if (!settings.disableTimeRanges) {\r\n          settings.disableTimeRanges = [];\r\n        }\r\n\r\n        if (settings.disableTimeRanges.length > 0) {\r\n          // convert string times to integers\r\n          for (var i in settings.disableTimeRanges) {\r\n            settings.disableTimeRanges[i] = [this.anytime2int(settings.disableTimeRanges[i][0]), this.anytime2int(settings.disableTimeRanges[i][1])];\r\n          } // sort by starting time\r\n\r\n\r\n          settings.disableTimeRanges = settings.disableTimeRanges.sort(function (a, b) {\r\n            return a[0] - b[0];\r\n          }); // merge any overlapping ranges\r\n\r\n          for (var i = settings.disableTimeRanges.length - 1; i > 0; i--) {\r\n            if (settings.disableTimeRanges[i][0] <= settings.disableTimeRanges[i - 1][1]) {\r\n              settings.disableTimeRanges[i - 1] = [Math.min(settings.disableTimeRanges[i][0], settings.disableTimeRanges[i - 1][0]), Math.max(settings.disableTimeRanges[i][1], settings.disableTimeRanges[i - 1][1])];\r\n              settings.disableTimeRanges.splice(i, 1);\r\n            }\r\n          }\r\n        }\r\n\r\n        return settings;\r\n      }\r\n      /*\r\n       *  Filter freeform input\r\n       */\r\n\r\n    }, {\r\n      key: \"_disableTextInputHandler\",\r\n      value: function _disableTextInputHandler(e) {\r\n        switch (e.keyCode) {\r\n          case 13: // return\r\n\r\n          case 9:\r\n            //tab\r\n            return;\r\n\r\n          default:\r\n            e.preventDefault();\r\n        }\r\n      }\r\n    }, {\r\n      key: \"_int2duration\",\r\n      value: function _int2duration(seconds, step) {\r\n        seconds = Math.abs(seconds);\r\n        var minutes = Math.round(seconds / 60),\r\n            duration = [],\r\n            hours,\r\n            mins;\r\n\r\n        if (minutes < 60) {\r\n          // Only show (x mins) under 1 hour\r\n          duration = [minutes, this.settings.lang.mins];\r\n        } else {\r\n          hours = Math.floor(minutes / 60);\r\n          mins = minutes % 60; // Show decimal notation (eg: 1.5 hrs) for 30 minute steps\r\n\r\n          if (step == 30 && mins == 30) {\r\n            hours += this.settings.lang.decimal + 5;\r\n          }\r\n\r\n          duration.push(hours);\r\n          duration.push(hours == 1 ? this.settings.lang.hr : this.settings.lang.hrs); // Show remainder minutes notation (eg: 1 hr 15 mins) for non-30 minute steps\r\n          // and only if there are remainder minutes to show\r\n\r\n          if (step != 30 && mins) {\r\n            duration.push(mins);\r\n            duration.push(this.settings.lang.mins);\r\n          }\r\n        }\r\n\r\n        return duration.join(\" \");\r\n      }\r\n    }, {\r\n      key: \"_roundAndFormatTime\",\r\n      value: function _roundAndFormatTime(seconds) {\r\n        seconds = this.settings.roundingFunction(seconds, this.settings);\r\n\r\n        if (seconds !== null) {\r\n          return this._int2time(seconds);\r\n        }\r\n      }\r\n    }, {\r\n      key: \"_int2time\",\r\n      value: function _int2time(timeInt) {\r\n        if (typeof timeInt != \"number\") {\r\n          return null;\r\n        }\r\n\r\n        var seconds = parseInt(timeInt % 60),\r\n            minutes = parseInt(timeInt / 60 % 60),\r\n            hours = parseInt(timeInt / (60 * 60) % 24);\r\n        var time = new Date(1970, 0, 2, hours, minutes, seconds, 0);\r\n\r\n        if (isNaN(time.getTime())) {\r\n          return null;\r\n        }\r\n\r\n        if (typeof this.settings.timeFormat === \"function\") {\r\n          return this.settings.timeFormat(time);\r\n        }\r\n\r\n        var output = \"\";\r\n        var hour, code;\r\n\r\n        for (var i = 0; i < this.settings.timeFormat.length; i++) {\r\n          code = this.settings.timeFormat.charAt(i);\r\n\r\n          switch (code) {\r\n            case \"a\":\r\n              output += time.getHours() > 11 ? this.settings.lang.pm : this.settings.lang.am;\r\n              break;\r\n\r\n            case \"A\":\r\n              output += time.getHours() > 11 ? this.settings.lang.PM : this.settings.lang.AM;\r\n              break;\r\n\r\n            case \"g\":\r\n              hour = time.getHours() % 12;\r\n              output += hour === 0 ? \"12\" : hour;\r\n              break;\r\n\r\n            case \"G\":\r\n              hour = time.getHours();\r\n              if (timeInt === ONE_DAY) hour = this.settings.show2400 ? 24 : 0;\r\n              output += hour;\r\n              break;\r\n\r\n            case \"h\":\r\n              hour = time.getHours() % 12;\r\n\r\n              if (hour !== 0 && hour < 10) {\r\n                hour = \"0\" + hour;\r\n              }\r\n\r\n              output += hour === 0 ? \"12\" : hour;\r\n              break;\r\n\r\n            case \"H\":\r\n              hour = time.getHours();\r\n              if (timeInt === ONE_DAY) hour = this.settings.show2400 ? 24 : 0;\r\n              output += hour > 9 ? hour : \"0\" + hour;\r\n              break;\r\n\r\n            case \"i\":\r\n              var minutes = time.getMinutes();\r\n              output += minutes > 9 ? minutes : \"0\" + minutes;\r\n              break;\r\n\r\n            case \"s\":\r\n              seconds = time.getSeconds();\r\n              output += seconds > 9 ? seconds : \"0\" + seconds;\r\n              break;\r\n\r\n            case \"\\\\\":\r\n              // escape character; add the next character and skip ahead\r\n              i++;\r\n              output += this.settings.timeFormat.charAt(i);\r\n              break;\r\n\r\n            default:\r\n              output += code;\r\n          }\r\n        }\r\n\r\n        return output;\r\n      }\r\n    }, {\r\n      key: \"_setSelected\",\r\n      value: function _setSelected() {\r\n        var list = this.list;\r\n        list.find(\"li\").removeClass(\"ui-timepicker-selected\");\r\n        var timeValue = this.anytime2int(this._getTimeValue());\r\n\r\n        if (timeValue === null) {\r\n          return;\r\n        }\r\n\r\n        var selected = this._findRow(timeValue);\r\n\r\n        if (selected) {\r\n          var selectedRect = selected.getBoundingClientRect();\r\n          var listRect = list.get(0).getBoundingClientRect();\r\n          var topDelta = selectedRect.top - listRect.top;\r\n\r\n          if (topDelta + selectedRect.height > listRect.height || topDelta < 0) {\r\n            var newScroll = list.scrollTop() + (selectedRect.top - listRect.top) - selectedRect.height;\r\n            list.scrollTop(newScroll);\r\n          }\r\n\r\n          var parsed = parseInt(selected.dataset.time);\r\n\r\n          if (this.settings.forceRoundTime || parsed === timeValue) {\r\n            selected.classList.add('ui-timepicker-selected');\r\n          }\r\n        }\r\n      }\r\n    }, {\r\n      key: \"_isFocused\",\r\n      value: function _isFocused(el) {\r\n        return el === document.activeElement;\r\n      }\r\n    }, {\r\n      key: \"_handleFormatValue\",\r\n      value: function _handleFormatValue(e) {\r\n        if (e && e.detail == \"timepicker\") {\r\n          return;\r\n        }\r\n\r\n        this._formatValue(e);\r\n      }\r\n    }, {\r\n      key: \"_formatValue\",\r\n      value: function _formatValue(e, origin) {\r\n        if (this.targetEl.value === \"\") {\r\n          this._setTimeValue(null, origin);\r\n\r\n          return;\r\n        } // IE fires change event before blur\r\n\r\n\r\n        if (this._isFocused(this.targetEl) && (!e || e.type != \"change\")) {\r\n          return;\r\n        }\r\n\r\n        var settings = this.settings;\r\n        var seconds = this.anytime2int(this.targetEl.value);\r\n\r\n        if (seconds === null) {\r\n          var timeFormatErrorEvent = new CustomEvent('timeFormatError', EVENT_DEFAULTS);\r\n          this.targetEl.dispatchEvent(timeFormatErrorEvent);\r\n          return;\r\n        }\r\n\r\n        var rangeError = false; // check that the time in within bounds\r\n\r\n        if (settings.minTime !== null && settings.maxTime !== null && (seconds < settings.minTime() || seconds > settings.maxTime())) {\r\n          rangeError = true;\r\n        } // check that time isn't within disabled time ranges\r\n\r\n\r\n        var _iterator = _createForOfIteratorHelper(settings.disableTimeRanges),\r\n            _step;\r\n\r\n        try {\r\n          for (_iterator.s(); !(_step = _iterator.n()).done;) {\r\n            var range = _step.value;\r\n\r\n            if (seconds >= range[0] && seconds < range[1]) {\r\n              rangeError = true;\r\n              break;\r\n            }\r\n          }\r\n        } catch (err) {\r\n          _iterator.e(err);\r\n        } finally {\r\n          _iterator.f();\r\n        }\r\n\r\n        if (settings.forceRoundTime) {\r\n          var roundSeconds = settings.roundingFunction(seconds, settings);\r\n\r\n          if (roundSeconds != seconds) {\r\n            seconds = roundSeconds;\r\n            origin = null;\r\n          }\r\n        }\r\n\r\n        var prettyTime = this._int2time(seconds);\r\n\r\n        if (rangeError) {\r\n          this._setTimeValue(prettyTime);\r\n\r\n          var timeRangeErrorEvent = new CustomEvent('timeRangeError', EVENT_DEFAULTS);\r\n          this.targetEl.dispatchEvent(timeRangeErrorEvent);\r\n        } else {\r\n          this._setTimeValue(prettyTime, origin);\r\n        }\r\n      }\r\n    }, {\r\n      key: \"_generateNoneElement\",\r\n      value: function _generateNoneElement(optionValue, useSelect) {\r\n        var label, className, value;\r\n\r\n        if (_typeof(optionValue) == \"object\") {\r\n          label = optionValue.label;\r\n          className = optionValue.className;\r\n          value = optionValue.value;\r\n        } else if (typeof optionValue == \"string\") {\r\n          label = optionValue;\r\n          value = \"\";\r\n        } else {\r\n          $.error(\"Invalid noneOption value\");\r\n        }\r\n\r\n        var el;\r\n\r\n        if (useSelect) {\r\n          el = document.createElement(\"option\");\r\n          el.value = value;\r\n        } else {\r\n          el = document.createElement(\"li\");\r\n          el.dataset.time = String(value);\r\n        }\r\n\r\n        el.innerText = label;\r\n        el.classList.add(className);\r\n        return el;\r\n      }\r\n      /*\r\n       *  Time typeahead\r\n       */\r\n\r\n    }, {\r\n      key: \"_handleKeyUp\",\r\n      value: function _handleKeyUp(e) {\r\n        var _this2 = this;\r\n\r\n        if (!this.list || !Timepicker.isVisible(this.list) || this.settings.disableTextInput) {\r\n          return true;\r\n        }\r\n\r\n        if (e.type === \"paste\" || e.type === \"cut\") {\r\n          var handler = function handler() {\r\n            if (_this2.settings.typeaheadHighlight) {\r\n              _this2._setSelected();\r\n            } else {\r\n              _this2.list.hide();\r\n            }\r\n          };\r\n\r\n          setTimeout(handler, 0);\r\n          return;\r\n        }\r\n\r\n        switch (e.keyCode) {\r\n          case 96: // numpad numerals\r\n\r\n          case 97:\r\n          case 98:\r\n          case 99:\r\n          case 100:\r\n          case 101:\r\n          case 102:\r\n          case 103:\r\n          case 104:\r\n          case 105:\r\n          case 48: // numerals\r\n\r\n          case 49:\r\n          case 50:\r\n          case 51:\r\n          case 52:\r\n          case 53:\r\n          case 54:\r\n          case 55:\r\n          case 56:\r\n          case 57:\r\n          case 65: // a\r\n\r\n          case 77: // m\r\n\r\n          case 80: // p\r\n\r\n          case 186: // colon\r\n\r\n          case 8: // backspace\r\n\r\n          case 46:\r\n            // delete\r\n            if (this.settings.typeaheadHighlight) {\r\n              this._setSelected();\r\n            } else {\r\n              this.list.hide();\r\n            }\r\n\r\n            break;\r\n        }\r\n      }\r\n    }], [{\r\n      key: \"extractAttrOptions\",\r\n      value: function extractAttrOptions(element, keys) {\r\n        var output = {};\r\n\r\n        var _iterator2 = _createForOfIteratorHelper(keys),\r\n            _step2;\r\n\r\n        try {\r\n          for (_iterator2.s(); !(_step2 = _iterator2.n()).done;) {\r\n            var key = _step2.value;\r\n\r\n            if (key in element.dataset) {\r\n              output[key] = element.dataset[key];\r\n            }\r\n          }\r\n        } catch (err) {\r\n          _iterator2.e(err);\r\n        } finally {\r\n          _iterator2.f();\r\n        }\r\n\r\n        return output;\r\n      }\r\n    }, {\r\n      key: \"isVisible\",\r\n      value: function isVisible(elem) {\r\n        var el = elem[0];\r\n        return el.offsetWidth > 0 && el.offsetHeight > 0;\r\n      }\r\n    }, {\r\n      key: \"hideAll\",\r\n      value: function hideAll() {\r\n        var _iterator3 = _createForOfIteratorHelper(document.getElementsByClassName('ui-timepicker-input')),\r\n            _step3;\r\n\r\n        try {\r\n          for (_iterator3.s(); !(_step3 = _iterator3.n()).done;) {\r\n            var el = _step3.value;\r\n            var tp = el.timepickerObj;\r\n\r\n            if (tp) {\r\n              tp.hideMe();\r\n            }\r\n          }\r\n        } catch (err) {\r\n          _iterator3.e(err);\r\n        } finally {\r\n          _iterator3.f();\r\n        }\r\n      }\r\n    }]);\r\n\r\n    return Timepicker;\r\n  }(); // IE9-11 polyfill for CustomEvent\r\n\r\n\r\n  (function () {\r\n    if (typeof window.CustomEvent === \"function\") return false;\r\n\r\n    function CustomEvent(event, params) {\r\n      if (!params) {\r\n        params = {};\r\n      }\r\n\r\n      params = Object.assign(EVENT_DEFAULTS, params);\r\n      var evt = document.createEvent('CustomEvent');\r\n      evt.initCustomEvent(event, params.bubbles, params.cancelable, params.detail);\r\n      return evt;\r\n    }\r\n\r\n    window.CustomEvent = CustomEvent;\r\n  })();\r\n\r\n  (function (factory) {\r\n    if ((typeof exports === \"undefined\" ? \"undefined\" : _typeof(exports)) === \"object\" && exports && (typeof module === \"undefined\" ? \"undefined\" : _typeof(module)) === \"object\" && module && module.exports === exports) {\r\n      // Browserify. Attach to jQuery module.\r\n      factory(require(\"jquery\"));\r\n    } else if (typeof define === \"function\" && define.amd) {\r\n      // AMD. Register as an anonymous module.\r\n      define([\"jquery\"], factory);\r\n    } else {\r\n      // Browser globals\r\n      factory(jQuery);\r\n    }\r\n  })(function ($) {\r\n    var methods = {\r\n      init: function init(options) {\r\n        return this.each(function () {\r\n          var self = $(this);\r\n          var tp = new Timepicker(this, options);\r\n          var settings = tp.settings;\r\n          settings.lang;\r\n          this.timepickerObj = tp;\r\n          self.addClass(\"ui-timepicker-input\");\r\n\r\n          if (settings.useSelect) {\r\n            _render(self);\r\n          } else {\r\n            self.prop(\"autocomplete\", \"off\");\r\n\r\n            if (settings.showOn) {\r\n              for (var i in settings.showOn) {\r\n                self.on(settings.showOn[i] + \".timepicker\", methods.show);\r\n              }\r\n            }\r\n\r\n            self.on(\"change.timepicker\", tp._handleFormatValue);\r\n            self.on(\"keydown.timepicker\", _keydownhandler);\r\n            self.on(\"keyup.timepicker\", tp._handleKeyUp);\r\n\r\n            if (settings.disableTextInput) {\r\n              self.on(\"keydown.timepicker\", tp._disableTextInputHandler);\r\n            }\r\n\r\n            self.on(\"cut.timepicker\", tp._handleKeyUp);\r\n            self.on(\"paste.timepicker\", tp._handleKeyUp);\r\n\r\n            tp._formatValue(null, \"initial\");\r\n          }\r\n        });\r\n      },\r\n      show: function show(e) {\r\n        var self = $(this);\r\n        var tp = self[0].timepickerObj;\r\n        var settings = tp.settings;\r\n\r\n        if (e) {\r\n          e.preventDefault();\r\n        }\r\n\r\n        if (settings.useSelect) {\r\n          tp.list.trigger('focus');\r\n          return;\r\n        }\r\n\r\n        if (tp._hideKeyboard()) {\r\n          // block the keyboard on mobile devices\r\n          self.trigger('blur');\r\n        }\r\n\r\n        var list = tp.list; // check if input is readonly\r\n\r\n        if (self.prop(\"readonly\")) {\r\n          return;\r\n        } // check if list needs to be rendered\r\n\r\n\r\n        _render(self);\r\n\r\n        list = tp.list;\r\n\r\n        if (Timepicker.isVisible(list)) {\r\n          return;\r\n        }\r\n\r\n        if (self.is('input')) {\r\n          tp.selectedValue = self.val();\r\n        }\r\n\r\n        tp._setSelected(); // make sure other pickers are hidden\r\n\r\n\r\n        Timepicker.hideAll();\r\n\r\n        if (typeof settings.listWidth == \"number\") {\r\n          list.width(self.outerWidth() * settings.listWidth);\r\n        } // position the dropdown relative to the input\r\n\r\n\r\n        list.show();\r\n        var listOffset = {};\r\n\r\n        if (settings.orientation.match(/r/)) {\r\n          // right-align the dropdown\r\n          listOffset.left = self.offset().left + self.outerWidth() - list.outerWidth() + parseInt(list.css(\"marginLeft\").replace(\"px\", \"\"), 10);\r\n        } else if (settings.orientation.match(/l/)) {\r\n          // left-align the dropdown\r\n          listOffset.left = self.offset().left + parseInt(list.css(\"marginLeft\").replace(\"px\", \"\"), 10);\r\n        } else if (settings.orientation.match(/c/)) {\r\n          // center-align the dropdown\r\n          listOffset.left = self.offset().left + (self.outerWidth() - list.outerWidth()) / 2 + parseInt(list.css(\"marginLeft\").replace(\"px\", \"\"), 10);\r\n        }\r\n\r\n        var verticalOrientation;\r\n\r\n        if (settings.orientation.match(/t/)) {\r\n          verticalOrientation = \"t\";\r\n        } else if (settings.orientation.match(/b/)) {\r\n          verticalOrientation = \"b\";\r\n        } else if (self.offset().top + self.outerHeight(true) + list.outerHeight() > $(window).height() + $(window).scrollTop()) {\r\n          verticalOrientation = \"t\";\r\n        } else {\r\n          verticalOrientation = \"b\";\r\n        }\r\n\r\n        if (verticalOrientation == \"t\") {\r\n          // position the dropdown on top\r\n          list.addClass(\"ui-timepicker-positioned-top\");\r\n          listOffset.top = self.offset().top - list.outerHeight() + parseInt(list.css(\"marginTop\").replace(\"px\", \"\"), 10);\r\n        } else {\r\n          // put it under the input\r\n          list.removeClass(\"ui-timepicker-positioned-top\");\r\n          listOffset.top = self.offset().top + self.outerHeight() + parseInt(list.css(\"marginTop\").replace(\"px\", \"\"), 10);\r\n        }\r\n\r\n        list.offset(listOffset); // position scrolling\r\n\r\n        var selected = list.find(\".ui-timepicker-selected\");\r\n\r\n        if (!selected.length) {\r\n          var timeInt = tp.anytime2int(tp._getTimeValue());\r\n\r\n          if (timeInt !== null) {\r\n            selected = $(tp._findRow(timeInt));\r\n          } else if (settings.scrollDefault()) {\r\n            selected = $(tp._findRow(settings.scrollDefault()));\r\n          }\r\n        } // if not found or disabled, intelligently find first selectable element\r\n\r\n\r\n        if (!selected.length || selected.hasClass(\"ui-timepicker-disabled\")) {\r\n          selected = list.find(\"li:not(.ui-timepicker-disabled):first\");\r\n        }\r\n\r\n        if (selected && selected.length) {\r\n          var topOffset = list.scrollTop() + selected.position().top - selected.outerHeight();\r\n          list.scrollTop(topOffset);\r\n        } else {\r\n          list.scrollTop(0);\r\n        } // prevent scroll propagation\r\n\r\n\r\n        if (settings.stopScrollPropagation) {\r\n          $(document).on(\"wheel.ui-timepicker\", \".ui-timepicker-wrapper\", function (e) {\r\n            e.preventDefault();\r\n            var currentScroll = $(this).scrollTop();\r\n            $(this).scrollTop(currentScroll + e.originalEvent.deltaY);\r\n          });\r\n        } // attach close handlers\r\n\r\n\r\n        $(document).on(\"mousedown.ui-timepicker\", _closeHandler);\r\n        window.addEventListener('resize', _closeHandler);\r\n\r\n        if (settings.closeOnWindowScroll) {\r\n          $(document).on(\"scroll.ui-timepicker\", _closeHandler);\r\n        }\r\n\r\n        self.trigger(\"showTimepicker\");\r\n        return this;\r\n      },\r\n      hide: function hide(e) {\r\n        var tp = this[0].timepickerObj;\r\n\r\n        if (tp) {\r\n          tp.hideMe();\r\n        }\r\n\r\n        Timepicker.hideAll();\r\n        return this;\r\n      },\r\n      option: function option(key, value) {\r\n        if (typeof key == \"string\" && typeof value == \"undefined\") {\r\n          var tp = this[0].timepickerObj;\r\n          return tp.settings[key];\r\n        }\r\n\r\n        return this.each(function () {\r\n          var self = $(this);\r\n          var tp = self[0].timepickerObj;\r\n          var settings = tp.settings;\r\n          var list = tp.list;\r\n\r\n          if (_typeof(key) == \"object\") {\r\n            settings = $.extend(settings, key);\r\n          } else if (typeof key == \"string\") {\r\n            settings[key] = value;\r\n          }\r\n\r\n          settings = tp.parseSettings(settings);\r\n          tp.settings = settings;\r\n\r\n          tp._formatValue({\r\n            type: \"change\"\r\n          }, \"initial\");\r\n\r\n          if (list) {\r\n            list.remove();\r\n            tp.list = null;\r\n          }\r\n\r\n          if (settings.useSelect) {\r\n            _render(self);\r\n          }\r\n        });\r\n      },\r\n      getSecondsFromMidnight: function getSecondsFromMidnight() {\r\n        var tp = this[0].timepickerObj;\r\n        return tp.anytime2int(tp._getTimeValue());\r\n      },\r\n      getTime: function getTime(relative_date) {\r\n        var tp = this[0].timepickerObj;\r\n\r\n        var time_string = tp._getTimeValue();\r\n\r\n        if (!time_string) {\r\n          return null;\r\n        }\r\n\r\n        var offset = tp.anytime2int(time_string);\r\n\r\n        if (offset === null) {\r\n          return null;\r\n        }\r\n\r\n        if (!relative_date) {\r\n          relative_date = new Date();\r\n        } // construct a Date from relative date, and offset's time\r\n\r\n\r\n        var time = new Date(relative_date);\r\n        time.setHours(offset / 3600);\r\n        time.setMinutes(offset % 3600 / 60);\r\n        time.setSeconds(offset % 60);\r\n        time.setMilliseconds(0);\r\n        return time;\r\n      },\r\n      isVisible: function isVisible() {\r\n        var tp = this[0].timepickerObj;\r\n        return !!(tp && tp.list && Timepicker.isVisible(tp.list));\r\n      },\r\n      setTime: function setTime(value) {\r\n        var tp = this[0].timepickerObj;\r\n        var settings = tp.settings;\r\n\r\n        if (settings.forceRoundTime) {\r\n          var prettyTime = tp._roundAndFormatTime(tp.anytime2int(value));\r\n        } else {\r\n          var prettyTime = tp._int2time(tp.anytime2int(value));\r\n        }\r\n\r\n        if (value && prettyTime === null && settings.noneOption) {\r\n          prettyTime = value;\r\n        }\r\n\r\n        tp._setTimeValue(prettyTime, \"initial\");\r\n\r\n        tp._formatValue({\r\n          type: \"change\"\r\n        }, \"initial\");\r\n\r\n        if (tp && tp.list) {\r\n          tp._setSelected();\r\n        }\r\n\r\n        return this;\r\n      },\r\n      remove: function remove() {\r\n        var self = this; // check if this element is a timepicker\r\n\r\n        if (!self.hasClass(\"ui-timepicker-input\")) {\r\n          return;\r\n        }\r\n\r\n        var tp = self[0].timepickerObj;\r\n        var settings = tp.settings;\r\n        self.removeAttr(\"autocomplete\", \"off\");\r\n        self.removeClass(\"ui-timepicker-input\");\r\n        self.removeData(\"timepicker-obj\");\r\n        self.off(\".timepicker\"); // timepicker-list won't be present unless the user has interacted with this timepicker\r\n\r\n        if (tp.list) {\r\n          tp.list.remove();\r\n        }\r\n\r\n        if (settings.useSelect) {\r\n          self.show();\r\n        }\r\n\r\n        tp.list = null;\r\n        return this;\r\n      }\r\n    }; // private methods\r\n\r\n    function _render(self) {\r\n      var _settings$durationTim, _settings$minTime, _settings$maxTime;\r\n\r\n      var tp = self[0].timepickerObj;\r\n      var list = tp.list;\r\n      var settings = tp.settings;\r\n\r\n      if (list && list.length) {\r\n        list.remove();\r\n        tp.list = null;\r\n      }\r\n\r\n      if (settings.useSelect) {\r\n        list = $(\"<select></select>\", {\r\n          \"class\": \"ui-timepicker-select\"\r\n        });\r\n\r\n        if (self.attr(\"name\")) {\r\n          list.attr(\"name\", \"ui-timepicker-\" + self.attr(\"name\"));\r\n        }\r\n\r\n        var wrapped_list = list;\r\n      } else {\r\n        list = $(\"<ul></ul>\", {\r\n          \"class\": \"ui-timepicker-list\"\r\n        });\r\n        var wrapped_list = $(\"<div></div>\", {\r\n          \"class\": \"ui-timepicker-wrapper\",\r\n          tabindex: -1\r\n        });\r\n        wrapped_list.css({\r\n          display: \"none\",\r\n          position: \"absolute\"\r\n        }).append(list);\r\n      }\r\n\r\n      if (settings.noneOption) {\r\n        if (settings.noneOption === true) {\r\n          settings.noneOption = settings.useSelect ? \"Time...\" : \"None\";\r\n        }\r\n\r\n        if ($.isArray(settings.noneOption)) {\r\n          for (var i in settings.noneOption) {\r\n            if (parseInt(i, 10) == i) {\r\n              var noneElement = tp._generateNoneElement(settings.noneOption[i], settings.useSelect);\r\n\r\n              list.append(noneElement);\r\n            }\r\n          }\r\n        } else {\r\n          var noneElement = tp._generateNoneElement(settings.noneOption, settings.useSelect);\r\n\r\n          list.append(noneElement);\r\n        }\r\n      }\r\n\r\n      if (settings.className) {\r\n        wrapped_list.addClass(settings.className);\r\n      }\r\n\r\n      if ((settings.minTime !== null || settings.durationTime !== null) && settings.showDuration) {\r\n        typeof settings.step == \"function\" ? \"function\" : settings.step;\r\n        wrapped_list.addClass(\"ui-timepicker-with-duration\");\r\n        wrapped_list.addClass(\"ui-timepicker-step-\" + settings.step);\r\n      }\r\n\r\n      var durStart = (_settings$durationTim = settings.durationTime()) !== null && _settings$durationTim !== void 0 ? _settings$durationTim : settings.minTime();\r\n      var start = (_settings$minTime = settings.minTime()) !== null && _settings$minTime !== void 0 ? _settings$minTime : 0;\r\n      var end = (_settings$maxTime = settings.maxTime()) !== null && _settings$maxTime !== void 0 ? _settings$maxTime : start + ONE_DAY - 1;\r\n\r\n      if (end < start) {\r\n        // make sure the end time is greater than start time, otherwise there will be no list to show\r\n        end += ONE_DAY;\r\n      }\r\n\r\n      if (end === ONE_DAY - 1 && $.type(settings.timeFormat) === \"string\" && settings.show2400) {\r\n        // show a 24:00 option when using military time\r\n        end = ONE_DAY;\r\n      }\r\n\r\n      var dr = settings.disableTimeRanges;\r\n      var drCur = 0;\r\n      var drLen = dr.length;\r\n      var stepFunc = settings.step;\r\n\r\n      if (typeof stepFunc != \"function\") {\r\n        stepFunc = function stepFunc() {\r\n          return settings.step;\r\n        };\r\n      }\r\n\r\n      for (var i = start, j = 0; i <= end; j++, i += stepFunc(j) * 60) {\r\n        var timeInt = i;\r\n\r\n        var timeString = tp._int2time(timeInt);\r\n\r\n        if (settings.useSelect) {\r\n          var row = $(\"<option></option>\", {\r\n            value: timeString\r\n          });\r\n          row.text(timeString);\r\n        } else {\r\n          var row = $(\"<li></li>\");\r\n          row.addClass(timeInt % ONE_DAY < ONE_DAY / 2 ? \"ui-timepicker-am\" : \"ui-timepicker-pm\");\r\n          row.attr(\"data-time\", roundingFunction(timeInt, settings));\r\n          row.text(timeString);\r\n        }\r\n\r\n        if ((settings.minTime() !== null || settings.durationTime() !== null) && settings.showDuration) {\r\n          var durationString = tp._int2duration(i - durStart, settings.step);\r\n\r\n          if (settings.useSelect) {\r\n            row.text(row.text() + \" (\" + durationString + \")\");\r\n          } else {\r\n            var duration = $(\"<span></span>\", {\r\n              \"class\": \"ui-timepicker-duration\"\r\n            });\r\n            duration.text(\" (\" + durationString + \")\");\r\n            row.append(duration);\r\n          }\r\n        }\r\n\r\n        if (drCur < drLen) {\r\n          if (timeInt >= dr[drCur][1]) {\r\n            drCur += 1;\r\n          }\r\n\r\n          if (dr[drCur] && timeInt >= dr[drCur][0] && timeInt < dr[drCur][1]) {\r\n            if (settings.useSelect) {\r\n              row.prop(\"disabled\", true);\r\n            } else {\r\n              row.addClass(\"ui-timepicker-disabled\");\r\n            }\r\n          }\r\n        }\r\n\r\n        list.append(row);\r\n      }\r\n\r\n      wrapped_list.data(\"timepicker-input\", self);\r\n      tp.list = wrapped_list;\r\n\r\n      if (settings.useSelect) {\r\n        if (self.val()) {\r\n          list.val(tp._roundAndFormatTime(tp.anytime2int(self.val())));\r\n        }\r\n\r\n        list.on(\"focus\", function () {\r\n          $(this).data(\"timepicker-input\").trigger(\"showTimepicker\");\r\n        });\r\n        list.on(\"blur\", function () {\r\n          $(this).data(\"timepicker-input\").trigger(\"hideTimepicker\");\r\n        });\r\n        list.on(\"change\", function () {\r\n          tp._setTimeValue($(this).val(), \"select\");\r\n        });\r\n\r\n        tp._setTimeValue(list.val(), \"initial\");\r\n\r\n        self.hide().after(list);\r\n      } else {\r\n        var appendTo = settings.appendTo;\r\n\r\n        if (typeof appendTo === \"string\") {\r\n          appendTo = $(appendTo);\r\n        } else if (typeof appendTo === \"function\") {\r\n          appendTo = appendTo(self);\r\n        }\r\n\r\n        appendTo.append(wrapped_list);\r\n\r\n        tp._setSelected();\r\n\r\n        list.on(\"mousedown click\", \"li\", function (e) {\r\n          // hack: temporarily disable the focus handler\r\n          // to deal with the fact that IE fires 'focus'\r\n          // events asynchronously\r\n          self.off(\"focus.timepicker\");\r\n          self.on(\"focus.timepicker-ie-hack\", function () {\r\n            self.off(\"focus.timepicker-ie-hack\");\r\n            self.on(\"focus.timepicker\", methods.show);\r\n          });\r\n\r\n          if (!tp._hideKeyboard()) {\r\n            self[0].focus();\r\n          } // make sure only the clicked row is selected\r\n\r\n\r\n          list.find(\"li\").removeClass(\"ui-timepicker-selected\");\r\n          $(this).addClass(\"ui-timepicker-selected\");\r\n\r\n          if (tp._selectValue()) {\r\n            self.trigger(\"hideTimepicker\");\r\n            list.on(\"mouseup.timepicker click.timepicker\", \"li\", function (e) {\r\n              list.off(\"mouseup.timepicker click.timepicker\");\r\n              wrapped_list.hide();\r\n            });\r\n          }\r\n        });\r\n      }\r\n    } // event handler to decide whether to close timepicker\r\n\r\n\r\n    function _closeHandler(e) {\r\n      if (e.type == 'focus' && e.target == window) {\r\n        // mobile Chrome fires focus events against window for some reason\r\n        return;\r\n      }\r\n\r\n      var target = $(e.target);\r\n\r\n      if (target.closest(\".ui-timepicker-input\").length || target.closest(\".ui-timepicker-wrapper\").length) {\r\n        // active timepicker was focused. ignore\r\n        return;\r\n      }\r\n\r\n      Timepicker.hideAll();\r\n      $(document).unbind(\".ui-timepicker\");\r\n      $(window).unbind(\".ui-timepicker\");\r\n    }\r\n    /*\r\n     *  Keyboard navigation via arrow keys\r\n     */\r\n\r\n\r\n    function _keydownhandler(e) {\r\n      var self = $(this);\r\n      var tp = self[0].timepickerObj;\r\n      var list = tp.list;\r\n\r\n      if (!list || !Timepicker.isVisible(list)) {\r\n        if (e.keyCode == 40) {\r\n          // show the list!\r\n          methods.show.call(self.get(0));\r\n          list = tp.list;\r\n\r\n          if (!tp._hideKeyboard()) {\r\n            self.trigger('focus');\r\n          }\r\n        } else {\r\n          return true;\r\n        }\r\n      }\r\n\r\n      switch (e.keyCode) {\r\n        case 13:\r\n          // return\r\n          if (tp._selectValue()) {\r\n            tp._formatValue({\r\n              type: \"change\"\r\n            });\r\n\r\n            tp.hideMe();\r\n          }\r\n\r\n          e.preventDefault();\r\n          return false;\r\n\r\n        case 38:\r\n          // up\r\n          var selected = list.find(\".ui-timepicker-selected\");\r\n\r\n          if (!selected.length) {\r\n            list.find(\"li\").each(function (i, obj) {\r\n              if ($(obj).position().top > 0) {\r\n                selected = $(obj);\r\n                return false;\r\n              }\r\n            });\r\n            selected.addClass(\"ui-timepicker-selected\");\r\n          } else if (!selected.is(\":first-child\")) {\r\n            selected.removeClass(\"ui-timepicker-selected\");\r\n            selected.prev().addClass(\"ui-timepicker-selected\");\r\n\r\n            if (selected.prev().position().top < selected.outerHeight()) {\r\n              list.scrollTop(list.scrollTop() - selected.outerHeight());\r\n            }\r\n          }\r\n\r\n          return false;\r\n\r\n        case 40:\r\n          // down\r\n          selected = list.find(\".ui-timepicker-selected\");\r\n\r\n          if (selected.length === 0) {\r\n            list.find(\"li\").each(function (i, obj) {\r\n              if ($(obj).position().top > 0) {\r\n                selected = $(obj);\r\n                return false;\r\n              }\r\n            });\r\n            selected.addClass(\"ui-timepicker-selected\");\r\n          } else if (!selected.is(\":last-child\")) {\r\n            selected.removeClass(\"ui-timepicker-selected\");\r\n            selected.next().addClass(\"ui-timepicker-selected\");\r\n\r\n            if (selected.next().position().top + 2 * selected.outerHeight() > list.outerHeight()) {\r\n              list.scrollTop(list.scrollTop() + selected.outerHeight());\r\n            }\r\n          }\r\n\r\n          return false;\r\n\r\n        case 27:\r\n          // escape\r\n          list.find(\"li\").removeClass(\"ui-timepicker-selected\");\r\n          tp.hideMe();\r\n          break;\r\n\r\n        case 9:\r\n          //tab\r\n          tp.hideMe();\r\n          break;\r\n\r\n        default:\r\n          return true;\r\n      }\r\n    } // Plugin entry\r\n\r\n\r\n    $.fn.timepicker = function (method) {\r\n      if (!this.length) return this;\r\n\r\n      if (methods[method]) {\r\n        // check if this element is a timepicker\r\n        if (!this.hasClass(\"ui-timepicker-input\")) {\r\n          return this;\r\n        }\r\n\r\n        return methods[method].apply(this, Array.prototype.slice.call(arguments, 1));\r\n      } else if (_typeof(method) === \"object\" || !method) {\r\n        return methods.init.apply(this, arguments);\r\n      } else {\r\n        $.error(\"Method \" + method + \" does not exist on jQuery.timepicker\");\r\n      }\r\n    }; // Default plugin options.\r\n\r\n\r\n    $.fn.timepicker.defaults = DEFAULT_SETTINGS;\r\n  });\r\n\r\n}());\r\n"]}