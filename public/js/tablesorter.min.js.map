{"version":3,"sources":["jquery.tablesorter.combined.js","widget-grouping.min.js","widget-uitheme.min.js","widget-filter.min.js","widget-columnSelector.min.js"],"names":[],"mappings":"AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AC78LA;AACA;AACA;AACA;AACA;ACJA;AACA;AACA;AACA;AACA;ACJA;AACA;AACA;AACA;AACA;ACJA;AACA;AACA;AACA","file":"tablesorter.min.js","sourcesContent":["/*! tablesorter (FORK) - updated 2020-03-03 (v2.31.3)*/\r\n/* Includes widgets ( storage,uitheme,columns,filter,stickyHeaders,resizable,saveSort ) */\r\n(function(factory){if (typeof define === 'function' && define.amd){define(['jquery'], factory);} else if (typeof module === 'object' && typeof module.exports === 'object'){module.exports = factory(require('jquery'));} else {factory(jQuery);}}(function(jQuery) {\r\n/*! TableSorter (FORK) v2.31.3 *//*\r\n* Client-side table sorting with ease!\r\n* @requires jQuery v1.2.6+\r\n*\r\n* Copyright (c) 2007 Christian Bach\r\n* fork maintained by Rob Garrison\r\n*\r\n* Examples and original docs at: http://tablesorter.com\r\n* Dual licensed under the MIT and GPL licenses:\r\n* http://www.opensource.org/licenses/mit-license.php\r\n* http://www.gnu.org/licenses/gpl.html\r\n*\r\n* @type jQuery\r\n* @name tablesorter (FORK)\r\n* @cat Plugins/Tablesorter\r\n* @author Christian Bach - christian.bach@polyester.se\r\n* @contributor Rob Garrison - https://github.com/Mottie/tablesorter\r\n* @docs (fork) - https://mottie.github.io/tablesorter/docs/\r\n*/\r\n/*jshint browser:true, jquery:true, unused:false, expr: true */\r\n;( function( $ ) {\r\n\t'use strict';\r\n\tvar ts = $.tablesorter = {\r\n\r\n\t\tversion : '2.31.3',\r\n\r\n\t\tparsers : [],\r\n\t\twidgets : [],\r\n\t\tdefaults : {\r\n\r\n\t\t\t// *** appearance\r\n\t\t\ttheme            : 'default',  // adds tablesorter-{theme} to the table for styling\r\n\t\t\twidthFixed       : false,      // adds colgroup to fix widths of columns\r\n\t\t\tshowProcessing   : false,      // show an indeterminate timer icon in the header when the table is sorted or filtered.\r\n\r\n\t\t\theaderTemplate   : '{content}',// header layout template (HTML ok); {content} = innerHTML, {icon} = <i/> // class from cssIcon\r\n\t\t\tonRenderTemplate : null,       // function( index, template ) { return template; }, // template is a string\r\n\t\t\tonRenderHeader   : null,       // function( index ) {}, // nothing to return\r\n\r\n\t\t\t// *** functionality\r\n\t\t\tcancelSelection  : true,       // prevent text selection in the header\r\n\t\t\ttabIndex         : true,       // add tabindex to header for keyboard accessibility\r\n\t\t\tdateFormat       : 'mmddyyyy', // other options: 'ddmmyyy' or 'yyyymmdd'\r\n\t\t\tsortMultiSortKey : 'shiftKey', // key used to select additional columns\r\n\t\t\tsortResetKey     : 'ctrlKey',  // key used to remove sorting on a column\r\n\t\t\tusNumberFormat   : true,       // false for German '1.234.567,89' or French '1 234 567,89'\r\n\t\t\tdelayInit        : false,      // if false, the parsed table contents will not update until the first sort\r\n\t\t\tserverSideSorting: false,      // if true, server-side sorting should be performed because client-side sorting will be disabled, but the ui and events will still be used.\r\n\t\t\tresort           : true,       // default setting to trigger a resort after an 'update', 'addRows', 'updateCell', etc has completed\r\n\r\n\t\t\t// *** sort options\r\n\t\t\theaders          : {},         // set sorter, string, empty, locked order, sortInitialOrder, filter, etc.\r\n\t\t\tignoreCase       : true,       // ignore case while sorting\r\n\t\t\tsortForce        : null,       // column(s) first sorted; always applied\r\n\t\t\tsortList         : [],         // Initial sort order; applied initially; updated when manually sorted\r\n\t\t\tsortAppend       : null,       // column(s) sorted last; always applied\r\n\t\t\tsortStable       : false,      // when sorting two rows with exactly the same content, the original sort order is maintained\r\n\r\n\t\t\tsortInitialOrder : 'asc',      // sort direction on first click\r\n\t\t\tsortLocaleCompare: false,      // replace equivalent character (accented characters)\r\n\t\t\tsortReset        : false,      // third click on the header will reset column to default - unsorted\r\n\t\t\tsortRestart      : false,      // restart sort to 'sortInitialOrder' when clicking on previously unsorted columns\r\n\r\n\t\t\temptyTo          : 'bottom',   // sort empty cell to bottom, top, none, zero, emptyMax, emptyMin\r\n\t\t\tstringTo         : 'max',      // sort strings in numerical column as max, min, top, bottom, zero\r\n\t\t\tduplicateSpan    : true,       // colspan cells in the tbody will have duplicated content in the cache for each spanned column\r\n\t\t\ttextExtraction   : 'basic',    // text extraction method/function - function( node, table, cellIndex ) {}\r\n\t\t\ttextAttribute    : 'data-text',// data-attribute that contains alternate cell text (used in default textExtraction function)\r\n\t\t\ttextSorter       : null,       // choose overall or specific column sorter function( a, b, direction, table, columnIndex ) [alt: ts.sortText]\r\n\t\t\tnumberSorter     : null,       // choose overall numeric sorter function( a, b, direction, maxColumnValue )\r\n\r\n\t\t\t// *** widget options\r\n\t\t\tinitWidgets      : true,       // apply widgets on tablesorter initialization\r\n\t\t\twidgetClass      : 'widget-{name}', // table class name template to match to include a widget\r\n\t\t\twidgets          : [],         // method to add widgets, e.g. widgets: ['zebra']\r\n\t\t\twidgetOptions    : {\r\n\t\t\t\tzebra : [ 'even', 'odd' ]  // zebra widget alternating row class names\r\n\t\t\t},\r\n\r\n\t\t\t// *** callbacks\r\n\t\t\tinitialized      : null,       // function( table ) {},\r\n\r\n\t\t\t// *** extra css class names\r\n\t\t\ttableClass       : '',\r\n\t\t\tcssAsc           : '',\r\n\t\t\tcssDesc          : '',\r\n\t\t\tcssNone          : '',\r\n\t\t\tcssHeader        : '',\r\n\t\t\tcssHeaderRow     : '',\r\n\t\t\tcssProcessing    : '', // processing icon applied to header during sort/filter\r\n\r\n\t\t\tcssChildRow      : 'tablesorter-childRow', // class name indiciating that a row is to be attached to its parent\r\n\t\t\tcssInfoBlock     : 'tablesorter-infoOnly', // don't sort tbody with this class name (only one class name allowed here!)\r\n\t\t\tcssNoSort        : 'tablesorter-noSort',   // class name added to element inside header; clicking on it won't cause a sort\r\n\t\t\tcssIgnoreRow     : 'tablesorter-ignoreRow',// header row to ignore; cells within this row will not be added to c.$headers\r\n\r\n\t\t\tcssIcon          : 'tablesorter-icon', // if this class does not exist, the {icon} will not be added from the headerTemplate\r\n\t\t\tcssIconNone      : '', // class name added to the icon when there is no column sort\r\n\t\t\tcssIconAsc       : '', // class name added to the icon when the column has an ascending sort\r\n\t\t\tcssIconDesc      : '', // class name added to the icon when the column has a descending sort\r\n\t\t\tcssIconDisabled  : '', // class name added to the icon when the column has a disabled sort\r\n\r\n\t\t\t// *** events\r\n\t\t\tpointerClick     : 'click',\r\n\t\t\tpointerDown      : 'mousedown',\r\n\t\t\tpointerUp        : 'mouseup',\r\n\r\n\t\t\t// *** selectors\r\n\t\t\tselectorHeaders  : '> thead th, > thead td',\r\n\t\t\tselectorSort     : 'th, td', // jQuery selector of content within selectorHeaders that is clickable to trigger a sort\r\n\t\t\tselectorRemove   : '.remove-me',\r\n\r\n\t\t\t// *** advanced\r\n\t\t\tdebug            : false,\r\n\r\n\t\t\t// *** Internal variables\r\n\t\t\theaderList: [],\r\n\t\t\tempties: {},\r\n\t\t\tstrings: {},\r\n\t\t\tparsers: [],\r\n\r\n\t\t\t// *** parser options for validator; values must be falsy!\r\n\t\t\tglobalize: 0,\r\n\t\t\timgAttr: 0\r\n\r\n\t\t\t// removed: widgetZebra: { css: ['even', 'odd'] }\r\n\r\n\t\t},\r\n\r\n\t\t// internal css classes - these will ALWAYS be added to\r\n\t\t// the table and MUST only contain one class name - fixes #381\r\n\t\tcss : {\r\n\t\t\ttable      : 'tablesorter',\r\n\t\t\tcssHasChild: 'tablesorter-hasChildRow',\r\n\t\t\tchildRow   : 'tablesorter-childRow',\r\n\t\t\tcolgroup   : 'tablesorter-colgroup',\r\n\t\t\theader     : 'tablesorter-header',\r\n\t\t\theaderRow  : 'tablesorter-headerRow',\r\n\t\t\theaderIn   : 'tablesorter-header-inner',\r\n\t\t\ticon       : 'tablesorter-icon',\r\n\t\t\tprocessing : 'tablesorter-processing',\r\n\t\t\tsortAsc    : 'tablesorter-headerAsc',\r\n\t\t\tsortDesc   : 'tablesorter-headerDesc',\r\n\t\t\tsortNone   : 'tablesorter-headerUnSorted'\r\n\t\t},\r\n\r\n\t\t// labels applied to sortable headers for accessibility (aria) support\r\n\t\tlanguage : {\r\n\t\t\tsortAsc      : 'Ascending sort applied, ',\r\n\t\t\tsortDesc     : 'Descending sort applied, ',\r\n\t\t\tsortNone     : 'No sort applied, ',\r\n\t\t\tsortDisabled : 'sorting is disabled',\r\n\t\t\tnextAsc      : 'activate to apply an ascending sort',\r\n\t\t\tnextDesc     : 'activate to apply a descending sort',\r\n\t\t\tnextNone     : 'activate to remove the sort'\r\n\t\t},\r\n\r\n\t\tregex : {\r\n\t\t\ttemplateContent : /\\{content\\}/g,\r\n\t\t\ttemplateIcon    : /\\{icon\\}/g,\r\n\t\t\ttemplateName    : /\\{name\\}/i,\r\n\t\t\tspaces          : /\\s+/g,\r\n\t\t\tnonWord         : /\\W/g,\r\n\t\t\tformElements    : /(input|select|button|textarea)/i,\r\n\r\n\t\t\t// *** sort functions ***\r\n\t\t\t// regex used in natural sort\r\n\t\t\t// chunk/tokenize numbers & letters\r\n\t\t\tchunk  : /(^([+\\-]?(?:\\d*)(?:\\.\\d*)?(?:[eE][+\\-]?\\d+)?)?$|^0x[0-9a-f]+$|\\d+)/gi,\r\n\t\t\t// replace chunks @ ends\r\n\t\t\tchunks : /(^\\\\0|\\\\0$)/,\r\n\t\t\thex    : /^0x[0-9a-f]+$/i,\r\n\r\n\t\t\t// *** formatFloat ***\r\n\t\t\tcomma                : /,/g,\r\n\t\t\tdigitNonUS           : /[\\s|\\.]/g,\r\n\t\t\tdigitNegativeTest    : /^\\s*\\([.\\d]+\\)/,\r\n\t\t\tdigitNegativeReplace : /^\\s*\\(([.\\d]+)\\)/,\r\n\r\n\t\t\t// *** isDigit ***\r\n\t\t\tdigitTest    : /^[\\-+(]?\\d+[)]?$/,\r\n\t\t\tdigitReplace : /[,.'\"\\s]/g\r\n\r\n\t\t},\r\n\r\n\t\t// digit sort, text location\r\n\t\tstring : {\r\n\t\t\tmax      : 1,\r\n\t\t\tmin      : -1,\r\n\t\t\temptymin : 1,\r\n\t\t\temptymax : -1,\r\n\t\t\tzero     : 0,\r\n\t\t\tnone     : 0,\r\n\t\t\t'null'   : 0,\r\n\t\t\ttop      : true,\r\n\t\t\tbottom   : false\r\n\t\t},\r\n\r\n\t\tkeyCodes : {\r\n\t\t\tenter : 13\r\n\t\t},\r\n\r\n\t\t// placeholder date parser data (globalize)\r\n\t\tdates : {},\r\n\r\n\t\t// These methods can be applied on table.config instance\r\n\t\tinstanceMethods : {},\r\n\r\n\t\t/*\r\n\t\t▄█████ ██████ ██████ ██  ██ █████▄\r\n\t\t▀█▄    ██▄▄     ██   ██  ██ ██▄▄██\r\n\t\t   ▀█▄ ██▀▀     ██   ██  ██ ██▀▀▀\r\n\t\t█████▀ ██████   ██   ▀████▀ ██\r\n\t\t*/\r\n\r\n\t\tsetup : function( table, c ) {\r\n\t\t\t// if no thead or tbody, or tablesorter is already present, quit\r\n\t\t\tif ( !table || !table.tHead || table.tBodies.length === 0 || table.hasInitialized === true ) {\r\n\t\t\t\tif ( ts.debug(c, 'core') ) {\r\n\t\t\t\t\tif ( table.hasInitialized ) {\r\n\t\t\t\t\t\tconsole.warn( 'Stopping initialization. Tablesorter has already been initialized' );\r\n\t\t\t\t\t} else {\r\n\t\t\t\t\t\tconsole.error( 'Stopping initialization! No table, thead or tbody', table );\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t\treturn;\r\n\t\t\t}\r\n\r\n\t\t\tvar tmp = '',\r\n\t\t\t\t$table = $( table ),\r\n\t\t\t\tmeta = $.metadata;\r\n\t\t\t// initialization flag\r\n\t\t\ttable.hasInitialized = false;\r\n\t\t\t// table is being processed flag\r\n\t\t\ttable.isProcessing = true;\r\n\t\t\t// make sure to store the config object\r\n\t\t\ttable.config = c;\r\n\t\t\t// save the settings where they read\r\n\t\t\t$.data( table, 'tablesorter', c );\r\n\t\t\tif ( ts.debug(c, 'core') ) {\r\n\t\t\t\tconsole[ console.group ? 'group' : 'log' ]( 'Initializing tablesorter v' + ts.version );\r\n\t\t\t\t$.data( table, 'startoveralltimer', new Date() );\r\n\t\t\t}\r\n\r\n\t\t\t// removing this in version 3 (only supports jQuery 1.7+)\r\n\t\t\tc.supportsDataObject = ( function( version ) {\r\n\t\t\t\tversion[ 0 ] = parseInt( version[ 0 ], 10 );\r\n\t\t\t\treturn ( version[ 0 ] > 1 ) || ( version[ 0 ] === 1 && parseInt( version[ 1 ], 10 ) >= 4 );\r\n\t\t\t})( $.fn.jquery.split( '.' ) );\r\n\t\t\t// ensure case insensitivity\r\n\t\t\tc.emptyTo = c.emptyTo.toLowerCase();\r\n\t\t\tc.stringTo = c.stringTo.toLowerCase();\r\n\t\t\tc.last = { sortList : [], clickedIndex : -1 };\r\n\t\t\t// add table theme class only if there isn't already one there\r\n\t\t\tif ( !/tablesorter\\-/.test( $table.attr( 'class' ) ) ) {\r\n\t\t\t\ttmp = ( c.theme !== '' ? ' tablesorter-' + c.theme : '' );\r\n\t\t\t}\r\n\r\n\t\t\t// give the table a unique id, which will be used in namespace binding\r\n\t\t\tif ( !c.namespace ) {\r\n\t\t\t\tc.namespace = '.tablesorter' + Math.random().toString( 16 ).slice( 2 );\r\n\t\t\t} else {\r\n\t\t\t\t// make sure namespace starts with a period & doesn't have weird characters\r\n\t\t\t\tc.namespace = '.' + c.namespace.replace( ts.regex.nonWord, '' );\r\n\t\t\t}\r\n\r\n\t\t\tc.table = table;\r\n\t\t\tc.$table = $table\r\n\t\t\t\t// add namespace to table to allow bindings on extra elements to target\r\n\t\t\t\t// the parent table (e.g. parser-input-select)\r\n\t\t\t\t.addClass( ts.css.table + ' ' + c.tableClass + tmp + ' ' + c.namespace.slice(1) )\r\n\t\t\t\t.attr( 'role', 'grid' );\r\n\t\t\tc.$headers = $table.find( c.selectorHeaders );\r\n\r\n\t\t\tc.$table.children().children( 'tr' ).attr( 'role', 'row' );\r\n\t\t\tc.$tbodies = $table.children( 'tbody:not(.' + c.cssInfoBlock + ')' ).attr({\r\n\t\t\t\t'aria-live' : 'polite',\r\n\t\t\t\t'aria-relevant' : 'all'\r\n\t\t\t});\r\n\t\t\tif ( c.$table.children( 'caption' ).length ) {\r\n\t\t\t\ttmp = c.$table.children( 'caption' )[ 0 ];\r\n\t\t\t\tif ( !tmp.id ) { tmp.id = c.namespace.slice( 1 ) + 'caption'; }\r\n\t\t\t\tc.$table.attr( 'aria-labelledby', tmp.id );\r\n\t\t\t}\r\n\t\t\tc.widgetInit = {}; // keep a list of initialized widgets\r\n\t\t\t// change textExtraction via data-attribute\r\n\t\t\tc.textExtraction = c.$table.attr( 'data-text-extraction' ) || c.textExtraction || 'basic';\r\n\t\t\t// build headers\r\n\t\t\tts.buildHeaders( c );\r\n\t\t\t// fixate columns if the users supplies the fixedWidth option\r\n\t\t\t// do this after theme has been applied\r\n\t\t\tts.fixColumnWidth( table );\r\n\t\t\t// add widgets from class name\r\n\t\t\tts.addWidgetFromClass( table );\r\n\t\t\t// add widget options before parsing (e.g. grouping widget has parser settings)\r\n\t\t\tts.applyWidgetOptions( table );\r\n\t\t\t// try to auto detect column type, and store in tables config\r\n\t\t\tts.setupParsers( c );\r\n\t\t\t// start total row count at zero\r\n\t\t\tc.totalRows = 0;\r\n\t\t\t// only validate options while debugging. See #1528\r\n\t\t\tif (c.debug) {\r\n\t\t\t\tts.validateOptions( c );\r\n\t\t\t}\r\n\t\t\t// build the cache for the tbody cells\r\n\t\t\t// delayInit will delay building the cache until the user starts a sort\r\n\t\t\tif ( !c.delayInit ) { ts.buildCache( c ); }\r\n\t\t\t// bind all header events and methods\r\n\t\t\tts.bindEvents( table, c.$headers, true );\r\n\t\t\tts.bindMethods( c );\r\n\t\t\t// get sort list from jQuery data or metadata\r\n\t\t\t// in jQuery < 1.4, an error occurs when calling $table.data()\r\n\t\t\tif ( c.supportsDataObject && typeof $table.data().sortlist !== 'undefined' ) {\r\n\t\t\t\tc.sortList = $table.data().sortlist;\r\n\t\t\t} else if ( meta && ( $table.metadata() && $table.metadata().sortlist ) ) {\r\n\t\t\t\tc.sortList = $table.metadata().sortlist;\r\n\t\t\t}\r\n\t\t\t// apply widget init code\r\n\t\t\tts.applyWidget( table, true );\r\n\t\t\t// if user has supplied a sort list to constructor\r\n\t\t\tif ( c.sortList.length > 0 ) {\r\n\t\t\t\t// save sortList before any sortAppend is added\r\n\t\t\t\tc.last.sortList = c.sortList;\r\n\t\t\t\tts.sortOn( c, c.sortList, {}, !c.initWidgets );\r\n\t\t\t} else {\r\n\t\t\t\tts.setHeadersCss( c );\r\n\t\t\t\tif ( c.initWidgets ) {\r\n\t\t\t\t\t// apply widget format\r\n\t\t\t\t\tts.applyWidget( table, false );\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t\t// show processesing icon\r\n\t\t\tif ( c.showProcessing ) {\r\n\t\t\t\t$table\r\n\t\t\t\t.unbind( 'sortBegin' + c.namespace + ' sortEnd' + c.namespace )\r\n\t\t\t\t.bind( 'sortBegin' + c.namespace + ' sortEnd' + c.namespace, function( e ) {\r\n\t\t\t\t\tclearTimeout( c.timerProcessing );\r\n\t\t\t\t\tts.isProcessing( table );\r\n\t\t\t\t\tif ( e.type === 'sortBegin' ) {\r\n\t\t\t\t\t\tc.timerProcessing = setTimeout( function() {\r\n\t\t\t\t\t\t\tts.isProcessing( table, true );\r\n\t\t\t\t\t\t}, 500 );\r\n\t\t\t\t\t}\r\n\t\t\t\t});\r\n\t\t\t}\r\n\r\n\t\t\t// initialized\r\n\t\t\ttable.hasInitialized = true;\r\n\t\t\ttable.isProcessing = false;\r\n\t\t\tif ( ts.debug(c, 'core') ) {\r\n\t\t\t\tconsole.log( 'Overall initialization time:' + ts.benchmark( $.data( table, 'startoveralltimer' ) ) );\r\n\t\t\t\tif ( ts.debug(c, 'core') && console.groupEnd ) { console.groupEnd(); }\r\n\t\t\t}\r\n\t\t\t$table.triggerHandler( 'tablesorter-initialized', table );\r\n\t\t\tif ( typeof c.initialized === 'function' ) {\r\n\t\t\t\tc.initialized( table );\r\n\t\t\t}\r\n\t\t},\r\n\r\n\t\tbindMethods : function( c ) {\r\n\t\t\tvar $table = c.$table,\r\n\t\t\t\tnamespace = c.namespace,\r\n\t\t\t\tevents = ( 'sortReset update updateRows updateAll updateHeaders addRows updateCell updateComplete ' +\r\n\t\t\t\t\t'sorton appendCache updateCache applyWidgetId applyWidgets refreshWidgets destroy mouseup ' +\r\n\t\t\t\t\t'mouseleave ' ).split( ' ' )\r\n\t\t\t\t\t.join( namespace + ' ' );\r\n\t\t\t// apply easy methods that trigger bound events\r\n\t\t\t$table\r\n\t\t\t.unbind( events.replace( ts.regex.spaces, ' ' ) )\r\n\t\t\t.bind( 'sortReset' + namespace, function( e, callback ) {\r\n\t\t\t\te.stopPropagation();\r\n\t\t\t\t// using this.config to ensure functions are getting a non-cached version of the config\r\n\t\t\t\tts.sortReset( this.config, function( table ) {\r\n\t\t\t\t\tif (table.isApplyingWidgets) {\r\n\t\t\t\t\t\t// multiple triggers in a row... filterReset, then sortReset - see #1361\r\n\t\t\t\t\t\t// wait to update widgets\r\n\t\t\t\t\t\tsetTimeout( function() {\r\n\t\t\t\t\t\t\tts.applyWidget( table, '', callback );\r\n\t\t\t\t\t\t}, 100 );\r\n\t\t\t\t\t} else {\r\n\t\t\t\t\t\tts.applyWidget( table, '', callback );\r\n\t\t\t\t\t}\r\n\t\t\t\t});\r\n\t\t\t})\r\n\t\t\t.bind( 'updateAll' + namespace, function( e, resort, callback ) {\r\n\t\t\t\te.stopPropagation();\r\n\t\t\t\tts.updateAll( this.config, resort, callback );\r\n\t\t\t})\r\n\t\t\t.bind( 'update' + namespace + ' updateRows' + namespace, function( e, resort, callback ) {\r\n\t\t\t\te.stopPropagation();\r\n\t\t\t\tts.update( this.config, resort, callback );\r\n\t\t\t})\r\n\t\t\t.bind( 'updateHeaders' + namespace, function( e, callback ) {\r\n\t\t\t\te.stopPropagation();\r\n\t\t\t\tts.updateHeaders( this.config, callback );\r\n\t\t\t})\r\n\t\t\t.bind( 'updateCell' + namespace, function( e, cell, resort, callback ) {\r\n\t\t\t\te.stopPropagation();\r\n\t\t\t\tts.updateCell( this.config, cell, resort, callback );\r\n\t\t\t})\r\n\t\t\t.bind( 'addRows' + namespace, function( e, $row, resort, callback ) {\r\n\t\t\t\te.stopPropagation();\r\n\t\t\t\tts.addRows( this.config, $row, resort, callback );\r\n\t\t\t})\r\n\t\t\t.bind( 'updateComplete' + namespace, function() {\r\n\t\t\t\tthis.isUpdating = false;\r\n\t\t\t})\r\n\t\t\t.bind( 'sorton' + namespace, function( e, list, callback, init ) {\r\n\t\t\t\te.stopPropagation();\r\n\t\t\t\tts.sortOn( this.config, list, callback, init );\r\n\t\t\t})\r\n\t\t\t.bind( 'appendCache' + namespace, function( e, callback, init ) {\r\n\t\t\t\te.stopPropagation();\r\n\t\t\t\tts.appendCache( this.config, init );\r\n\t\t\t\tif ( $.isFunction( callback ) ) {\r\n\t\t\t\t\tcallback( this );\r\n\t\t\t\t}\r\n\t\t\t})\r\n\t\t\t// $tbodies variable is used by the tbody sorting widget\r\n\t\t\t.bind( 'updateCache' + namespace, function( e, callback, $tbodies ) {\r\n\t\t\t\te.stopPropagation();\r\n\t\t\t\tts.updateCache( this.config, callback, $tbodies );\r\n\t\t\t})\r\n\t\t\t.bind( 'applyWidgetId' + namespace, function( e, id ) {\r\n\t\t\t\te.stopPropagation();\r\n\t\t\t\tts.applyWidgetId( this, id );\r\n\t\t\t})\r\n\t\t\t.bind( 'applyWidgets' + namespace, function( e, callback ) {\r\n\t\t\t\te.stopPropagation();\r\n\t\t\t\t// apply widgets (false = not initializing)\r\n\t\t\t\tts.applyWidget( this, false, callback );\r\n\t\t\t})\r\n\t\t\t.bind( 'refreshWidgets' + namespace, function( e, all, dontapply ) {\r\n\t\t\t\te.stopPropagation();\r\n\t\t\t\tts.refreshWidgets( this, all, dontapply );\r\n\t\t\t})\r\n\t\t\t.bind( 'removeWidget' + namespace, function( e, name, refreshing ) {\r\n\t\t\t\te.stopPropagation();\r\n\t\t\t\tts.removeWidget( this, name, refreshing );\r\n\t\t\t})\r\n\t\t\t.bind( 'destroy' + namespace, function( e, removeClasses, callback ) {\r\n\t\t\t\te.stopPropagation();\r\n\t\t\t\tts.destroy( this, removeClasses, callback );\r\n\t\t\t})\r\n\t\t\t.bind( 'resetToLoadState' + namespace, function( e ) {\r\n\t\t\t\te.stopPropagation();\r\n\t\t\t\t// remove all widgets\r\n\t\t\t\tts.removeWidget( this, true, false );\r\n\t\t\t\tvar tmp = $.extend( true, {}, c.originalSettings );\r\n\t\t\t\t// restore original settings; this clears out current settings, but does not clear\r\n\t\t\t\t// values saved to storage.\r\n\t\t\t\tc = $.extend( true, {}, ts.defaults, tmp );\r\n\t\t\t\tc.originalSettings = tmp;\r\n\t\t\t\tthis.hasInitialized = false;\r\n\t\t\t\t// setup the entire table again\r\n\t\t\t\tts.setup( this, c );\r\n\t\t\t});\r\n\t\t},\r\n\r\n\t\tbindEvents : function( table, $headers, core ) {\r\n\t\t\ttable = $( table )[ 0 ];\r\n\t\t\tvar tmp,\r\n\t\t\t\tc = table.config,\r\n\t\t\t\tnamespace = c.namespace,\r\n\t\t\t\tdownTarget = null;\r\n\t\t\tif ( core !== true ) {\r\n\t\t\t\t$headers.addClass( namespace.slice( 1 ) + '_extra_headers' );\r\n\t\t\t\ttmp = ts.getClosest( $headers, 'table' );\r\n\t\t\t\tif ( tmp.length && tmp[ 0 ].nodeName === 'TABLE' && tmp[ 0 ] !== table ) {\r\n\t\t\t\t\t$( tmp[ 0 ] ).addClass( namespace.slice( 1 ) + '_extra_table' );\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\ttmp = ( c.pointerDown + ' ' + c.pointerUp + ' ' + c.pointerClick + ' sort keyup ' )\r\n\t\t\t\t.replace( ts.regex.spaces, ' ' )\r\n\t\t\t\t.split( ' ' )\r\n\t\t\t\t.join( namespace + ' ' );\r\n\t\t\t// apply event handling to headers and/or additional headers (stickyheaders, scroller, etc)\r\n\t\t\t$headers\r\n\t\t\t// http://stackoverflow.com/questions/5312849/jquery-find-self;\r\n\t\t\t.find( c.selectorSort )\r\n\t\t\t.add( $headers.filter( c.selectorSort ) )\r\n\t\t\t.unbind( tmp )\r\n\t\t\t.bind( tmp, function( e, external ) {\r\n\t\t\t\tvar $cell, cell, temp,\r\n\t\t\t\t\t$target = $( e.target ),\r\n\t\t\t\t\t// wrap event type in spaces, so the match doesn't trigger on inner words\r\n\t\t\t\t\ttype = ' ' + e.type + ' ';\r\n\t\t\t\t// only recognize left clicks\r\n\t\t\t\tif ( ( ( e.which || e.button ) !== 1 && !type.match( ' ' + c.pointerClick + ' | sort | keyup ' ) ) ||\r\n\t\t\t\t\t// allow pressing enter\r\n\t\t\t\t\t( type === ' keyup ' && e.which !== ts.keyCodes.enter ) ||\r\n\t\t\t\t\t// allow triggering a click event (e.which is undefined) & ignore physical clicks\r\n\t\t\t\t\t( type.match( ' ' + c.pointerClick + ' ' ) && typeof e.which !== 'undefined' ) ) {\r\n\t\t\t\t\treturn;\r\n\t\t\t\t}\r\n\t\t\t\t// ignore mouseup if mousedown wasn't on the same target\r\n\t\t\t\tif ( type.match( ' ' + c.pointerUp + ' ' ) && downTarget !== e.target && external !== true ) {\r\n\t\t\t\t\treturn;\r\n\t\t\t\t}\r\n\t\t\t\t// set target on mousedown\r\n\t\t\t\tif ( type.match( ' ' + c.pointerDown + ' ' ) ) {\r\n\t\t\t\t\tdownTarget = e.target;\r\n\t\t\t\t\t// preventDefault needed or jQuery v1.3.2 and older throws an\r\n\t\t\t\t\t// \"Uncaught TypeError: handler.apply is not a function\" error\r\n\t\t\t\t\ttemp = $target.jquery.split( '.' );\r\n\t\t\t\t\tif ( temp[ 0 ] === '1' && temp[ 1 ] < 4 ) { e.preventDefault(); }\r\n\t\t\t\t\treturn;\r\n\t\t\t\t}\r\n\t\t\t\tdownTarget = null;\r\n\t\t\t\t$cell = ts.getClosest( $( this ), '.' + ts.css.header );\r\n\t\t\t\t// prevent sort being triggered on form elements\r\n\t\t\t\tif ( ts.regex.formElements.test( e.target.nodeName ) ||\r\n\t\t\t\t\t// nosort class name, or elements within a nosort container\r\n\t\t\t\t\t$target.hasClass( c.cssNoSort ) || $target.parents( '.' + c.cssNoSort ).length > 0 ||\r\n\t\t\t\t\t// disabled cell directly clicked\r\n\t\t\t\t\t$cell.hasClass( 'sorter-false' ) ||\r\n\t\t\t\t\t// elements within a button\r\n\t\t\t\t\t$target.parents( 'button' ).length > 0 ) {\r\n\t\t\t\t\treturn !c.cancelSelection;\r\n\t\t\t\t}\r\n\t\t\t\tif ( c.delayInit && ts.isEmptyObject( c.cache ) ) {\r\n\t\t\t\t\tts.buildCache( c );\r\n\t\t\t\t}\r\n\t\t\t\t// use column index from data-attribute or index of current row; fixes #1116\r\n\t\t\t\tc.last.clickedIndex = $cell.attr( 'data-column' ) || $cell.index();\r\n\t\t\t\tcell = c.$headerIndexed[ c.last.clickedIndex ][0];\r\n\t\t\t\tif ( cell && !cell.sortDisabled ) {\r\n\t\t\t\t\tts.initSort( c, cell, e );\r\n\t\t\t\t}\r\n\t\t\t});\r\n\t\t\tif ( c.cancelSelection ) {\r\n\t\t\t\t// cancel selection\r\n\t\t\t\t$headers\r\n\t\t\t\t\t.attr( 'unselectable', 'on' )\r\n\t\t\t\t\t.bind( 'selectstart', false )\r\n\t\t\t\t\t.css({\r\n\t\t\t\t\t\t'user-select' : 'none',\r\n\t\t\t\t\t\t'MozUserSelect' : 'none' // not needed for jQuery 1.8+\r\n\t\t\t\t\t});\r\n\t\t\t}\r\n\t\t},\r\n\r\n\t\tbuildHeaders : function( c ) {\r\n\t\t\tvar $temp, icon, timer, indx;\r\n\t\t\tc.headerList = [];\r\n\t\t\tc.headerContent = [];\r\n\t\t\tc.sortVars = [];\r\n\t\t\tif ( ts.debug(c, 'core') ) {\r\n\t\t\t\ttimer = new Date();\r\n\t\t\t}\r\n\t\t\t// children tr in tfoot - see issue #196 & #547\r\n\t\t\t// don't pass table.config to computeColumnIndex here - widgets (math) pass it to \"quickly\" index tbody cells\r\n\t\t\tc.columns = ts.computeColumnIndex( c.$table.children( 'thead, tfoot' ).children( 'tr' ) );\r\n\t\t\t// add icon if cssIcon option exists\r\n\t\t\ticon = c.cssIcon ?\r\n\t\t\t\t'<i class=\"' + ( c.cssIcon === ts.css.icon ? ts.css.icon : c.cssIcon + ' ' + ts.css.icon ) + '\"></i>' :\r\n\t\t\t\t'';\r\n\t\t\t// redefine c.$headers here in case of an updateAll that replaces or adds an entire header cell - see #683\r\n\t\t\tc.$headers = $( $.map( c.$table.find( c.selectorHeaders ), function( elem, index ) {\r\n\t\t\t\tvar configHeaders, header, column, template, tmp,\r\n\t\t\t\t\t$elem = $( elem );\r\n\t\t\t\t// ignore cell (don't add it to c.$headers) if row has ignoreRow class\r\n\t\t\t\tif ( ts.getClosest( $elem, 'tr' ).hasClass( c.cssIgnoreRow ) ) { return; }\r\n\t\t\t\t// transfer data-column to element if not th/td - #1459\r\n\t\t\t\tif ( !/(th|td)/i.test( elem.nodeName ) ) {\r\n\t\t\t\t\ttmp = ts.getClosest( $elem, 'th, td' );\r\n\t\t\t\t\t$elem.attr( 'data-column', tmp.attr( 'data-column' ) );\r\n\t\t\t\t}\r\n\t\t\t\t// make sure to get header cell & not column indexed cell\r\n\t\t\t\tconfigHeaders = ts.getColumnData( c.table, c.headers, index, true );\r\n\t\t\t\t// save original header content\r\n\t\t\t\tc.headerContent[ index ] = $elem.html();\r\n\t\t\t\t// if headerTemplate is empty, don't reformat the header cell\r\n\t\t\t\tif ( c.headerTemplate !== '' && !$elem.find( '.' + ts.css.headerIn ).length ) {\r\n\t\t\t\t\t// set up header template\r\n\t\t\t\t\ttemplate = c.headerTemplate\r\n\t\t\t\t\t\t.replace( ts.regex.templateContent, $elem.html() )\r\n\t\t\t\t\t\t.replace( ts.regex.templateIcon, $elem.find( '.' + ts.css.icon ).length ? '' : icon );\r\n\t\t\t\t\tif ( c.onRenderTemplate ) {\r\n\t\t\t\t\t\theader = c.onRenderTemplate.apply( $elem, [ index, template ] );\r\n\t\t\t\t\t\t// only change t if something is returned\r\n\t\t\t\t\t\tif ( header && typeof header === 'string' ) {\r\n\t\t\t\t\t\t\ttemplate = header;\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\t\t\t\t\t$elem.html( '<div class=\"' + ts.css.headerIn + '\">' + template + '</div>' ); // faster than wrapInner\r\n\t\t\t\t}\r\n\t\t\t\tif ( c.onRenderHeader ) {\r\n\t\t\t\t\tc.onRenderHeader.apply( $elem, [ index, c, c.$table ] );\r\n\t\t\t\t}\r\n\t\t\t\tcolumn = parseInt( $elem.attr( 'data-column' ), 10 );\r\n\t\t\t\telem.column = column;\r\n\t\t\t\ttmp = ts.getOrder( ts.getData( $elem, configHeaders, 'sortInitialOrder' ) || c.sortInitialOrder );\r\n\t\t\t\t// this may get updated numerous times if there are multiple rows\r\n\t\t\t\tc.sortVars[ column ] = {\r\n\t\t\t\t\tcount : -1, // set to -1 because clicking on the header automatically adds one\r\n\t\t\t\t\torder : tmp ?\r\n\t\t\t\t\t\t( c.sortReset ? [ 1, 0, 2 ] : [ 1, 0 ] ) : // desc, asc, unsorted\r\n\t\t\t\t\t\t( c.sortReset ? [ 0, 1, 2 ] : [ 0, 1 ] ),  // asc, desc, unsorted\r\n\t\t\t\t\tlockedOrder : false,\r\n\t\t\t\t\tsortedBy : ''\r\n\t\t\t\t};\r\n\t\t\t\ttmp = ts.getData( $elem, configHeaders, 'lockedOrder' ) || false;\r\n\t\t\t\tif ( typeof tmp !== 'undefined' && tmp !== false ) {\r\n\t\t\t\t\tc.sortVars[ column ].lockedOrder = true;\r\n\t\t\t\t\tc.sortVars[ column ].order = ts.getOrder( tmp ) ? [ 1, 1 ] : [ 0, 0 ];\r\n\t\t\t\t}\r\n\t\t\t\t// add cell to headerList\r\n\t\t\t\tc.headerList[ index ] = elem;\r\n\t\t\t\t$elem.addClass( ts.css.header + ' ' + c.cssHeader );\r\n\t\t\t\t// add to parent in case there are multiple rows\r\n\t\t\t\tts.getClosest( $elem, 'tr' )\r\n\t\t\t\t\t.addClass( ts.css.headerRow + ' ' + c.cssHeaderRow )\r\n\t\t\t\t\t.attr( 'role', 'row' );\r\n\t\t\t\t// allow keyboard cursor to focus on element\r\n\t\t\t\tif ( c.tabIndex ) {\r\n\t\t\t\t\t$elem.attr( 'tabindex', 0 );\r\n\t\t\t\t}\r\n\t\t\t\treturn elem;\r\n\t\t\t}) );\r\n\t\t\t// cache headers per column\r\n\t\t\tc.$headerIndexed = [];\r\n\t\t\tfor ( indx = 0; indx < c.columns; indx++ ) {\r\n\t\t\t\t// colspan in header making a column undefined\r\n\t\t\t\tif ( ts.isEmptyObject( c.sortVars[ indx ] ) ) {\r\n\t\t\t\t\tc.sortVars[ indx ] = {};\r\n\t\t\t\t}\r\n\t\t\t\t// Use c.$headers.parent() in case selectorHeaders doesn't point to the th/td\r\n\t\t\t\t$temp = c.$headers.filter( '[data-column=\"' + indx + '\"]' );\r\n\t\t\t\t// target sortable column cells, unless there are none, then use non-sortable cells\r\n\t\t\t\t// .last() added in jQuery 1.4; use .filter(':last') to maintain compatibility with jQuery v1.2.6\r\n\t\t\t\tc.$headerIndexed[ indx ] = $temp.length ?\r\n\t\t\t\t\t$temp.not( '.sorter-false' ).length ?\r\n\t\t\t\t\t\t$temp.not( '.sorter-false' ).filter( ':last' ) :\r\n\t\t\t\t\t\t$temp.filter( ':last' ) :\r\n\t\t\t\t\t$();\r\n\t\t\t}\r\n\t\t\tc.$table.find( c.selectorHeaders ).attr({\r\n\t\t\t\tscope: 'col',\r\n\t\t\t\trole : 'columnheader'\r\n\t\t\t});\r\n\t\t\t// enable/disable sorting\r\n\t\t\tts.updateHeader( c );\r\n\t\t\tif ( ts.debug(c, 'core') ) {\r\n\t\t\t\tconsole.log( 'Built headers:' + ts.benchmark( timer ) );\r\n\t\t\t\tconsole.log( c.$headers );\r\n\t\t\t}\r\n\t\t},\r\n\r\n\t\t// Use it to add a set of methods to table.config which will be available for all tables.\r\n\t\t// This should be done before table initialization\r\n\t\taddInstanceMethods : function( methods ) {\r\n\t\t\t$.extend( ts.instanceMethods, methods );\r\n\t\t},\r\n\r\n\t\t/*\r\n\t\t█████▄ ▄████▄ █████▄ ▄█████ ██████ █████▄ ▄█████\r\n\t\t██▄▄██ ██▄▄██ ██▄▄██ ▀█▄    ██▄▄   ██▄▄██ ▀█▄\r\n\t\t██▀▀▀  ██▀▀██ ██▀██     ▀█▄ ██▀▀   ██▀██     ▀█▄\r\n\t\t██     ██  ██ ██  ██ █████▀ ██████ ██  ██ █████▀\r\n\t\t*/\r\n\t\tsetupParsers : function( c, $tbodies ) {\r\n\t\t\tvar rows, list, span, max, colIndex, indx, header, configHeaders,\r\n\t\t\t\tnoParser, parser, extractor, time, tbody, len,\r\n\t\t\t\ttable = c.table,\r\n\t\t\t\ttbodyIndex = 0,\r\n\t\t\t\tdebug = ts.debug(c, 'core'),\r\n\t\t\t\tdebugOutput = {};\r\n\t\t\t// update table bodies in case we start with an empty table\r\n\t\t\tc.$tbodies = c.$table.children( 'tbody:not(.' + c.cssInfoBlock + ')' );\r\n\t\t\ttbody = typeof $tbodies === 'undefined' ? c.$tbodies : $tbodies;\r\n\t\t\tlen = tbody.length;\r\n\t\t\tif ( len === 0 ) {\r\n\t\t\t\treturn debug ? console.warn( 'Warning: *Empty table!* Not building a parser cache' ) : '';\r\n\t\t\t} else if ( debug ) {\r\n\t\t\t\ttime = new Date();\r\n\t\t\t\tconsole[ console.group ? 'group' : 'log' ]( 'Detecting parsers for each column' );\r\n\t\t\t}\r\n\t\t\tlist = {\r\n\t\t\t\textractors: [],\r\n\t\t\t\tparsers: []\r\n\t\t\t};\r\n\t\t\twhile ( tbodyIndex < len ) {\r\n\t\t\t\trows = tbody[ tbodyIndex ].rows;\r\n\t\t\t\tif ( rows.length ) {\r\n\t\t\t\t\tcolIndex = 0;\r\n\t\t\t\t\tmax = c.columns;\r\n\t\t\t\t\tfor ( indx = 0; indx < max; indx++ ) {\r\n\t\t\t\t\t\theader = c.$headerIndexed[ colIndex ];\r\n\t\t\t\t\t\tif ( header && header.length ) {\r\n\t\t\t\t\t\t\t// get column indexed table cell; adding true parameter fixes #1362 but\r\n\t\t\t\t\t\t\t// it would break backwards compatibility...\r\n\t\t\t\t\t\t\tconfigHeaders = ts.getColumnData( table, c.headers, colIndex ); // , true );\r\n\t\t\t\t\t\t\t// get column parser/extractor\r\n\t\t\t\t\t\t\textractor = ts.getParserById( ts.getData( header, configHeaders, 'extractor' ) );\r\n\t\t\t\t\t\t\tparser = ts.getParserById( ts.getData( header, configHeaders, 'sorter' ) );\r\n\t\t\t\t\t\t\tnoParser = ts.getData( header, configHeaders, 'parser' ) === 'false';\r\n\t\t\t\t\t\t\t// empty cells behaviour - keeping emptyToBottom for backwards compatibility\r\n\t\t\t\t\t\t\tc.empties[colIndex] = (\r\n\t\t\t\t\t\t\t\tts.getData( header, configHeaders, 'empty' ) ||\r\n\t\t\t\t\t\t\t\tc.emptyTo || ( c.emptyToBottom ? 'bottom' : 'top' ) ).toLowerCase();\r\n\t\t\t\t\t\t\t// text strings behaviour in numerical sorts\r\n\t\t\t\t\t\t\tc.strings[colIndex] = (\r\n\t\t\t\t\t\t\t\tts.getData( header, configHeaders, 'string' ) ||\r\n\t\t\t\t\t\t\t\tc.stringTo ||\r\n\t\t\t\t\t\t\t\t'max' ).toLowerCase();\r\n\t\t\t\t\t\t\tif ( noParser ) {\r\n\t\t\t\t\t\t\t\tparser = ts.getParserById( 'no-parser' );\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\tif ( !extractor ) {\r\n\t\t\t\t\t\t\t\t// For now, maybe detect someday\r\n\t\t\t\t\t\t\t\textractor = false;\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\tif ( !parser ) {\r\n\t\t\t\t\t\t\t\tparser = ts.detectParserForColumn( c, rows, -1, colIndex );\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\tif ( debug ) {\r\n\t\t\t\t\t\t\t\tdebugOutput[ '(' + colIndex + ') ' + header.text() ] = {\r\n\t\t\t\t\t\t\t\t\tparser : parser.id,\r\n\t\t\t\t\t\t\t\t\textractor : extractor ? extractor.id : 'none',\r\n\t\t\t\t\t\t\t\t\tstring : c.strings[ colIndex ],\r\n\t\t\t\t\t\t\t\t\tempty  : c.empties[ colIndex ]\r\n\t\t\t\t\t\t\t\t};\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\tlist.parsers[ colIndex ] = parser;\r\n\t\t\t\t\t\t\tlist.extractors[ colIndex ] = extractor;\r\n\t\t\t\t\t\t\tspan = header[ 0 ].colSpan - 1;\r\n\t\t\t\t\t\t\tif ( span > 0 ) {\r\n\t\t\t\t\t\t\t\tcolIndex += span;\r\n\t\t\t\t\t\t\t\tmax += span;\r\n\t\t\t\t\t\t\t\twhile ( span + 1 > 0 ) {\r\n\t\t\t\t\t\t\t\t\t// set colspan columns to use the same parsers & extractors\r\n\t\t\t\t\t\t\t\t\tlist.parsers[ colIndex - span ] = parser;\r\n\t\t\t\t\t\t\t\t\tlist.extractors[ colIndex - span ] = extractor;\r\n\t\t\t\t\t\t\t\t\tspan--;\r\n\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\tcolIndex++;\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t\ttbodyIndex += ( list.parsers.length ) ? len : 1;\r\n\t\t\t}\r\n\t\t\tif ( debug ) {\r\n\t\t\t\tif ( !ts.isEmptyObject( debugOutput ) ) {\r\n\t\t\t\t\tconsole[ console.table ? 'table' : 'log' ]( debugOutput );\r\n\t\t\t\t} else {\r\n\t\t\t\t\tconsole.warn( '  No parsers detected!' );\r\n\t\t\t\t}\r\n\t\t\t\tconsole.log( 'Completed detecting parsers' + ts.benchmark( time ) );\r\n\t\t\t\tif ( console.groupEnd ) { console.groupEnd(); }\r\n\t\t\t}\r\n\t\t\tc.parsers = list.parsers;\r\n\t\t\tc.extractors = list.extractors;\r\n\t\t},\r\n\r\n\t\taddParser : function( parser ) {\r\n\t\t\tvar indx,\r\n\t\t\t\tlen = ts.parsers.length,\r\n\t\t\t\tadd = true;\r\n\t\t\tfor ( indx = 0; indx < len; indx++ ) {\r\n\t\t\t\tif ( ts.parsers[ indx ].id.toLowerCase() === parser.id.toLowerCase() ) {\r\n\t\t\t\t\tadd = false;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\tif ( add ) {\r\n\t\t\t\tts.parsers[ ts.parsers.length ] = parser;\r\n\t\t\t}\r\n\t\t},\r\n\r\n\t\tgetParserById : function( name ) {\r\n\t\t\t/*jshint eqeqeq:false */ // eslint-disable-next-line eqeqeq\r\n\t\t\tif ( name == 'false' ) { return false; }\r\n\t\t\tvar indx,\r\n\t\t\t\tlen = ts.parsers.length;\r\n\t\t\tfor ( indx = 0; indx < len; indx++ ) {\r\n\t\t\t\tif ( ts.parsers[ indx ].id.toLowerCase() === ( name.toString() ).toLowerCase() ) {\r\n\t\t\t\t\treturn ts.parsers[ indx ];\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\treturn false;\r\n\t\t},\r\n\r\n\t\tdetectParserForColumn : function( c, rows, rowIndex, cellIndex ) {\r\n\t\t\tvar cur, $node, row,\r\n\t\t\t\tindx = ts.parsers.length,\r\n\t\t\t\tnode = false,\r\n\t\t\t\tnodeValue = '',\r\n\t\t\t\tdebug = ts.debug(c, 'core'),\r\n\t\t\t\tkeepLooking = true;\r\n\t\t\twhile ( nodeValue === '' && keepLooking ) {\r\n\t\t\t\trowIndex++;\r\n\t\t\t\trow = rows[ rowIndex ];\r\n\t\t\t\t// stop looking after 50 empty rows\r\n\t\t\t\tif ( row && rowIndex < 50 ) {\r\n\t\t\t\t\tif ( row.className.indexOf( ts.cssIgnoreRow ) < 0 ) {\r\n\t\t\t\t\t\tnode = rows[ rowIndex ].cells[ cellIndex ];\r\n\t\t\t\t\t\tnodeValue = ts.getElementText( c, node, cellIndex );\r\n\t\t\t\t\t\t$node = $( node );\r\n\t\t\t\t\t\tif ( debug ) {\r\n\t\t\t\t\t\t\tconsole.log( 'Checking if value was empty on row ' + rowIndex + ', column: ' +\r\n\t\t\t\t\t\t\t\tcellIndex + ': \"' + nodeValue + '\"' );\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\t\t\t\t} else {\r\n\t\t\t\t\tkeepLooking = false;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\twhile ( --indx >= 0 ) {\r\n\t\t\t\tcur = ts.parsers[ indx ];\r\n\t\t\t\t// ignore the default text parser because it will always be true\r\n\t\t\t\tif ( cur && cur.id !== 'text' && cur.is && cur.is( nodeValue, c.table, node, $node ) ) {\r\n\t\t\t\t\treturn cur;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\t// nothing found, return the generic parser (text)\r\n\t\t\treturn ts.getParserById( 'text' );\r\n\t\t},\r\n\r\n\t\tgetElementText : function( c, node, cellIndex ) {\r\n\t\t\tif ( !node ) { return ''; }\r\n\t\t\tvar tmp,\r\n\t\t\t\textract = c.textExtraction || '',\r\n\t\t\t\t// node could be a jquery object\r\n\t\t\t\t// http://jsperf.com/jquery-vs-instanceof-jquery/2\r\n\t\t\t\t$node = node.jquery ? node : $( node );\r\n\t\t\tif ( typeof extract === 'string' ) {\r\n\t\t\t\t// check data-attribute first when set to 'basic'; don't use node.innerText - it's really slow!\r\n\t\t\t\t// http://www.kellegous.com/j/2013/02/27/innertext-vs-textcontent/\r\n\t\t\t\tif ( extract === 'basic' && typeof ( tmp = $node.attr( c.textAttribute ) ) !== 'undefined' ) {\r\n\t\t\t\t\treturn $.trim( tmp );\r\n\t\t\t\t}\r\n\t\t\t\treturn $.trim( node.textContent || $node.text() );\r\n\t\t\t} else {\r\n\t\t\t\tif ( typeof extract === 'function' ) {\r\n\t\t\t\t\treturn $.trim( extract( $node[ 0 ], c.table, cellIndex ) );\r\n\t\t\t\t} else if ( typeof ( tmp = ts.getColumnData( c.table, extract, cellIndex ) ) === 'function' ) {\r\n\t\t\t\t\treturn $.trim( tmp( $node[ 0 ], c.table, cellIndex ) );\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\t// fallback\r\n\t\t\treturn $.trim( $node[ 0 ].textContent || $node.text() );\r\n\t\t},\r\n\r\n\t\t// centralized function to extract/parse cell contents\r\n\t\tgetParsedText : function( c, cell, colIndex, txt ) {\r\n\t\t\tif ( typeof txt === 'undefined' ) {\r\n\t\t\t\ttxt = ts.getElementText( c, cell, colIndex );\r\n\t\t\t}\r\n\t\t\t// if no parser, make sure to return the txt\r\n\t\t\tvar val = '' + txt,\r\n\t\t\t\tparser = c.parsers[ colIndex ],\r\n\t\t\t\textractor = c.extractors[ colIndex ];\r\n\t\t\tif ( parser ) {\r\n\t\t\t\t// do extract before parsing, if there is one\r\n\t\t\t\tif ( extractor && typeof extractor.format === 'function' ) {\r\n\t\t\t\t\ttxt = extractor.format( txt, c.table, cell, colIndex );\r\n\t\t\t\t}\r\n\t\t\t\t// allow parsing if the string is empty, previously parsing would change it to zero,\r\n\t\t\t\t// in case the parser needs to extract data from the table cell attributes\r\n\t\t\t\tval = parser.id === 'no-parser' ? '' :\r\n\t\t\t\t\t// make sure txt is a string (extractor may have converted it)\r\n\t\t\t\t\tparser.format( '' + txt, c.table, cell, colIndex );\r\n\t\t\t\tif ( c.ignoreCase && typeof val === 'string' ) {\r\n\t\t\t\t\tval = val.toLowerCase();\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\treturn val;\r\n\t\t},\r\n\r\n\t\t/*\r\n\t\t▄████▄ ▄████▄ ▄████▄ ██  ██ ██████\r\n\t\t██  ▀▀ ██▄▄██ ██  ▀▀ ██▄▄██ ██▄▄\r\n\t\t██  ▄▄ ██▀▀██ ██  ▄▄ ██▀▀██ ██▀▀\r\n\t\t▀████▀ ██  ██ ▀████▀ ██  ██ ██████\r\n\t\t*/\r\n\t\tbuildCache : function( c, callback, $tbodies ) {\r\n\t\t\tvar cache, val, txt, rowIndex, colIndex, tbodyIndex, $tbody, $row,\r\n\t\t\t\tcols, $cells, cell, cacheTime, totalRows, rowData, prevRowData,\r\n\t\t\t\tcolMax, span, cacheIndex, hasParser, max, len, index,\r\n\t\t\t\ttable = c.table,\r\n\t\t\t\tparsers = c.parsers,\r\n\t\t\t\tdebug = ts.debug(c, 'core');\r\n\t\t\t// update tbody variable\r\n\t\t\tc.$tbodies = c.$table.children( 'tbody:not(.' + c.cssInfoBlock + ')' );\r\n\t\t\t$tbody = typeof $tbodies === 'undefined' ? c.$tbodies : $tbodies,\r\n\t\t\tc.cache = {};\r\n\t\t\tc.totalRows = 0;\r\n\t\t\t// if no parsers found, return - it's an empty table.\r\n\t\t\tif ( !parsers ) {\r\n\t\t\t\treturn debug ? console.warn( 'Warning: *Empty table!* Not building a cache' ) : '';\r\n\t\t\t}\r\n\t\t\tif ( debug ) {\r\n\t\t\t\tcacheTime = new Date();\r\n\t\t\t}\r\n\t\t\t// processing icon\r\n\t\t\tif ( c.showProcessing ) {\r\n\t\t\t\tts.isProcessing( table, true );\r\n\t\t\t}\r\n\t\t\tfor ( tbodyIndex = 0; tbodyIndex < $tbody.length; tbodyIndex++ ) {\r\n\t\t\t\tcolMax = []; // column max value per tbody\r\n\t\t\t\tcache = c.cache[ tbodyIndex ] = {\r\n\t\t\t\t\tnormalized: [] // array of normalized row data; last entry contains 'rowData' above\r\n\t\t\t\t\t// colMax: #   // added at the end\r\n\t\t\t\t};\r\n\r\n\t\t\t\ttotalRows = ( $tbody[ tbodyIndex ] && $tbody[ tbodyIndex ].rows.length ) || 0;\r\n\t\t\t\tfor ( rowIndex = 0; rowIndex < totalRows; ++rowIndex ) {\r\n\t\t\t\t\trowData = {\r\n\t\t\t\t\t\t// order: original row order #\r\n\t\t\t\t\t\t// $row : jQuery Object[]\r\n\t\t\t\t\t\tchild: [], // child row text (filter widget)\r\n\t\t\t\t\t\traw: []    // original row text\r\n\t\t\t\t\t};\r\n\t\t\t\t\t/** Add the table data to main data array */\r\n\t\t\t\t\t$row = $( $tbody[ tbodyIndex ].rows[ rowIndex ] );\r\n\t\t\t\t\tcols = [];\r\n\t\t\t\t\t// ignore \"remove-me\" rows\r\n\t\t\t\t\tif ( $row.hasClass( c.selectorRemove.slice(1) ) ) {\r\n\t\t\t\t\t\tcontinue;\r\n\t\t\t\t\t}\r\n\t\t\t\t\t// if this is a child row, add it to the last row's children and continue to the next row\r\n\t\t\t\t\t// ignore child row class, if it is the first row\r\n\t\t\t\t\tif ( $row.hasClass( c.cssChildRow ) && rowIndex !== 0 ) {\r\n\t\t\t\t\t\tlen = cache.normalized.length - 1;\r\n\t\t\t\t\t\tprevRowData = cache.normalized[ len ][ c.columns ];\r\n\t\t\t\t\t\tprevRowData.$row = prevRowData.$row.add( $row );\r\n\t\t\t\t\t\t// add 'hasChild' class name to parent row\r\n\t\t\t\t\t\tif ( !$row.prev().hasClass( c.cssChildRow ) ) {\r\n\t\t\t\t\t\t\t$row.prev().addClass( ts.css.cssHasChild );\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\t// save child row content (un-parsed!)\r\n\t\t\t\t\t\t$cells = $row.children( 'th, td' );\r\n\t\t\t\t\t\tlen = prevRowData.child.length;\r\n\t\t\t\t\t\tprevRowData.child[ len ] = [];\r\n\t\t\t\t\t\t// child row content does not account for colspans/rowspans; so indexing may be off\r\n\t\t\t\t\t\tcacheIndex = 0;\r\n\t\t\t\t\t\tmax = c.columns;\r\n\t\t\t\t\t\tfor ( colIndex = 0; colIndex < max; colIndex++ ) {\r\n\t\t\t\t\t\t\tcell = $cells[ colIndex ];\r\n\t\t\t\t\t\t\tif ( cell ) {\r\n\t\t\t\t\t\t\t\tprevRowData.child[ len ][ colIndex ] = ts.getParsedText( c, cell, colIndex );\r\n\t\t\t\t\t\t\t\tspan = $cells[ colIndex ].colSpan - 1;\r\n\t\t\t\t\t\t\t\tif ( span > 0 ) {\r\n\t\t\t\t\t\t\t\t\tcacheIndex += span;\r\n\t\t\t\t\t\t\t\t\tmax += span;\r\n\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\tcacheIndex++;\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\t// go to the next for loop\r\n\t\t\t\t\t\tcontinue;\r\n\t\t\t\t\t}\r\n\t\t\t\t\trowData.$row = $row;\r\n\t\t\t\t\trowData.order = rowIndex; // add original row position to rowCache\r\n\t\t\t\t\tcacheIndex = 0;\r\n\t\t\t\t\tmax = c.columns;\r\n\t\t\t\t\tfor ( colIndex = 0; colIndex < max; ++colIndex ) {\r\n\t\t\t\t\t\tcell = $row[ 0 ].cells[ colIndex ];\r\n\t\t\t\t\t\tif ( cell && cacheIndex < c.columns ) {\r\n\t\t\t\t\t\t\thasParser = typeof parsers[ cacheIndex ] !== 'undefined';\r\n\t\t\t\t\t\t\tif ( !hasParser && debug ) {\r\n\t\t\t\t\t\t\t\tconsole.warn( 'No parser found for row: ' + rowIndex + ', column: ' + colIndex +\r\n\t\t\t\t\t\t\t\t\t'; cell containing: \"' + $(cell).text() + '\"; does it have a header?' );\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\tval = ts.getElementText( c, cell, cacheIndex );\r\n\t\t\t\t\t\t\trowData.raw[ cacheIndex ] = val; // save original row text\r\n\t\t\t\t\t\t\t// save raw column text even if there is no parser set\r\n\t\t\t\t\t\t\ttxt = ts.getParsedText( c, cell, cacheIndex, val );\r\n\t\t\t\t\t\t\tcols[ cacheIndex ] = txt;\r\n\t\t\t\t\t\t\tif ( hasParser && ( parsers[ cacheIndex ].type || '' ).toLowerCase() === 'numeric' ) {\r\n\t\t\t\t\t\t\t\t// determine column max value (ignore sign)\r\n\t\t\t\t\t\t\t\tcolMax[ cacheIndex ] = Math.max( Math.abs( txt ) || 0, colMax[ cacheIndex ] || 0 );\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t// allow colSpan in tbody\r\n\t\t\t\t\t\t\tspan = cell.colSpan - 1;\r\n\t\t\t\t\t\t\tif ( span > 0 ) {\r\n\t\t\t\t\t\t\t\tindex = 0;\r\n\t\t\t\t\t\t\t\twhile ( index <= span ) {\r\n\t\t\t\t\t\t\t\t\t// duplicate text (or not) to spanned columns\r\n\t\t\t\t\t\t\t\t\t// instead of setting duplicate span to empty string, use textExtraction to try to get a value\r\n\t\t\t\t\t\t\t\t\t// see http://stackoverflow.com/q/36449711/145346\r\n\t\t\t\t\t\t\t\t\ttxt = c.duplicateSpan || index === 0 ?\r\n\t\t\t\t\t\t\t\t\t\ttxt :\r\n\t\t\t\t\t\t\t\t\t\ttypeof c.textExtraction !== 'string' ?\r\n\t\t\t\t\t\t\t\t\t\t\tts.getElementText( c, cell, cacheIndex + index ) || '' :\r\n\t\t\t\t\t\t\t\t\t\t\t'';\r\n\t\t\t\t\t\t\t\t\trowData.raw[ cacheIndex + index ] = txt;\r\n\t\t\t\t\t\t\t\t\tcols[ cacheIndex + index ] = txt;\r\n\t\t\t\t\t\t\t\t\tindex++;\r\n\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\tcacheIndex += span;\r\n\t\t\t\t\t\t\t\tmax += span;\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\tcacheIndex++;\r\n\t\t\t\t\t}\r\n\t\t\t\t\t// ensure rowData is always in the same location (after the last column)\r\n\t\t\t\t\tcols[ c.columns ] = rowData;\r\n\t\t\t\t\tcache.normalized[ cache.normalized.length ] = cols;\r\n\t\t\t\t}\r\n\t\t\t\tcache.colMax = colMax;\r\n\t\t\t\t// total up rows, not including child rows\r\n\t\t\t\tc.totalRows += cache.normalized.length;\r\n\r\n\t\t\t}\r\n\t\t\tif ( c.showProcessing ) {\r\n\t\t\t\tts.isProcessing( table ); // remove processing icon\r\n\t\t\t}\r\n\t\t\tif ( debug ) {\r\n\t\t\t\tlen = Math.min( 5, c.cache[ 0 ].normalized.length );\r\n\t\t\t\tconsole[ console.group ? 'group' : 'log' ]( 'Building cache for ' + c.totalRows +\r\n\t\t\t\t\t' rows (showing ' + len + ' rows in log) and ' + c.columns + ' columns' +\r\n\t\t\t\t\tts.benchmark( cacheTime ) );\r\n\t\t\t\tval = {};\r\n\t\t\t\tfor ( colIndex = 0; colIndex < c.columns; colIndex++ ) {\r\n\t\t\t\t\tfor ( cacheIndex = 0; cacheIndex < len; cacheIndex++ ) {\r\n\t\t\t\t\t\tif ( !val[ 'row: ' + cacheIndex ] ) {\r\n\t\t\t\t\t\t\tval[ 'row: ' + cacheIndex ] = {};\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\tval[ 'row: ' + cacheIndex ][ c.$headerIndexed[ colIndex ].text() ] =\r\n\t\t\t\t\t\t\tc.cache[ 0 ].normalized[ cacheIndex ][ colIndex ];\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t\tconsole[ console.table ? 'table' : 'log' ]( val );\r\n\t\t\t\tif ( console.groupEnd ) { console.groupEnd(); }\r\n\t\t\t}\r\n\t\t\tif ( $.isFunction( callback ) ) {\r\n\t\t\t\tcallback( table );\r\n\t\t\t}\r\n\t\t},\r\n\r\n\t\tgetColumnText : function( table, column, callback, rowFilter ) {\r\n\t\t\ttable = $( table )[0];\r\n\t\t\tvar tbodyIndex, rowIndex, cache, row, tbodyLen, rowLen, raw, parsed, $cell, result,\r\n\t\t\t\thasCallback = typeof callback === 'function',\r\n\t\t\t\tallColumns = column === 'all',\r\n\t\t\t\tdata = { raw : [], parsed: [], $cell: [] },\r\n\t\t\t\tc = table.config;\r\n\t\t\tif ( ts.isEmptyObject( c ) ) {\r\n\t\t\t\tif ( ts.debug(c, 'core') ) {\r\n\t\t\t\t\tconsole.warn( 'No cache found - aborting getColumnText function!' );\r\n\t\t\t\t}\r\n\t\t\t} else {\r\n\t\t\t\ttbodyLen = c.$tbodies.length;\r\n\t\t\t\tfor ( tbodyIndex = 0; tbodyIndex < tbodyLen; tbodyIndex++ ) {\r\n\t\t\t\t\tcache = c.cache[ tbodyIndex ].normalized;\r\n\t\t\t\t\trowLen = cache.length;\r\n\t\t\t\t\tfor ( rowIndex = 0; rowIndex < rowLen; rowIndex++ ) {\r\n\t\t\t\t\t\trow = cache[ rowIndex ];\r\n\t\t\t\t\t\tif ( rowFilter && !row[ c.columns ].$row.is( rowFilter ) ) {\r\n\t\t\t\t\t\t\tcontinue;\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\tresult = true;\r\n\t\t\t\t\t\tparsed = ( allColumns ) ? row.slice( 0, c.columns ) : row[ column ];\r\n\t\t\t\t\t\trow = row[ c.columns ];\r\n\t\t\t\t\t\traw = ( allColumns ) ? row.raw : row.raw[ column ];\r\n\t\t\t\t\t\t$cell = ( allColumns ) ? row.$row.children() : row.$row.children().eq( column );\r\n\t\t\t\t\t\tif ( hasCallback ) {\r\n\t\t\t\t\t\t\tresult = callback({\r\n\t\t\t\t\t\t\t\ttbodyIndex : tbodyIndex,\r\n\t\t\t\t\t\t\t\trowIndex : rowIndex,\r\n\t\t\t\t\t\t\t\tparsed : parsed,\r\n\t\t\t\t\t\t\t\traw : raw,\r\n\t\t\t\t\t\t\t\t$row : row.$row,\r\n\t\t\t\t\t\t\t\t$cell : $cell\r\n\t\t\t\t\t\t\t});\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\tif ( result !== false ) {\r\n\t\t\t\t\t\t\tdata.parsed[ data.parsed.length ] = parsed;\r\n\t\t\t\t\t\t\tdata.raw[ data.raw.length ] = raw;\r\n\t\t\t\t\t\t\tdata.$cell[ data.$cell.length ] = $cell;\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t\t// return everything\r\n\t\t\t\treturn data;\r\n\t\t\t}\r\n\t\t},\r\n\r\n\t\t/*\r\n\t\t██  ██ █████▄ █████▄ ▄████▄ ██████ ██████\r\n\t\t██  ██ ██▄▄██ ██  ██ ██▄▄██   ██   ██▄▄\r\n\t\t██  ██ ██▀▀▀  ██  ██ ██▀▀██   ██   ██▀▀\r\n\t\t▀████▀ ██     █████▀ ██  ██   ██   ██████\r\n\t\t*/\r\n\t\tsetHeadersCss : function( c ) {\r\n\t\t\tvar indx, column,\r\n\t\t\t\tlist = c.sortList,\r\n\t\t\t\tlen = list.length,\r\n\t\t\t\tnone = ts.css.sortNone + ' ' + c.cssNone,\r\n\t\t\t\tcss = [ ts.css.sortAsc + ' ' + c.cssAsc, ts.css.sortDesc + ' ' + c.cssDesc ],\r\n\t\t\t\tcssIcon = [ c.cssIconAsc, c.cssIconDesc, c.cssIconNone ],\r\n\t\t\t\taria = [ 'ascending', 'descending' ],\r\n\t\t\t\tupdateColumnSort = function($el, index) {\r\n\t\t\t\t\t$el\r\n\t\t\t\t\t\t.removeClass( none )\r\n\t\t\t\t\t\t.addClass( css[ index ] )\r\n\t\t\t\t\t\t.attr( 'aria-sort', aria[ index ] )\r\n\t\t\t\t\t\t.find( '.' + ts.css.icon )\r\n\t\t\t\t\t\t.removeClass( cssIcon[ 2 ] )\r\n\t\t\t\t\t\t.addClass( cssIcon[ index ] );\r\n\t\t\t\t},\r\n\t\t\t\t// find the footer\r\n\t\t\t\t$extras = c.$table\r\n\t\t\t\t\t.find( 'tfoot tr' )\r\n\t\t\t\t\t.children( 'td, th' )\r\n\t\t\t\t\t.add( $( c.namespace + '_extra_headers' ) )\r\n\t\t\t\t\t.removeClass( css.join( ' ' ) ),\r\n\t\t\t\t// remove all header information\r\n\t\t\t\t$sorted = c.$headers\r\n\t\t\t\t\t.add( $( 'thead ' + c.namespace + '_extra_headers' ) )\r\n\t\t\t\t\t.removeClass( css.join( ' ' ) )\r\n\t\t\t\t\t.addClass( none )\r\n\t\t\t\t\t.attr( 'aria-sort', 'none' )\r\n\t\t\t\t\t.find( '.' + ts.css.icon )\r\n\t\t\t\t\t.removeClass( cssIcon.join( ' ' ) )\r\n\t\t\t\t\t.end();\r\n\t\t\t// add css none to all sortable headers\r\n\t\t\t$sorted\r\n\t\t\t\t.not( '.sorter-false' )\r\n\t\t\t\t.find( '.' + ts.css.icon )\r\n\t\t\t\t.addClass( cssIcon[ 2 ] );\r\n\t\t\t// add disabled css icon class\r\n\t\t\tif ( c.cssIconDisabled ) {\r\n\t\t\t\t$sorted\r\n\t\t\t\t\t.filter( '.sorter-false' )\r\n\t\t\t\t\t.find( '.' + ts.css.icon )\r\n\t\t\t\t\t.addClass( c.cssIconDisabled );\r\n\t\t\t}\r\n\t\t\tfor ( indx = 0; indx < len; indx++ ) {\r\n\t\t\t\t// direction = 2 means reset!\r\n\t\t\t\tif ( list[ indx ][ 1 ] !== 2 ) {\r\n\t\t\t\t\t// multicolumn sorting updating - see #1005\r\n\t\t\t\t\t// .not(function() {}) needs jQuery 1.4\r\n\t\t\t\t\t// filter(function(i, el) {}) <- el is undefined in jQuery v1.2.6\r\n\t\t\t\t\t$sorted = c.$headers.filter( function( i ) {\r\n\t\t\t\t\t\t// only include headers that are in the sortList (this includes colspans)\r\n\t\t\t\t\t\tvar include = true,\r\n\t\t\t\t\t\t\t$el = c.$headers.eq( i ),\r\n\t\t\t\t\t\t\tcol = parseInt( $el.attr( 'data-column' ), 10 ),\r\n\t\t\t\t\t\t\tend = col + ts.getClosest( $el, 'th, td' )[0].colSpan;\r\n\t\t\t\t\t\tfor ( ; col < end; col++ ) {\r\n\t\t\t\t\t\t\tinclude = include ? include || ts.isValueInArray( col, c.sortList ) > -1 : false;\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\treturn include;\r\n\t\t\t\t\t});\r\n\r\n\t\t\t\t\t// choose the :last in case there are nested columns\r\n\t\t\t\t\t$sorted = $sorted\r\n\t\t\t\t\t\t.not( '.sorter-false' )\r\n\t\t\t\t\t\t.filter( '[data-column=\"' + list[ indx ][ 0 ] + '\"]' + ( len === 1 ? ':last' : '' ) );\r\n\t\t\t\t\tif ( $sorted.length ) {\r\n\t\t\t\t\t\tfor ( column = 0; column < $sorted.length; column++ ) {\r\n\t\t\t\t\t\t\tif ( !$sorted[ column ].sortDisabled ) {\r\n\t\t\t\t\t\t\t\tupdateColumnSort( $sorted.eq( column ), list[ indx ][ 1 ] );\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\t\t\t\t\t// add sorted class to footer & extra headers, if they exist\r\n\t\t\t\t\tif ( $extras.length ) {\r\n\t\t\t\t\t\tupdateColumnSort( $extras.filter( '[data-column=\"' + list[ indx ][ 0 ] + '\"]' ), list[ indx ][ 1 ] );\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\t// add verbose aria labels\r\n\t\t\tlen = c.$headers.length;\r\n\t\t\tfor ( indx = 0; indx < len; indx++ ) {\r\n\t\t\t\tts.setColumnAriaLabel( c, c.$headers.eq( indx ) );\r\n\t\t\t}\r\n\t\t},\r\n\r\n\t\tgetClosest : function( $el, selector ) {\r\n\t\t\t// jQuery v1.2.6 doesn't have closest()\r\n\t\t\tif ( $.fn.closest ) {\r\n\t\t\t\treturn $el.closest( selector );\r\n\t\t\t}\r\n\t\t\treturn $el.is( selector ) ?\r\n\t\t\t\t$el :\r\n\t\t\t\t$el.parents( selector ).filter( ':first' );\r\n\t\t},\r\n\r\n\t\t// nextSort (optional), lets you disable next sort text\r\n\t\tsetColumnAriaLabel : function( c, $header, nextSort ) {\r\n\t\t\tif ( $header.length ) {\r\n\t\t\t\tvar column = parseInt( $header.attr( 'data-column' ), 10 ),\r\n\t\t\t\t\tvars = c.sortVars[ column ],\r\n\t\t\t\t\ttmp = $header.hasClass( ts.css.sortAsc ) ?\r\n\t\t\t\t\t\t'sortAsc' :\r\n\t\t\t\t\t\t$header.hasClass( ts.css.sortDesc ) ? 'sortDesc' : 'sortNone',\r\n\t\t\t\t\ttxt = $.trim( $header.text() ) + ': ' + ts.language[ tmp ];\r\n\t\t\t\tif ( $header.hasClass( 'sorter-false' ) || nextSort === false ) {\r\n\t\t\t\t\ttxt += ts.language.sortDisabled;\r\n\t\t\t\t} else {\r\n\t\t\t\t\ttmp = ( vars.count + 1 ) % vars.order.length;\r\n\t\t\t\t\tnextSort = vars.order[ tmp ];\r\n\t\t\t\t\t// if nextSort\r\n\t\t\t\t\ttxt += ts.language[ nextSort === 0 ? 'nextAsc' : nextSort === 1 ? 'nextDesc' : 'nextNone' ];\r\n\t\t\t\t}\r\n\t\t\t\t$header.attr( 'aria-label', txt );\r\n\t\t\t\tif (vars.sortedBy) {\r\n\t\t\t\t\t$header.attr( 'data-sortedBy', vars.sortedBy );\r\n\t\t\t\t} else {\r\n\t\t\t\t\t$header.removeAttr('data-sortedBy');\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t},\r\n\r\n\t\tupdateHeader : function( c ) {\r\n\t\t\tvar index, isDisabled, $header, col,\r\n\t\t\t\ttable = c.table,\r\n\t\t\t\tlen = c.$headers.length;\r\n\t\t\tfor ( index = 0; index < len; index++ ) {\r\n\t\t\t\t$header = c.$headers.eq( index );\r\n\t\t\t\tcol = ts.getColumnData( table, c.headers, index, true );\r\n\t\t\t\t// add 'sorter-false' class if 'parser-false' is set\r\n\t\t\t\tisDisabled = ts.getData( $header, col, 'sorter' ) === 'false' || ts.getData( $header, col, 'parser' ) === 'false';\r\n\t\t\t\tts.setColumnSort( c, $header, isDisabled );\r\n\t\t\t}\r\n\t\t},\r\n\r\n\t\tsetColumnSort : function( c, $header, isDisabled ) {\r\n\t\t\tvar id = c.table.id;\r\n\t\t\t$header[ 0 ].sortDisabled = isDisabled;\r\n\t\t\t$header[ isDisabled ? 'addClass' : 'removeClass' ]( 'sorter-false' )\r\n\t\t\t\t.attr( 'aria-disabled', '' + isDisabled );\r\n\t\t\t// disable tab index on disabled cells\r\n\t\t\tif ( c.tabIndex ) {\r\n\t\t\t\tif ( isDisabled ) {\r\n\t\t\t\t\t$header.removeAttr( 'tabindex' );\r\n\t\t\t\t} else {\r\n\t\t\t\t\t$header.attr( 'tabindex', '0' );\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\t// aria-controls - requires table ID\r\n\t\t\tif ( id ) {\r\n\t\t\t\tif ( isDisabled ) {\r\n\t\t\t\t\t$header.removeAttr( 'aria-controls' );\r\n\t\t\t\t} else {\r\n\t\t\t\t\t$header.attr( 'aria-controls', id );\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t},\r\n\r\n\t\tupdateHeaderSortCount : function( c, list ) {\r\n\t\t\tvar col, dir, group, indx, primary, temp, val, order,\r\n\t\t\t\tsortList = list || c.sortList,\r\n\t\t\t\tlen = sortList.length;\r\n\t\t\tc.sortList = [];\r\n\t\t\tfor ( indx = 0; indx < len; indx++ ) {\r\n\t\t\t\tval = sortList[ indx ];\r\n\t\t\t\t// ensure all sortList values are numeric - fixes #127\r\n\t\t\t\tcol = parseInt( val[ 0 ], 10 );\r\n\t\t\t\t// prevents error if sorton array is wrong\r\n\t\t\t\tif ( col < c.columns ) {\r\n\r\n\t\t\t\t\t// set order if not already defined - due to colspan header without associated header cell\r\n\t\t\t\t\t// adding this check prevents a javascript error\r\n\t\t\t\t\tif ( !c.sortVars[ col ].order ) {\r\n\t\t\t\t\t\tif ( ts.getOrder( c.sortInitialOrder ) ) {\r\n\t\t\t\t\t\t\torder = c.sortReset ? [ 1, 0, 2 ] : [ 1, 0 ];\r\n\t\t\t\t\t\t} else {\r\n\t\t\t\t\t\t\torder = c.sortReset ? [ 0, 1, 2 ] : [ 0, 1 ];\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\tc.sortVars[ col ].order = order;\r\n\t\t\t\t\t\tc.sortVars[ col ].count = 0;\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\torder = c.sortVars[ col ].order;\r\n\t\t\t\t\tdir = ( '' + val[ 1 ] ).match( /^(1|d|s|o|n)/ );\r\n\t\t\t\t\tdir = dir ? dir[ 0 ] : '';\r\n\t\t\t\t\t// 0/(a)sc (default), 1/(d)esc, (s)ame, (o)pposite, (n)ext\r\n\t\t\t\t\tswitch ( dir ) {\r\n\t\t\t\t\t\tcase '1' : case 'd' : // descending\r\n\t\t\t\t\t\t\tdir = 1;\r\n\t\t\t\t\t\t\tbreak;\r\n\t\t\t\t\t\tcase 's' : // same direction (as primary column)\r\n\t\t\t\t\t\t\t// if primary sort is set to 's', make it ascending\r\n\t\t\t\t\t\t\tdir = primary || 0;\r\n\t\t\t\t\t\t\tbreak;\r\n\t\t\t\t\t\tcase 'o' :\r\n\t\t\t\t\t\t\ttemp = order[ ( primary || 0 ) % order.length ];\r\n\t\t\t\t\t\t\t// opposite of primary column; but resets if primary resets\r\n\t\t\t\t\t\t\tdir = temp === 0 ? 1 : temp === 1 ? 0 : 2;\r\n\t\t\t\t\t\t\tbreak;\r\n\t\t\t\t\t\tcase 'n' :\r\n\t\t\t\t\t\t\tdir = order[ ( ++c.sortVars[ col ].count ) % order.length ];\r\n\t\t\t\t\t\t\tbreak;\r\n\t\t\t\t\t\tdefault : // ascending\r\n\t\t\t\t\t\t\tdir = 0;\r\n\t\t\t\t\t\t\tbreak;\r\n\t\t\t\t\t}\r\n\t\t\t\t\tprimary = indx === 0 ? dir : primary;\r\n\t\t\t\t\tgroup = [ col, parseInt( dir, 10 ) || 0 ];\r\n\t\t\t\t\tc.sortList[ c.sortList.length ] = group;\r\n\t\t\t\t\tdir = $.inArray( group[ 1 ], order ); // fixes issue #167\r\n\t\t\t\t\tc.sortVars[ col ].count = dir >= 0 ? dir : group[ 1 ] % order.length;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t},\r\n\r\n\t\tupdateAll : function( c, resort, callback ) {\r\n\t\t\tvar table = c.table;\r\n\t\t\ttable.isUpdating = true;\r\n\t\t\tts.refreshWidgets( table, true, true );\r\n\t\t\tts.buildHeaders( c );\r\n\t\t\tts.bindEvents( table, c.$headers, true );\r\n\t\t\tts.bindMethods( c );\r\n\t\t\tts.commonUpdate( c, resort, callback );\r\n\t\t},\r\n\r\n\t\tupdate : function( c, resort, callback ) {\r\n\t\t\tvar table = c.table;\r\n\t\t\ttable.isUpdating = true;\r\n\t\t\t// update sorting (if enabled/disabled)\r\n\t\t\tts.updateHeader( c );\r\n\t\t\tts.commonUpdate( c, resort, callback );\r\n\t\t},\r\n\r\n\t\t// simple header update - see #989\r\n\t\tupdateHeaders : function( c, callback ) {\r\n\t\t\tc.table.isUpdating = true;\r\n\t\t\tts.buildHeaders( c );\r\n\t\t\tts.bindEvents( c.table, c.$headers, true );\r\n\t\t\tts.resortComplete( c, callback );\r\n\t\t},\r\n\r\n\t\tupdateCell : function( c, cell, resort, callback ) {\r\n\t\t\t// updateCell for child rows is a mess - we'll ignore them for now\r\n\t\t\t// eventually I'll break out the \"update\" row cache code to make everything consistent\r\n\t\t\tif ( $( cell ).closest( 'tr' ).hasClass( c.cssChildRow ) ) {\r\n\t\t\t\tconsole.warn('Tablesorter Warning! \"updateCell\" for child row content has been disabled, use \"update\" instead');\r\n\t\t\t\treturn;\r\n\t\t\t}\r\n\t\t\tif ( ts.isEmptyObject( c.cache ) ) {\r\n\t\t\t\t// empty table, do an update instead - fixes #1099\r\n\t\t\t\tts.updateHeader( c );\r\n\t\t\t\tts.commonUpdate( c, resort, callback );\r\n\t\t\t\treturn;\r\n\t\t\t}\r\n\t\t\tc.table.isUpdating = true;\r\n\t\t\tc.$table.find( c.selectorRemove ).remove();\r\n\t\t\t// get position from the dom\r\n\t\t\tvar tmp, indx, row, icell, cache, len,\r\n\t\t\t\t$tbodies = c.$tbodies,\r\n\t\t\t\t$cell = $( cell ),\r\n\t\t\t\t// update cache - format: function( s, table, cell, cellIndex )\r\n\t\t\t\t// no closest in jQuery v1.2.6\r\n\t\t\t\ttbodyIndex = $tbodies.index( ts.getClosest( $cell, 'tbody' ) ),\r\n\t\t\t\ttbcache = c.cache[ tbodyIndex ],\r\n\t\t\t\t$row = ts.getClosest( $cell, 'tr' );\r\n\t\t\tcell = $cell[ 0 ]; // in case cell is a jQuery object\r\n\t\t\t// tbody may not exist if update is initialized while tbody is removed for processing\r\n\t\t\tif ( $tbodies.length && tbodyIndex >= 0 ) {\r\n\t\t\t\trow = $tbodies.eq( tbodyIndex ).find( 'tr' ).not( '.' + c.cssChildRow ).index( $row );\r\n\t\t\t\tcache = tbcache.normalized[ row ];\r\n\t\t\t\tlen = $row[ 0 ].cells.length;\r\n\t\t\t\tif ( len !== c.columns ) {\r\n\t\t\t\t\t// colspan in here somewhere!\r\n\t\t\t\t\ticell = 0;\r\n\t\t\t\t\ttmp = false;\r\n\t\t\t\t\tfor ( indx = 0; indx < len; indx++ ) {\r\n\t\t\t\t\t\tif ( !tmp && $row[ 0 ].cells[ indx ] !== cell ) {\r\n\t\t\t\t\t\t\ticell += $row[ 0 ].cells[ indx ].colSpan;\r\n\t\t\t\t\t\t} else {\r\n\t\t\t\t\t\t\ttmp = true;\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\t\t\t\t} else {\r\n\t\t\t\t\ticell = $cell.index();\r\n\t\t\t\t}\r\n\t\t\t\ttmp = ts.getElementText( c, cell, icell ); // raw\r\n\t\t\t\tcache[ c.columns ].raw[ icell ] = tmp;\r\n\t\t\t\ttmp = ts.getParsedText( c, cell, icell, tmp );\r\n\t\t\t\tcache[ icell ] = tmp; // parsed\r\n\t\t\t\tif ( ( c.parsers[ icell ].type || '' ).toLowerCase() === 'numeric' ) {\r\n\t\t\t\t\t// update column max value (ignore sign)\r\n\t\t\t\t\ttbcache.colMax[ icell ] = Math.max( Math.abs( tmp ) || 0, tbcache.colMax[ icell ] || 0 );\r\n\t\t\t\t}\r\n\t\t\t\ttmp = resort !== 'undefined' ? resort : c.resort;\r\n\t\t\t\tif ( tmp !== false ) {\r\n\t\t\t\t\t// widgets will be reapplied\r\n\t\t\t\t\tts.checkResort( c, tmp, callback );\r\n\t\t\t\t} else {\r\n\t\t\t\t\t// don't reapply widgets is resort is false, just in case it causes\r\n\t\t\t\t\t// problems with element focus\r\n\t\t\t\t\tts.resortComplete( c, callback );\r\n\t\t\t\t}\r\n\t\t\t} else {\r\n\t\t\t\tif ( ts.debug(c, 'core') ) {\r\n\t\t\t\t\tconsole.error( 'updateCell aborted, tbody missing or not within the indicated table' );\r\n\t\t\t\t}\r\n\t\t\t\tc.table.isUpdating = false;\r\n\t\t\t}\r\n\t\t},\r\n\r\n\t\taddRows : function( c, $row, resort, callback ) {\r\n\t\t\tvar txt, val, tbodyIndex, rowIndex, rows, cellIndex, len, order,\r\n\t\t\t\tcacheIndex, rowData, cells, cell, span,\r\n\t\t\t\t// allow passing a row string if only one non-info tbody exists in the table\r\n\t\t\t\tvalid = typeof $row === 'string' && c.$tbodies.length === 1 && /<tr/.test( $row || '' ),\r\n\t\t\t\ttable = c.table;\r\n\t\t\tif ( valid ) {\r\n\t\t\t\t$row = $( $row );\r\n\t\t\t\tc.$tbodies.append( $row );\r\n\t\t\t} else if (\r\n\t\t\t\t!$row ||\r\n\t\t\t\t// row is a jQuery object?\r\n\t\t\t\t!( $row instanceof $ ) ||\r\n\t\t\t\t// row contained in the table?\r\n\t\t\t\t( ts.getClosest( $row, 'table' )[ 0 ] !== c.table )\r\n\t\t\t) {\r\n\t\t\t\tif ( ts.debug(c, 'core') ) {\r\n\t\t\t\t\tconsole.error( 'addRows method requires (1) a jQuery selector reference to rows that have already ' +\r\n\t\t\t\t\t\t'been added to the table, or (2) row HTML string to be added to a table with only one tbody' );\r\n\t\t\t\t}\r\n\t\t\t\treturn false;\r\n\t\t\t}\r\n\t\t\ttable.isUpdating = true;\r\n\t\t\tif ( ts.isEmptyObject( c.cache ) ) {\r\n\t\t\t\t// empty table, do an update instead - fixes #450\r\n\t\t\t\tts.updateHeader( c );\r\n\t\t\t\tts.commonUpdate( c, resort, callback );\r\n\t\t\t} else {\r\n\t\t\t\trows = $row.filter( 'tr' ).attr( 'role', 'row' ).length;\r\n\t\t\t\ttbodyIndex = c.$tbodies.index( $row.parents( 'tbody' ).filter( ':first' ) );\r\n\t\t\t\t// fixes adding rows to an empty table - see issue #179\r\n\t\t\t\tif ( !( c.parsers && c.parsers.length ) ) {\r\n\t\t\t\t\tts.setupParsers( c );\r\n\t\t\t\t}\r\n\t\t\t\t// add each row\r\n\t\t\t\tfor ( rowIndex = 0; rowIndex < rows; rowIndex++ ) {\r\n\t\t\t\t\tcacheIndex = 0;\r\n\t\t\t\t\tlen = $row[ rowIndex ].cells.length;\r\n\t\t\t\t\torder = c.cache[ tbodyIndex ].normalized.length;\r\n\t\t\t\t\tcells = [];\r\n\t\t\t\t\trowData = {\r\n\t\t\t\t\t\tchild : [],\r\n\t\t\t\t\t\traw : [],\r\n\t\t\t\t\t\t$row : $row.eq( rowIndex ),\r\n\t\t\t\t\t\torder : order\r\n\t\t\t\t\t};\r\n\t\t\t\t\t// add each cell\r\n\t\t\t\t\tfor ( cellIndex = 0; cellIndex < len; cellIndex++ ) {\r\n\t\t\t\t\t\tcell = $row[ rowIndex ].cells[ cellIndex ];\r\n\t\t\t\t\t\ttxt = ts.getElementText( c, cell, cacheIndex );\r\n\t\t\t\t\t\trowData.raw[ cacheIndex ] = txt;\r\n\t\t\t\t\t\tval = ts.getParsedText( c, cell, cacheIndex, txt );\r\n\t\t\t\t\t\tcells[ cacheIndex ] = val;\r\n\t\t\t\t\t\tif ( ( c.parsers[ cacheIndex ].type || '' ).toLowerCase() === 'numeric' ) {\r\n\t\t\t\t\t\t\t// update column max value (ignore sign)\r\n\t\t\t\t\t\t\tc.cache[ tbodyIndex ].colMax[ cacheIndex ] =\r\n\t\t\t\t\t\t\t\tMath.max( Math.abs( val ) || 0, c.cache[ tbodyIndex ].colMax[ cacheIndex ] || 0 );\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\tspan = cell.colSpan - 1;\r\n\t\t\t\t\t\tif ( span > 0 ) {\r\n\t\t\t\t\t\t\tcacheIndex += span;\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\tcacheIndex++;\r\n\t\t\t\t\t}\r\n\t\t\t\t\t// add the row data to the end\r\n\t\t\t\t\tcells[ c.columns ] = rowData;\r\n\t\t\t\t\t// update cache\r\n\t\t\t\t\tc.cache[ tbodyIndex ].normalized[ order ] = cells;\r\n\t\t\t\t}\r\n\t\t\t\t// resort using current settings\r\n\t\t\t\tts.checkResort( c, resort, callback );\r\n\t\t\t}\r\n\t\t},\r\n\r\n\t\tupdateCache : function( c, callback, $tbodies ) {\r\n\t\t\t// rebuild parsers\r\n\t\t\tif ( !( c.parsers && c.parsers.length ) ) {\r\n\t\t\t\tts.setupParsers( c, $tbodies );\r\n\t\t\t}\r\n\t\t\t// rebuild the cache map\r\n\t\t\tts.buildCache( c, callback, $tbodies );\r\n\t\t},\r\n\r\n\t\t// init flag (true) used by pager plugin to prevent widget application\r\n\t\t// renamed from appendToTable\r\n\t\tappendCache : function( c, init ) {\r\n\t\t\tvar parsed, totalRows, $tbody, $curTbody, rowIndex, tbodyIndex, appendTime,\r\n\t\t\t\ttable = c.table,\r\n\t\t\t\t$tbodies = c.$tbodies,\r\n\t\t\t\trows = [],\r\n\t\t\t\tcache = c.cache;\r\n\t\t\t// empty table - fixes #206/#346\r\n\t\t\tif ( ts.isEmptyObject( cache ) ) {\r\n\t\t\t\t// run pager appender in case the table was just emptied\r\n\t\t\t\treturn c.appender ? c.appender( table, rows ) :\r\n\t\t\t\t\ttable.isUpdating ? c.$table.triggerHandler( 'updateComplete', table ) : ''; // Fixes #532\r\n\t\t\t}\r\n\t\t\tif ( ts.debug(c, 'core') ) {\r\n\t\t\t\tappendTime = new Date();\r\n\t\t\t}\r\n\t\t\tfor ( tbodyIndex = 0; tbodyIndex < $tbodies.length; tbodyIndex++ ) {\r\n\t\t\t\t$tbody = $tbodies.eq( tbodyIndex );\r\n\t\t\t\tif ( $tbody.length ) {\r\n\t\t\t\t\t// detach tbody for manipulation\r\n\t\t\t\t\t$curTbody = ts.processTbody( table, $tbody, true );\r\n\t\t\t\t\tparsed = cache[ tbodyIndex ].normalized;\r\n\t\t\t\t\ttotalRows = parsed.length;\r\n\t\t\t\t\tfor ( rowIndex = 0; rowIndex < totalRows; rowIndex++ ) {\r\n\t\t\t\t\t\trows[rows.length] = parsed[ rowIndex ][ c.columns ].$row;\r\n\t\t\t\t\t\t// removeRows used by the pager plugin; don't render if using ajax - fixes #411\r\n\t\t\t\t\t\tif ( !c.appender || ( c.pager && !c.pager.removeRows && !c.pager.ajax ) ) {\r\n\t\t\t\t\t\t\t$curTbody.append( parsed[ rowIndex ][ c.columns ].$row );\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\t\t\t\t\t// restore tbody\r\n\t\t\t\t\tts.processTbody( table, $curTbody, false );\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\tif ( c.appender ) {\r\n\t\t\t\tc.appender( table, rows );\r\n\t\t\t}\r\n\t\t\tif ( ts.debug(c, 'core') ) {\r\n\t\t\t\tconsole.log( 'Rebuilt table' + ts.benchmark( appendTime ) );\r\n\t\t\t}\r\n\t\t\t// apply table widgets; but not before ajax completes\r\n\t\t\tif ( !init && !c.appender ) {\r\n\t\t\t\tts.applyWidget( table );\r\n\t\t\t}\r\n\t\t\tif ( table.isUpdating ) {\r\n\t\t\t\tc.$table.triggerHandler( 'updateComplete', table );\r\n\t\t\t}\r\n\t\t},\r\n\r\n\t\tcommonUpdate : function( c, resort, callback ) {\r\n\t\t\t// remove rows/elements before update\r\n\t\t\tc.$table.find( c.selectorRemove ).remove();\r\n\t\t\t// rebuild parsers\r\n\t\t\tts.setupParsers( c );\r\n\t\t\t// rebuild the cache map\r\n\t\t\tts.buildCache( c );\r\n\t\t\tts.checkResort( c, resort, callback );\r\n\t\t},\r\n\r\n\t\t/*\r\n\t\t▄█████ ▄████▄ █████▄ ██████ ██ █████▄ ▄████▄\r\n\t\t▀█▄    ██  ██ ██▄▄██   ██   ██ ██  ██ ██ ▄▄▄\r\n\t\t   ▀█▄ ██  ██ ██▀██    ██   ██ ██  ██ ██ ▀██\r\n\t\t█████▀ ▀████▀ ██  ██   ██   ██ ██  ██ ▀████▀\r\n\t\t*/\r\n\t\tinitSort : function( c, cell, event ) {\r\n\t\t\tif ( c.table.isUpdating ) {\r\n\t\t\t\t// let any updates complete before initializing a sort\r\n\t\t\t\treturn setTimeout( function() {\r\n\t\t\t\t\tts.initSort( c, cell, event );\r\n\t\t\t\t}, 50 );\r\n\t\t\t}\r\n\r\n\t\t\tvar arry, indx, headerIndx, dir, temp, tmp, $header,\r\n\t\t\t\tnotMultiSort = !event[ c.sortMultiSortKey ],\r\n\t\t\t\ttable = c.table,\r\n\t\t\t\tlen = c.$headers.length,\r\n\t\t\t\tth = ts.getClosest( $( cell ), 'th, td' ),\r\n\t\t\t\tcol = parseInt( th.attr( 'data-column' ), 10 ),\r\n\t\t\t\tsortedBy = event.type === 'mouseup' ? 'user' : event.type,\r\n\t\t\t\torder = c.sortVars[ col ].order;\r\n\t\t\tth = th[0];\r\n\t\t\t// Only call sortStart if sorting is enabled\r\n\t\t\tc.$table.triggerHandler( 'sortStart', table );\r\n\t\t\t// get current column sort order\r\n\t\t\ttmp = ( c.sortVars[ col ].count + 1 ) % order.length;\r\n\t\t\tc.sortVars[ col ].count = event[ c.sortResetKey ] ? 2 : tmp;\r\n\t\t\t// reset all sorts on non-current column - issue #30\r\n\t\t\tif ( c.sortRestart ) {\r\n\t\t\t\tfor ( headerIndx = 0; headerIndx < len; headerIndx++ ) {\r\n\t\t\t\t\t$header = c.$headers.eq( headerIndx );\r\n\t\t\t\t\ttmp = parseInt( $header.attr( 'data-column' ), 10 );\r\n\t\t\t\t\t// only reset counts on columns that weren't just clicked on and if not included in a multisort\r\n\t\t\t\t\tif ( col !== tmp && ( notMultiSort || $header.hasClass( ts.css.sortNone ) ) ) {\r\n\t\t\t\t\t\tc.sortVars[ tmp ].count = -1;\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\t// user only wants to sort on one column\r\n\t\t\tif ( notMultiSort ) {\r\n\t\t\t\t$.each( c.sortVars, function( i ) {\r\n\t\t\t\t\tc.sortVars[ i ].sortedBy = '';\r\n\t\t\t\t});\r\n\t\t\t\t// flush the sort list\r\n\t\t\t\tc.sortList = [];\r\n\t\t\t\tc.last.sortList = [];\r\n\t\t\t\tif ( c.sortForce !== null ) {\r\n\t\t\t\t\tarry = c.sortForce;\r\n\t\t\t\t\tfor ( indx = 0; indx < arry.length; indx++ ) {\r\n\t\t\t\t\t\tif ( arry[ indx ][ 0 ] !== col ) {\r\n\t\t\t\t\t\t\tc.sortList[ c.sortList.length ] = arry[ indx ];\r\n\t\t\t\t\t\t\tc.sortVars[ arry[ indx ][ 0 ] ].sortedBy = 'sortForce';\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t\t// add column to sort list\r\n\t\t\t\tdir = order[ c.sortVars[ col ].count ];\r\n\t\t\t\tif ( dir < 2 ) {\r\n\t\t\t\t\tc.sortList[ c.sortList.length ] = [ col, dir ];\r\n\t\t\t\t\tc.sortVars[ col ].sortedBy = sortedBy;\r\n\t\t\t\t\t// add other columns if header spans across multiple\r\n\t\t\t\t\tif ( th.colSpan > 1 ) {\r\n\t\t\t\t\t\tfor ( indx = 1; indx < th.colSpan; indx++ ) {\r\n\t\t\t\t\t\t\tc.sortList[ c.sortList.length ] = [ col + indx, dir ];\r\n\t\t\t\t\t\t\t// update count on columns in colSpan\r\n\t\t\t\t\t\t\tc.sortVars[ col + indx ].count = $.inArray( dir, order );\r\n\t\t\t\t\t\t\tc.sortVars[ col + indx ].sortedBy = sortedBy;\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t\t// multi column sorting\r\n\t\t\t} else {\r\n\t\t\t\t// get rid of the sortAppend before adding more - fixes issue #115 & #523\r\n\t\t\t\tc.sortList = $.extend( [], c.last.sortList );\r\n\r\n\t\t\t\t// the user has clicked on an already sorted column\r\n\t\t\t\tif ( ts.isValueInArray( col, c.sortList ) >= 0 ) {\r\n\t\t\t\t\t// reverse the sorting direction\r\n\t\t\t\t\tc.sortVars[ col ].sortedBy = sortedBy;\r\n\t\t\t\t\tfor ( indx = 0; indx < c.sortList.length; indx++ ) {\r\n\t\t\t\t\t\ttmp = c.sortList[ indx ];\r\n\t\t\t\t\t\tif ( tmp[ 0 ] === col ) {\r\n\t\t\t\t\t\t\t// order.count seems to be incorrect when compared to cell.count\r\n\t\t\t\t\t\t\ttmp[ 1 ] = order[ c.sortVars[ col ].count ];\r\n\t\t\t\t\t\t\tif ( tmp[1] === 2 ) {\r\n\t\t\t\t\t\t\t\tc.sortList.splice( indx, 1 );\r\n\t\t\t\t\t\t\t\tc.sortVars[ col ].count = -1;\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\t\t\t\t} else {\r\n\t\t\t\t\t// add column to sort list array\r\n\t\t\t\t\tdir = order[ c.sortVars[ col ].count ];\r\n\t\t\t\t\tc.sortVars[ col ].sortedBy = sortedBy;\r\n\t\t\t\t\tif ( dir < 2 ) {\r\n\t\t\t\t\t\tc.sortList[ c.sortList.length ] = [ col, dir ];\r\n\t\t\t\t\t\t// add other columns if header spans across multiple\r\n\t\t\t\t\t\tif ( th.colSpan > 1 ) {\r\n\t\t\t\t\t\t\tfor ( indx = 1; indx < th.colSpan; indx++ ) {\r\n\t\t\t\t\t\t\t\tc.sortList[ c.sortList.length ] = [ col + indx, dir ];\r\n\t\t\t\t\t\t\t\t// update count on columns in colSpan\r\n\t\t\t\t\t\t\t\tc.sortVars[ col + indx ].count = $.inArray( dir, order );\r\n\t\t\t\t\t\t\t\tc.sortVars[ col + indx ].sortedBy = sortedBy;\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\t// save sort before applying sortAppend\r\n\t\t\tc.last.sortList = $.extend( [], c.sortList );\r\n\t\t\tif ( c.sortList.length && c.sortAppend ) {\r\n\t\t\t\tarry = $.isArray( c.sortAppend ) ? c.sortAppend : c.sortAppend[ c.sortList[ 0 ][ 0 ] ];\r\n\t\t\t\tif ( !ts.isEmptyObject( arry ) ) {\r\n\t\t\t\t\tfor ( indx = 0; indx < arry.length; indx++ ) {\r\n\t\t\t\t\t\tif ( arry[ indx ][ 0 ] !== col && ts.isValueInArray( arry[ indx ][ 0 ], c.sortList ) < 0 ) {\r\n\t\t\t\t\t\t\tdir = arry[ indx ][ 1 ];\r\n\t\t\t\t\t\t\ttemp = ( '' + dir ).match( /^(a|d|s|o|n)/ );\r\n\t\t\t\t\t\t\tif ( temp ) {\r\n\t\t\t\t\t\t\t\ttmp = c.sortList[ 0 ][ 1 ];\r\n\t\t\t\t\t\t\t\tswitch ( temp[ 0 ] ) {\r\n\t\t\t\t\t\t\t\t\tcase 'd' :\r\n\t\t\t\t\t\t\t\t\t\tdir = 1;\r\n\t\t\t\t\t\t\t\t\t\tbreak;\r\n\t\t\t\t\t\t\t\t\tcase 's' :\r\n\t\t\t\t\t\t\t\t\t\tdir = tmp;\r\n\t\t\t\t\t\t\t\t\t\tbreak;\r\n\t\t\t\t\t\t\t\t\tcase 'o' :\r\n\t\t\t\t\t\t\t\t\t\tdir = tmp === 0 ? 1 : 0;\r\n\t\t\t\t\t\t\t\t\t\tbreak;\r\n\t\t\t\t\t\t\t\t\tcase 'n' :\r\n\t\t\t\t\t\t\t\t\t\tdir = ( tmp + 1 ) % order.length;\r\n\t\t\t\t\t\t\t\t\t\tbreak;\r\n\t\t\t\t\t\t\t\t\tdefault:\r\n\t\t\t\t\t\t\t\t\t\tdir = 0;\r\n\t\t\t\t\t\t\t\t\t\tbreak;\r\n\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\tc.sortList[ c.sortList.length ] = [ arry[ indx ][ 0 ], dir ];\r\n\t\t\t\t\t\t\tc.sortVars[ arry[ indx ][ 0 ] ].sortedBy = 'sortAppend';\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\t// sortBegin event triggered immediately before the sort\r\n\t\t\tc.$table.triggerHandler( 'sortBegin', table );\r\n\t\t\t// setTimeout needed so the processing icon shows up\r\n\t\t\tsetTimeout( function() {\r\n\t\t\t\t// set css for headers\r\n\t\t\t\tts.setHeadersCss( c );\r\n\t\t\t\tts.multisort( c );\r\n\t\t\t\tts.appendCache( c );\r\n\t\t\t\tc.$table.triggerHandler( 'sortBeforeEnd', table );\r\n\t\t\t\tc.$table.triggerHandler( 'sortEnd', table );\r\n\t\t\t}, 1 );\r\n\t\t},\r\n\r\n\t\t// sort multiple columns\r\n\t\tmultisort : function( c ) { /*jshint loopfunc:true */\r\n\t\t\tvar tbodyIndex, sortTime, colMax, rows, tmp,\r\n\t\t\t\ttable = c.table,\r\n\t\t\t\tsorter = [],\r\n\t\t\t\tdir = 0,\r\n\t\t\t\ttextSorter = c.textSorter || '',\r\n\t\t\t\tsortList = c.sortList,\r\n\t\t\t\tsortLen = sortList.length,\r\n\t\t\t\tlen = c.$tbodies.length;\r\n\t\t\tif ( c.serverSideSorting || ts.isEmptyObject( c.cache ) ) {\r\n\t\t\t\t// empty table - fixes #206/#346\r\n\t\t\t\treturn;\r\n\t\t\t}\r\n\t\t\tif ( ts.debug(c, 'core') ) { sortTime = new Date(); }\r\n\t\t\t// cache textSorter to optimize speed\r\n\t\t\tif ( typeof textSorter === 'object' ) {\r\n\t\t\t\tcolMax = c.columns;\r\n\t\t\t\twhile ( colMax-- ) {\r\n\t\t\t\t\ttmp = ts.getColumnData( table, textSorter, colMax );\r\n\t\t\t\t\tif ( typeof tmp === 'function' ) {\r\n\t\t\t\t\t\tsorter[ colMax ] = tmp;\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\tfor ( tbodyIndex = 0; tbodyIndex < len; tbodyIndex++ ) {\r\n\t\t\t\tcolMax = c.cache[ tbodyIndex ].colMax;\r\n\t\t\t\trows = c.cache[ tbodyIndex ].normalized;\r\n\r\n\t\t\t\trows.sort( function( a, b ) {\r\n\t\t\t\t\tvar sortIndex, num, col, order, sort, x, y;\r\n\t\t\t\t\t// rows is undefined here in IE, so don't use it!\r\n\t\t\t\t\tfor ( sortIndex = 0; sortIndex < sortLen; sortIndex++ ) {\r\n\t\t\t\t\t\tcol = sortList[ sortIndex ][ 0 ];\r\n\t\t\t\t\t\torder = sortList[ sortIndex ][ 1 ];\r\n\t\t\t\t\t\t// sort direction, true = asc, false = desc\r\n\t\t\t\t\t\tdir = order === 0;\r\n\r\n\t\t\t\t\t\tif ( c.sortStable && a[ col ] === b[ col ] && sortLen === 1 ) {\r\n\t\t\t\t\t\t\treturn a[ c.columns ].order - b[ c.columns ].order;\r\n\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t\t// fallback to natural sort since it is more robust\r\n\t\t\t\t\t\tnum = /n/i.test( ts.getSortType( c.parsers, col ) );\r\n\t\t\t\t\t\tif ( num && c.strings[ col ] ) {\r\n\t\t\t\t\t\t\t// sort strings in numerical columns\r\n\t\t\t\t\t\t\tif ( typeof ( ts.string[ c.strings[ col ] ] ) === 'boolean' ) {\r\n\t\t\t\t\t\t\t\tnum = ( dir ? 1 : -1 ) * ( ts.string[ c.strings[ col ] ] ? -1 : 1 );\r\n\t\t\t\t\t\t\t} else {\r\n\t\t\t\t\t\t\t\tnum = ( c.strings[ col ] ) ? ts.string[ c.strings[ col ] ] || 0 : 0;\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t// fall back to built-in numeric sort\r\n\t\t\t\t\t\t\t// var sort = $.tablesorter['sort' + s]( a[col], b[col], dir, colMax[col], table );\r\n\t\t\t\t\t\t\tsort = c.numberSorter ? c.numberSorter( a[ col ], b[ col ], dir, colMax[ col ], table ) :\r\n\t\t\t\t\t\t\t\tts[ 'sortNumeric' + ( dir ? 'Asc' : 'Desc' ) ]( a[ col ], b[ col ], num, colMax[ col ], col, c );\r\n\t\t\t\t\t\t} else {\r\n\t\t\t\t\t\t\t// set a & b depending on sort direction\r\n\t\t\t\t\t\t\tx = dir ? a : b;\r\n\t\t\t\t\t\t\ty = dir ? b : a;\r\n\t\t\t\t\t\t\t// text sort function\r\n\t\t\t\t\t\t\tif ( typeof textSorter === 'function' ) {\r\n\t\t\t\t\t\t\t\t// custom OVERALL text sorter\r\n\t\t\t\t\t\t\t\tsort = textSorter( x[ col ], y[ col ], dir, col, table );\r\n\t\t\t\t\t\t\t} else if ( typeof sorter[ col ] === 'function' ) {\r\n\t\t\t\t\t\t\t\t// custom text sorter for a SPECIFIC COLUMN\r\n\t\t\t\t\t\t\t\tsort = sorter[ col ]( x[ col ], y[ col ], dir, col, table );\r\n\t\t\t\t\t\t\t} else {\r\n\t\t\t\t\t\t\t\t// fall back to natural sort\r\n\t\t\t\t\t\t\t\tsort = ts[ 'sortNatural' + ( dir ? 'Asc' : 'Desc' ) ]( a[ col ] || '', b[ col ] || '', col, c );\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\tif ( sort ) { return sort; }\r\n\t\t\t\t\t}\r\n\t\t\t\t\treturn a[ c.columns ].order - b[ c.columns ].order;\r\n\t\t\t\t});\r\n\t\t\t}\r\n\t\t\tif ( ts.debug(c, 'core') ) {\r\n\t\t\t\tconsole.log( 'Applying sort ' + sortList.toString() + ts.benchmark( sortTime ) );\r\n\t\t\t}\r\n\t\t},\r\n\r\n\t\tresortComplete : function( c, callback ) {\r\n\t\t\tif ( c.table.isUpdating ) {\r\n\t\t\t\tc.$table.triggerHandler( 'updateComplete', c.table );\r\n\t\t\t}\r\n\t\t\tif ( $.isFunction( callback ) ) {\r\n\t\t\t\tcallback( c.table );\r\n\t\t\t}\r\n\t\t},\r\n\r\n\t\tcheckResort : function( c, resort, callback ) {\r\n\t\t\tvar sortList = $.isArray( resort ) ? resort : c.sortList,\r\n\t\t\t\t// if no resort parameter is passed, fallback to config.resort (true by default)\r\n\t\t\t\tresrt = typeof resort === 'undefined' ? c.resort : resort;\r\n\t\t\t// don't try to resort if the table is still processing\r\n\t\t\t// this will catch spamming of the updateCell method\r\n\t\t\tif ( resrt !== false && !c.serverSideSorting && !c.table.isProcessing ) {\r\n\t\t\t\tif ( sortList.length ) {\r\n\t\t\t\t\tts.sortOn( c, sortList, function() {\r\n\t\t\t\t\t\tts.resortComplete( c, callback );\r\n\t\t\t\t\t}, true );\r\n\t\t\t\t} else {\r\n\t\t\t\t\tts.sortReset( c, function() {\r\n\t\t\t\t\t\tts.resortComplete( c, callback );\r\n\t\t\t\t\t\tts.applyWidget( c.table, false );\r\n\t\t\t\t\t} );\r\n\t\t\t\t}\r\n\t\t\t} else {\r\n\t\t\t\tts.resortComplete( c, callback );\r\n\t\t\t\tts.applyWidget( c.table, false );\r\n\t\t\t}\r\n\t\t},\r\n\r\n\t\tsortOn : function( c, list, callback, init ) {\r\n\t\t\tvar indx,\r\n\t\t\t\ttable = c.table;\r\n\t\t\tc.$table.triggerHandler( 'sortStart', table );\r\n\t\t\tfor (indx = 0; indx < c.columns; indx++) {\r\n\t\t\t\tc.sortVars[ indx ].sortedBy = ts.isValueInArray( indx, list ) > -1 ? 'sorton' : '';\r\n\t\t\t}\r\n\t\t\t// update header count index\r\n\t\t\tts.updateHeaderSortCount( c, list );\r\n\t\t\t// set css for headers\r\n\t\t\tts.setHeadersCss( c );\r\n\t\t\t// fixes #346\r\n\t\t\tif ( c.delayInit && ts.isEmptyObject( c.cache ) ) {\r\n\t\t\t\tts.buildCache( c );\r\n\t\t\t}\r\n\t\t\tc.$table.triggerHandler( 'sortBegin', table );\r\n\t\t\t// sort the table and append it to the dom\r\n\t\t\tts.multisort( c );\r\n\t\t\tts.appendCache( c, init );\r\n\t\t\tc.$table.triggerHandler( 'sortBeforeEnd', table );\r\n\t\t\tc.$table.triggerHandler( 'sortEnd', table );\r\n\t\t\tts.applyWidget( table );\r\n\t\t\tif ( $.isFunction( callback ) ) {\r\n\t\t\t\tcallback( table );\r\n\t\t\t}\r\n\t\t},\r\n\r\n\t\tsortReset : function( c, callback ) {\r\n\t\t\tc.sortList = [];\r\n\t\t\tvar indx;\r\n\t\t\tfor (indx = 0; indx < c.columns; indx++) {\r\n\t\t\t\tc.sortVars[ indx ].count = -1;\r\n\t\t\t\tc.sortVars[ indx ].sortedBy = '';\r\n\t\t\t}\r\n\t\t\tts.setHeadersCss( c );\r\n\t\t\tts.multisort( c );\r\n\t\t\tts.appendCache( c );\r\n\t\t\tif ( $.isFunction( callback ) ) {\r\n\t\t\t\tcallback( c.table );\r\n\t\t\t}\r\n\t\t},\r\n\r\n\t\tgetSortType : function( parsers, column ) {\r\n\t\t\treturn ( parsers && parsers[ column ] ) ? parsers[ column ].type || '' : '';\r\n\t\t},\r\n\r\n\t\tgetOrder : function( val ) {\r\n\t\t\t// look for 'd' in 'desc' order; return true\r\n\t\t\treturn ( /^d/i.test( val ) || val === 1 );\r\n\t\t},\r\n\r\n\t\t// Natural sort - https://github.com/overset/javascript-natural-sort (date sorting removed)\r\n\t\tsortNatural : function( a, b ) {\r\n\t\t\tif ( a === b ) { return 0; }\r\n\t\t\ta = ( a || '' ).toString();\r\n\t\t\tb = ( b || '' ).toString();\r\n\t\t\tvar aNum, bNum, aFloat, bFloat, indx, max,\r\n\t\t\t\tregex = ts.regex;\r\n\t\t\t// first try and sort Hex codes\r\n\t\t\tif ( regex.hex.test( b ) ) {\r\n\t\t\t\taNum = parseInt( a.match( regex.hex ), 16 );\r\n\t\t\t\tbNum = parseInt( b.match( regex.hex ), 16 );\r\n\t\t\t\tif ( aNum < bNum ) { return -1; }\r\n\t\t\t\tif ( aNum > bNum ) { return 1; }\r\n\t\t\t}\r\n\t\t\t// chunk/tokenize\r\n\t\t\taNum = a.replace( regex.chunk, '\\\\0$1\\\\0' ).replace( regex.chunks, '' ).split( '\\\\0' );\r\n\t\t\tbNum = b.replace( regex.chunk, '\\\\0$1\\\\0' ).replace( regex.chunks, '' ).split( '\\\\0' );\r\n\t\t\tmax = Math.max( aNum.length, bNum.length );\r\n\t\t\t// natural sorting through split numeric strings and default strings\r\n\t\t\tfor ( indx = 0; indx < max; indx++ ) {\r\n\t\t\t\t// find floats not starting with '0', string or 0 if not defined\r\n\t\t\t\taFloat = isNaN( aNum[ indx ] ) ? aNum[ indx ] || 0 : parseFloat( aNum[ indx ] ) || 0;\r\n\t\t\t\tbFloat = isNaN( bNum[ indx ] ) ? bNum[ indx ] || 0 : parseFloat( bNum[ indx ] ) || 0;\r\n\t\t\t\t// handle numeric vs string comparison - number < string - (Kyle Adams)\r\n\t\t\t\tif ( isNaN( aFloat ) !== isNaN( bFloat ) ) { return isNaN( aFloat ) ? 1 : -1; }\r\n\t\t\t\t// rely on string comparison if different types - i.e. '02' < 2 != '02' < '2'\r\n\t\t\t\tif ( typeof aFloat !== typeof bFloat ) {\r\n\t\t\t\t\taFloat += '';\r\n\t\t\t\t\tbFloat += '';\r\n\t\t\t\t}\r\n\t\t\t\tif ( aFloat < bFloat ) { return -1; }\r\n\t\t\t\tif ( aFloat > bFloat ) { return 1; }\r\n\t\t\t}\r\n\t\t\treturn 0;\r\n\t\t},\r\n\r\n\t\tsortNaturalAsc : function( a, b, col, c ) {\r\n\t\t\tif ( a === b ) { return 0; }\r\n\t\t\tvar empty = ts.string[ ( c.empties[ col ] || c.emptyTo ) ];\r\n\t\t\tif ( a === '' && empty !== 0 ) { return typeof empty === 'boolean' ? ( empty ? -1 : 1 ) : -empty || -1; }\r\n\t\t\tif ( b === '' && empty !== 0 ) { return typeof empty === 'boolean' ? ( empty ? 1 : -1 ) : empty || 1; }\r\n\t\t\treturn ts.sortNatural( a, b );\r\n\t\t},\r\n\r\n\t\tsortNaturalDesc : function( a, b, col, c ) {\r\n\t\t\tif ( a === b ) { return 0; }\r\n\t\t\tvar empty = ts.string[ ( c.empties[ col ] || c.emptyTo ) ];\r\n\t\t\tif ( a === '' && empty !== 0 ) { return typeof empty === 'boolean' ? ( empty ? -1 : 1 ) : empty || 1; }\r\n\t\t\tif ( b === '' && empty !== 0 ) { return typeof empty === 'boolean' ? ( empty ? 1 : -1 ) : -empty || -1; }\r\n\t\t\treturn ts.sortNatural( b, a );\r\n\t\t},\r\n\r\n\t\t// basic alphabetical sort\r\n\t\tsortText : function( a, b ) {\r\n\t\t\treturn a > b ? 1 : ( a < b ? -1 : 0 );\r\n\t\t},\r\n\r\n\t\t// return text string value by adding up ascii value\r\n\t\t// so the text is somewhat sorted when using a digital sort\r\n\t\t// this is NOT an alphanumeric sort\r\n\t\tgetTextValue : function( val, num, max ) {\r\n\t\t\tif ( max ) {\r\n\t\t\t\t// make sure the text value is greater than the max numerical value (max)\r\n\t\t\t\tvar indx,\r\n\t\t\t\t\tlen = val ? val.length : 0,\r\n\t\t\t\t\tn = max + num;\r\n\t\t\t\tfor ( indx = 0; indx < len; indx++ ) {\r\n\t\t\t\t\tn += val.charCodeAt( indx );\r\n\t\t\t\t}\r\n\t\t\t\treturn num * n;\r\n\t\t\t}\r\n\t\t\treturn 0;\r\n\t\t},\r\n\r\n\t\tsortNumericAsc : function( a, b, num, max, col, c ) {\r\n\t\t\tif ( a === b ) { return 0; }\r\n\t\t\tvar empty = ts.string[ ( c.empties[ col ] || c.emptyTo ) ];\r\n\t\t\tif ( a === '' && empty !== 0 ) { return typeof empty === 'boolean' ? ( empty ? -1 : 1 ) : -empty || -1; }\r\n\t\t\tif ( b === '' && empty !== 0 ) { return typeof empty === 'boolean' ? ( empty ? 1 : -1 ) : empty || 1; }\r\n\t\t\tif ( isNaN( a ) ) { a = ts.getTextValue( a, num, max ); }\r\n\t\t\tif ( isNaN( b ) ) { b = ts.getTextValue( b, num, max ); }\r\n\t\t\treturn a - b;\r\n\t\t},\r\n\r\n\t\tsortNumericDesc : function( a, b, num, max, col, c ) {\r\n\t\t\tif ( a === b ) { return 0; }\r\n\t\t\tvar empty = ts.string[ ( c.empties[ col ] || c.emptyTo ) ];\r\n\t\t\tif ( a === '' && empty !== 0 ) { return typeof empty === 'boolean' ? ( empty ? -1 : 1 ) : empty || 1; }\r\n\t\t\tif ( b === '' && empty !== 0 ) { return typeof empty === 'boolean' ? ( empty ? 1 : -1 ) : -empty || -1; }\r\n\t\t\tif ( isNaN( a ) ) { a = ts.getTextValue( a, num, max ); }\r\n\t\t\tif ( isNaN( b ) ) { b = ts.getTextValue( b, num, max ); }\r\n\t\t\treturn b - a;\r\n\t\t},\r\n\r\n\t\tsortNumeric : function( a, b ) {\r\n\t\t\treturn a - b;\r\n\t\t},\r\n\r\n\t\t/*\r\n\t\t██ ██ ██ ██ █████▄ ▄████▄ ██████ ██████ ▄█████\r\n\t\t██ ██ ██ ██ ██  ██ ██ ▄▄▄ ██▄▄     ██   ▀█▄\r\n\t\t██ ██ ██ ██ ██  ██ ██ ▀██ ██▀▀     ██      ▀█▄\r\n\t\t███████▀ ██ █████▀ ▀████▀ ██████   ██   █████▀\r\n\t\t*/\r\n\t\taddWidget : function( widget ) {\r\n\t\t\tif ( widget.id && !ts.isEmptyObject( ts.getWidgetById( widget.id ) ) ) {\r\n\t\t\t\tconsole.warn( '\"' + widget.id + '\" widget was loaded more than once!' );\r\n\t\t\t}\r\n\t\t\tts.widgets[ ts.widgets.length ] = widget;\r\n\t\t},\r\n\r\n\t\thasWidget : function( $table, name ) {\r\n\t\t\t$table = $( $table );\r\n\t\t\treturn $table.length && $table[ 0 ].config && $table[ 0 ].config.widgetInit[ name ] || false;\r\n\t\t},\r\n\r\n\t\tgetWidgetById : function( name ) {\r\n\t\t\tvar indx, widget,\r\n\t\t\t\tlen = ts.widgets.length;\r\n\t\t\tfor ( indx = 0; indx < len; indx++ ) {\r\n\t\t\t\twidget = ts.widgets[ indx ];\r\n\t\t\t\tif ( widget && widget.id && widget.id.toLowerCase() === name.toLowerCase() ) {\r\n\t\t\t\t\treturn widget;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t},\r\n\r\n\t\tapplyWidgetOptions : function( table ) {\r\n\t\t\tvar indx, widget, wo,\r\n\t\t\t\tc = table.config,\r\n\t\t\t\tlen = c.widgets.length;\r\n\t\t\tif ( len ) {\r\n\t\t\t\tfor ( indx = 0; indx < len; indx++ ) {\r\n\t\t\t\t\twidget = ts.getWidgetById( c.widgets[ indx ] );\r\n\t\t\t\t\tif ( widget && widget.options ) {\r\n\t\t\t\t\t\two = $.extend( true, {}, widget.options );\r\n\t\t\t\t\t\tc.widgetOptions = $.extend( true, wo, c.widgetOptions );\r\n\t\t\t\t\t\t// add widgetOptions to defaults for option validator\r\n\t\t\t\t\t\t$.extend( true, ts.defaults.widgetOptions, widget.options );\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t},\r\n\r\n\t\taddWidgetFromClass : function( table ) {\r\n\t\t\tvar len, indx,\r\n\t\t\t\tc = table.config,\r\n\t\t\t\t// look for widgets to apply from table class\r\n\t\t\t\t// don't match from 'ui-widget-content'; use \\S instead of \\w to include widgets\r\n\t\t\t\t// with dashes in the name, e.g. \"widget-test-2\" extracts out \"test-2\"\r\n\t\t\t\tregex = '^' + c.widgetClass.replace( ts.regex.templateName, '(\\\\S+)+' ) + '$',\r\n\t\t\t\twidgetClass = new RegExp( regex, 'g' ),\r\n\t\t\t\t// split up table class (widget id's can include dashes) - stop using match\r\n\t\t\t\t// otherwise only one widget gets extracted, see #1109\r\n\t\t\t\twidgets = ( table.className || '' ).split( ts.regex.spaces );\r\n\t\t\tif ( widgets.length ) {\r\n\t\t\t\tlen = widgets.length;\r\n\t\t\t\tfor ( indx = 0; indx < len; indx++ ) {\r\n\t\t\t\t\tif ( widgets[ indx ].match( widgetClass ) ) {\r\n\t\t\t\t\t\tc.widgets[ c.widgets.length ] = widgets[ indx ].replace( widgetClass, '$1' );\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t},\r\n\r\n\t\tapplyWidgetId : function( table, id, init ) {\r\n\t\t\ttable = $(table)[0];\r\n\t\t\tvar applied, time, name,\r\n\t\t\t\tc = table.config,\r\n\t\t\t\two = c.widgetOptions,\r\n\t\t\t\tdebug = ts.debug(c, 'core'),\r\n\t\t\t\twidget = ts.getWidgetById( id );\r\n\t\t\tif ( widget ) {\r\n\t\t\t\tname = widget.id;\r\n\t\t\t\tapplied = false;\r\n\t\t\t\t// add widget name to option list so it gets reapplied after sorting, filtering, etc\r\n\t\t\t\tif ( $.inArray( name, c.widgets ) < 0 ) {\r\n\t\t\t\t\tc.widgets[ c.widgets.length ] = name;\r\n\t\t\t\t}\r\n\t\t\t\tif ( debug ) { time = new Date(); }\r\n\r\n\t\t\t\tif ( init || !( c.widgetInit[ name ] ) ) {\r\n\t\t\t\t\t// set init flag first to prevent calling init more than once (e.g. pager)\r\n\t\t\t\t\tc.widgetInit[ name ] = true;\r\n\t\t\t\t\tif ( table.hasInitialized ) {\r\n\t\t\t\t\t\t// don't reapply widget options on tablesorter init\r\n\t\t\t\t\t\tts.applyWidgetOptions( table );\r\n\t\t\t\t\t}\r\n\t\t\t\t\tif ( typeof widget.init === 'function' ) {\r\n\t\t\t\t\t\tapplied = true;\r\n\t\t\t\t\t\tif ( debug ) {\r\n\t\t\t\t\t\t\tconsole[ console.group ? 'group' : 'log' ]( 'Initializing ' + name + ' widget' );\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\twidget.init( table, widget, c, wo );\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t\tif ( !init && typeof widget.format === 'function' ) {\r\n\t\t\t\t\tapplied = true;\r\n\t\t\t\t\tif ( debug ) {\r\n\t\t\t\t\t\tconsole[ console.group ? 'group' : 'log' ]( 'Updating ' + name + ' widget' );\r\n\t\t\t\t\t}\r\n\t\t\t\t\twidget.format( table, c, wo, false );\r\n\t\t\t\t}\r\n\t\t\t\tif ( debug ) {\r\n\t\t\t\t\tif ( applied ) {\r\n\t\t\t\t\t\tconsole.log( 'Completed ' + ( init ? 'initializing ' : 'applying ' ) + name + ' widget' + ts.benchmark( time ) );\r\n\t\t\t\t\t\tif ( console.groupEnd ) { console.groupEnd(); }\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t},\r\n\r\n\t\tapplyWidget : function( table, init, callback ) {\r\n\t\t\ttable = $( table )[ 0 ]; // in case this is called externally\r\n\t\t\tvar indx, len, names, widget, time,\r\n\t\t\t\tc = table.config,\r\n\t\t\t\tdebug = ts.debug(c, 'core'),\r\n\t\t\t\twidgets = [];\r\n\t\t\t// prevent numerous consecutive widget applications\r\n\t\t\tif ( init !== false && table.hasInitialized && ( table.isApplyingWidgets || table.isUpdating ) ) {\r\n\t\t\t\treturn;\r\n\t\t\t}\r\n\t\t\tif ( debug ) { time = new Date(); }\r\n\t\t\tts.addWidgetFromClass( table );\r\n\t\t\t// prevent \"tablesorter-ready\" from firing multiple times in a row\r\n\t\t\tclearTimeout( c.timerReady );\r\n\t\t\tif ( c.widgets.length ) {\r\n\t\t\t\ttable.isApplyingWidgets = true;\r\n\t\t\t\t// ensure unique widget ids\r\n\t\t\t\tc.widgets = $.grep( c.widgets, function( val, index ) {\r\n\t\t\t\t\treturn $.inArray( val, c.widgets ) === index;\r\n\t\t\t\t});\r\n\t\t\t\tnames = c.widgets || [];\r\n\t\t\t\tlen = names.length;\r\n\t\t\t\t// build widget array & add priority as needed\r\n\t\t\t\tfor ( indx = 0; indx < len; indx++ ) {\r\n\t\t\t\t\twidget = ts.getWidgetById( names[ indx ] );\r\n\t\t\t\t\tif ( widget && widget.id ) {\r\n\t\t\t\t\t\t// set priority to 10 if not defined\r\n\t\t\t\t\t\tif ( !widget.priority ) { widget.priority = 10; }\r\n\t\t\t\t\t\twidgets[ indx ] = widget;\r\n\t\t\t\t\t} else if ( debug ) {\r\n\t\t\t\t\t\tconsole.warn( '\"' + names[ indx ] + '\" was enabled, but the widget code has not been loaded!' );\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t\t// sort widgets by priority\r\n\t\t\t\twidgets.sort( function( a, b ) {\r\n\t\t\t\t\treturn a.priority < b.priority ? -1 : a.priority === b.priority ? 0 : 1;\r\n\t\t\t\t});\r\n\t\t\t\t// add/update selected widgets\r\n\t\t\t\tlen = widgets.length;\r\n\t\t\t\tif ( debug ) {\r\n\t\t\t\t\tconsole[ console.group ? 'group' : 'log' ]( 'Start ' + ( init ? 'initializing' : 'applying' ) + ' widgets' );\r\n\t\t\t\t}\r\n\t\t\t\tfor ( indx = 0; indx < len; indx++ ) {\r\n\t\t\t\t\twidget = widgets[ indx ];\r\n\t\t\t\t\tif ( widget && widget.id ) {\r\n\t\t\t\t\t\tts.applyWidgetId( table, widget.id, init );\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t\tif ( debug && console.groupEnd ) { console.groupEnd(); }\r\n\t\t\t}\r\n\t\t\tc.timerReady = setTimeout( function() {\r\n\t\t\t\ttable.isApplyingWidgets = false;\r\n\t\t\t\t$.data( table, 'lastWidgetApplication', new Date() );\r\n\t\t\t\tc.$table.triggerHandler( 'tablesorter-ready' );\r\n\t\t\t\t// callback executed on init only\r\n\t\t\t\tif ( !init && typeof callback === 'function' ) {\r\n\t\t\t\t\tcallback( table );\r\n\t\t\t\t}\r\n\t\t\t\tif ( debug ) {\r\n\t\t\t\t\twidget = c.widgets.length;\r\n\t\t\t\t\tconsole.log( 'Completed ' +\r\n\t\t\t\t\t\t( init === true ? 'initializing ' : 'applying ' ) + widget +\r\n\t\t\t\t\t\t' widget' + ( widget !== 1 ? 's' : '' ) + ts.benchmark( time ) );\r\n\t\t\t\t}\r\n\t\t\t}, 10 );\r\n\t\t},\r\n\r\n\t\tremoveWidget : function( table, name, refreshing ) {\r\n\t\t\ttable = $( table )[ 0 ];\r\n\t\t\tvar index, widget, indx, len,\r\n\t\t\t\tc = table.config;\r\n\t\t\t// if name === true, add all widgets from $.tablesorter.widgets\r\n\t\t\tif ( name === true ) {\r\n\t\t\t\tname = [];\r\n\t\t\t\tlen = ts.widgets.length;\r\n\t\t\t\tfor ( indx = 0; indx < len; indx++ ) {\r\n\t\t\t\t\twidget = ts.widgets[ indx ];\r\n\t\t\t\t\tif ( widget && widget.id ) {\r\n\t\t\t\t\t\tname[ name.length ] = widget.id;\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t} else {\r\n\t\t\t\t// name can be either an array of widgets names,\r\n\t\t\t\t// or a space/comma separated list of widget names\r\n\t\t\t\tname = ( $.isArray( name ) ? name.join( ',' ) : name || '' ).toLowerCase().split( /[\\s,]+/ );\r\n\t\t\t}\r\n\t\t\tlen = name.length;\r\n\t\t\tfor ( index = 0; index < len; index++ ) {\r\n\t\t\t\twidget = ts.getWidgetById( name[ index ] );\r\n\t\t\t\tindx = $.inArray( name[ index ], c.widgets );\r\n\t\t\t\t// don't remove the widget from config.widget if refreshing\r\n\t\t\t\tif ( indx >= 0 && refreshing !== true ) {\r\n\t\t\t\t\tc.widgets.splice( indx, 1 );\r\n\t\t\t\t}\r\n\t\t\t\tif ( widget && widget.remove ) {\r\n\t\t\t\t\tif ( ts.debug(c, 'core') ) {\r\n\t\t\t\t\t\tconsole.log( ( refreshing ? 'Refreshing' : 'Removing' ) + ' \"' + name[ index ] + '\" widget' );\r\n\t\t\t\t\t}\r\n\t\t\t\t\twidget.remove( table, c, c.widgetOptions, refreshing );\r\n\t\t\t\t\tc.widgetInit[ name[ index ] ] = false;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\tc.$table.triggerHandler( 'widgetRemoveEnd', table );\r\n\t\t},\r\n\r\n\t\trefreshWidgets : function( table, doAll, dontapply ) {\r\n\t\t\ttable = $( table )[ 0 ]; // see issue #243\r\n\t\t\tvar indx, widget,\r\n\t\t\t\tc = table.config,\r\n\t\t\t\tcurWidgets = c.widgets,\r\n\t\t\t\twidgets = ts.widgets,\r\n\t\t\t\tlen = widgets.length,\r\n\t\t\t\tlist = [],\r\n\t\t\t\tcallback = function( table ) {\r\n\t\t\t\t\t$( table ).triggerHandler( 'refreshComplete' );\r\n\t\t\t\t};\r\n\t\t\t// remove widgets not defined in config.widgets, unless doAll is true\r\n\t\t\tfor ( indx = 0; indx < len; indx++ ) {\r\n\t\t\t\twidget = widgets[ indx ];\r\n\t\t\t\tif ( widget && widget.id && ( doAll || $.inArray( widget.id, curWidgets ) < 0 ) ) {\r\n\t\t\t\t\tlist[ list.length ] = widget.id;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\tts.removeWidget( table, list.join( ',' ), true );\r\n\t\t\tif ( dontapply !== true ) {\r\n\t\t\t\t// call widget init if\r\n\t\t\t\tts.applyWidget( table, doAll || false, callback );\r\n\t\t\t\tif ( doAll ) {\r\n\t\t\t\t\t// apply widget format\r\n\t\t\t\t\tts.applyWidget( table, false, callback );\r\n\t\t\t\t}\r\n\t\t\t} else {\r\n\t\t\t\tcallback( table );\r\n\t\t\t}\r\n\t\t},\r\n\r\n\t\t/*\r\n\t\t██  ██ ██████ ██ ██     ██ ██████ ██ ██████ ▄█████\r\n\t\t██  ██   ██   ██ ██     ██   ██   ██ ██▄▄   ▀█▄\r\n\t\t██  ██   ██   ██ ██     ██   ██   ██ ██▀▀      ▀█▄\r\n\t\t▀████▀   ██   ██ ██████ ██   ██   ██ ██████ █████▀\r\n\t\t*/\r\n\t\tbenchmark : function( diff ) {\r\n\t\t\treturn ( ' (' + ( new Date().getTime() - diff.getTime() ) + ' ms)' );\r\n\t\t},\r\n\t\t// deprecated ts.log\r\n\t\tlog : function() {\r\n\t\t\tconsole.log( arguments );\r\n\t\t},\r\n\t\tdebug : function(c, name) {\r\n\t\t\treturn c && (\r\n\t\t\t\tc.debug === true ||\r\n\t\t\t\ttypeof c.debug === 'string' && c.debug.indexOf(name) > -1\r\n\t\t\t);\r\n\t\t},\r\n\r\n\t\t// $.isEmptyObject from jQuery v1.4\r\n\t\tisEmptyObject : function( obj ) {\r\n\t\t\t/*jshint forin: false */\r\n\t\t\tfor ( var name in obj ) {\r\n\t\t\t\treturn false;\r\n\t\t\t}\r\n\t\t\treturn true;\r\n\t\t},\r\n\r\n\t\tisValueInArray : function( column, arry ) {\r\n\t\t\tvar indx,\r\n\t\t\t\tlen = arry && arry.length || 0;\r\n\t\t\tfor ( indx = 0; indx < len; indx++ ) {\r\n\t\t\t\tif ( arry[ indx ][ 0 ] === column ) {\r\n\t\t\t\t\treturn indx;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\treturn -1;\r\n\t\t},\r\n\r\n\t\tformatFloat : function( str, table ) {\r\n\t\t\tif ( typeof str !== 'string' || str === '' ) { return str; }\r\n\t\t\t// allow using formatFloat without a table; defaults to US number format\r\n\t\t\tvar num,\r\n\t\t\t\tusFormat = table && table.config ? table.config.usNumberFormat !== false :\r\n\t\t\t\t\ttypeof table !== 'undefined' ? table : true;\r\n\t\t\tif ( usFormat ) {\r\n\t\t\t\t// US Format - 1,234,567.89 -> 1234567.89\r\n\t\t\t\tstr = str.replace( ts.regex.comma, '' );\r\n\t\t\t} else {\r\n\t\t\t\t// German Format = 1.234.567,89 -> 1234567.89\r\n\t\t\t\t// French Format = 1 234 567,89 -> 1234567.89\r\n\t\t\t\tstr = str.replace( ts.regex.digitNonUS, '' ).replace( ts.regex.comma, '.' );\r\n\t\t\t}\r\n\t\t\tif ( ts.regex.digitNegativeTest.test( str ) ) {\r\n\t\t\t\t// make (#) into a negative number -> (10) = -10\r\n\t\t\t\tstr = str.replace( ts.regex.digitNegativeReplace, '-$1' );\r\n\t\t\t}\r\n\t\t\tnum = parseFloat( str );\r\n\t\t\t// return the text instead of zero\r\n\t\t\treturn isNaN( num ) ? $.trim( str ) : num;\r\n\t\t},\r\n\r\n\t\tisDigit : function( str ) {\r\n\t\t\t// replace all unwanted chars and match\r\n\t\t\treturn isNaN( str ) ?\r\n\t\t\t\tts.regex.digitTest.test( str.toString().replace( ts.regex.digitReplace, '' ) ) :\r\n\t\t\t\tstr !== '';\r\n\t\t},\r\n\r\n\t\t// computeTableHeaderCellIndexes from:\r\n\t\t// http://www.javascripttoolbox.com/lib/table/examples.php\r\n\t\t// http://www.javascripttoolbox.com/temp/table_cellindex.html\r\n\t\tcomputeColumnIndex : function( $rows, c ) {\r\n\t\t\tvar i, j, k, l, cell, cells, rowIndex, rowSpan, colSpan, firstAvailCol,\r\n\t\t\t\t// total columns has been calculated, use it to set the matrixrow\r\n\t\t\t\tcolumns = c && c.columns || 0,\r\n\t\t\t\tmatrix = [],\r\n\t\t\t\tmatrixrow = new Array( columns );\r\n\t\t\tfor ( i = 0; i < $rows.length; i++ ) {\r\n\t\t\t\tcells = $rows[ i ].cells;\r\n\t\t\t\tfor ( j = 0; j < cells.length; j++ ) {\r\n\t\t\t\t\tcell = cells[ j ];\r\n\t\t\t\t\trowIndex = i;\r\n\t\t\t\t\trowSpan = cell.rowSpan || 1;\r\n\t\t\t\t\tcolSpan = cell.colSpan || 1;\r\n\t\t\t\t\tif ( typeof matrix[ rowIndex ] === 'undefined' ) {\r\n\t\t\t\t\t\tmatrix[ rowIndex ] = [];\r\n\t\t\t\t\t}\r\n\t\t\t\t\t// Find first available column in the first row\r\n\t\t\t\t\tfor ( k = 0; k < matrix[ rowIndex ].length + 1; k++ ) {\r\n\t\t\t\t\t\tif ( typeof matrix[ rowIndex ][ k ] === 'undefined' ) {\r\n\t\t\t\t\t\t\tfirstAvailCol = k;\r\n\t\t\t\t\t\t\tbreak;\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\t\t\t\t\t// jscs:disable disallowEmptyBlocks\r\n\t\t\t\t\tif ( columns && cell.cellIndex === firstAvailCol ) {\r\n\t\t\t\t\t\t// don't to anything\r\n\t\t\t\t\t} else if ( cell.setAttribute ) {\r\n\t\t\t\t\t\t// jscs:enable disallowEmptyBlocks\r\n\t\t\t\t\t\t// add data-column (setAttribute = IE8+)\r\n\t\t\t\t\t\tcell.setAttribute( 'data-column', firstAvailCol );\r\n\t\t\t\t\t} else {\r\n\t\t\t\t\t\t// remove once we drop support for IE7 - 1/12/2016\r\n\t\t\t\t\t\t$( cell ).attr( 'data-column', firstAvailCol );\r\n\t\t\t\t\t}\r\n\t\t\t\t\tfor ( k = rowIndex; k < rowIndex + rowSpan; k++ ) {\r\n\t\t\t\t\t\tif ( typeof matrix[ k ] === 'undefined' ) {\r\n\t\t\t\t\t\t\tmatrix[ k ] = [];\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\tmatrixrow = matrix[ k ];\r\n\t\t\t\t\t\tfor ( l = firstAvailCol; l < firstAvailCol + colSpan; l++ ) {\r\n\t\t\t\t\t\t\tmatrixrow[ l ] = 'x';\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\tts.checkColumnCount($rows, matrix, matrixrow.length);\r\n\t\t\treturn matrixrow.length;\r\n\t\t},\r\n\r\n\t\tcheckColumnCount : function($rows, matrix, columns) {\r\n\t\t\t// this DOES NOT report any tbody column issues, except for the math and\r\n\t\t\t// and column selector widgets\r\n\t\t\tvar i, len,\r\n\t\t\t\tvalid = true,\r\n\t\t\t\tcells = [];\r\n\t\t\tfor ( i = 0; i < matrix.length; i++ ) {\r\n\t\t\t\t// some matrix entries are undefined when testing the footer because\r\n\t\t\t\t// it is using the rowIndex property\r\n\t\t\t\tif ( matrix[i] ) {\r\n\t\t\t\t\tlen = matrix[i].length;\r\n\t\t\t\t\tif ( matrix[i].length !== columns ) {\r\n\t\t\t\t\t\tvalid = false;\r\n\t\t\t\t\t\tbreak;\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\tif ( !valid ) {\r\n\t\t\t\t$rows.each( function( indx, el ) {\r\n\t\t\t\t\tvar cell = el.parentElement.nodeName;\r\n\t\t\t\t\tif ( cells.indexOf( cell ) < 0 ) {\r\n\t\t\t\t\t\tcells.push( cell );\r\n\t\t\t\t\t}\r\n\t\t\t\t});\r\n\t\t\t\tconsole.error(\r\n\t\t\t\t\t'Invalid or incorrect number of columns in the ' +\r\n\t\t\t\t\tcells.join( ' or ' ) + '; expected ' + columns +\r\n\t\t\t\t\t', but found ' + len + ' columns'\r\n\t\t\t\t);\r\n\t\t\t}\r\n\t\t},\r\n\r\n\t\t// automatically add a colgroup with col elements set to a percentage width\r\n\t\tfixColumnWidth : function( table ) {\r\n\t\t\ttable = $( table )[ 0 ];\r\n\t\t\tvar overallWidth, percent, $tbodies, len, index,\r\n\t\t\t\tc = table.config,\r\n\t\t\t\t$colgroup = c.$table.children( 'colgroup' );\r\n\t\t\t// remove plugin-added colgroup, in case we need to refresh the widths\r\n\t\t\tif ( $colgroup.length && $colgroup.hasClass( ts.css.colgroup ) ) {\r\n\t\t\t\t$colgroup.remove();\r\n\t\t\t}\r\n\t\t\tif ( c.widthFixed && c.$table.children( 'colgroup' ).length === 0 ) {\r\n\t\t\t\t$colgroup = $( '<colgroup class=\"' + ts.css.colgroup + '\">' );\r\n\t\t\t\toverallWidth = c.$table.width();\r\n\t\t\t\t// only add col for visible columns - fixes #371\r\n\t\t\t\t$tbodies = c.$tbodies.find( 'tr:first' ).children( ':visible' );\r\n\t\t\t\tlen = $tbodies.length;\r\n\t\t\t\tfor ( index = 0; index < len; index++ ) {\r\n\t\t\t\t\tpercent = parseInt( ( $tbodies.eq( index ).width() / overallWidth ) * 1000, 10 ) / 10 + '%';\r\n\t\t\t\t\t$colgroup.append( $( '<col>' ).css( 'width', percent ) );\r\n\t\t\t\t}\r\n\t\t\t\tc.$table.prepend( $colgroup );\r\n\t\t\t}\r\n\t\t},\r\n\r\n\t\t// get sorter, string, empty, etc options for each column from\r\n\t\t// jQuery data, metadata, header option or header class name ('sorter-false')\r\n\t\t// priority = jQuery data > meta > headers option > header class name\r\n\t\tgetData : function( header, configHeader, key ) {\r\n\t\t\tvar meta, cl4ss,\r\n\t\t\t\tval = '',\r\n\t\t\t\t$header = $( header );\r\n\t\t\tif ( !$header.length ) { return ''; }\r\n\t\t\tmeta = $.metadata ? $header.metadata() : false;\r\n\t\t\tcl4ss = ' ' + ( $header.attr( 'class' ) || '' );\r\n\t\t\tif ( typeof $header.data( key ) !== 'undefined' ||\r\n\t\t\t\ttypeof $header.data( key.toLowerCase() ) !== 'undefined' ) {\r\n\t\t\t\t// 'data-lockedOrder' is assigned to 'lockedorder'; but 'data-locked-order' is assigned to 'lockedOrder'\r\n\t\t\t\t// 'data-sort-initial-order' is assigned to 'sortInitialOrder'\r\n\t\t\t\tval += $header.data( key ) || $header.data( key.toLowerCase() );\r\n\t\t\t} else if ( meta && typeof meta[ key ] !== 'undefined' ) {\r\n\t\t\t\tval += meta[ key ];\r\n\t\t\t} else if ( configHeader && typeof configHeader[ key ] !== 'undefined' ) {\r\n\t\t\t\tval += configHeader[ key ];\r\n\t\t\t} else if ( cl4ss !== ' ' && cl4ss.match( ' ' + key + '-' ) ) {\r\n\t\t\t\t// include sorter class name 'sorter-text', etc; now works with 'sorter-my-custom-parser'\r\n\t\t\t\tval = cl4ss.match( new RegExp( '\\\\s' + key + '-([\\\\w-]+)' ) )[ 1 ] || '';\r\n\t\t\t}\r\n\t\t\treturn $.trim( val );\r\n\t\t},\r\n\r\n\t\tgetColumnData : function( table, obj, indx, getCell, $headers ) {\r\n\t\t\tif ( typeof obj !== 'object' || obj === null ) {\r\n\t\t\t\treturn obj;\r\n\t\t\t}\r\n\t\t\ttable = $( table )[ 0 ];\r\n\t\t\tvar $header, key,\r\n\t\t\t\tc = table.config,\r\n\t\t\t\t$cells = ( $headers || c.$headers ),\r\n\t\t\t\t// c.$headerIndexed is not defined initially\r\n\t\t\t\t$cell = c.$headerIndexed && c.$headerIndexed[ indx ] ||\r\n\t\t\t\t\t$cells.find( '[data-column=\"' + indx + '\"]:last' );\r\n\t\t\tif ( typeof obj[ indx ] !== 'undefined' ) {\r\n\t\t\t\treturn getCell ? obj[ indx ] : obj[ $cells.index( $cell ) ];\r\n\t\t\t}\r\n\t\t\tfor ( key in obj ) {\r\n\t\t\t\tif ( typeof key === 'string' ) {\r\n\t\t\t\t\t$header = $cell\r\n\t\t\t\t\t\t// header cell with class/id\r\n\t\t\t\t\t\t.filter( key )\r\n\t\t\t\t\t\t// find elements within the header cell with cell/id\r\n\t\t\t\t\t\t.add( $cell.find( key ) );\r\n\t\t\t\t\tif ( $header.length ) {\r\n\t\t\t\t\t\treturn obj[ key ];\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\treturn;\r\n\t\t},\r\n\r\n\t\t// *** Process table ***\r\n\t\t// add processing indicator\r\n\t\tisProcessing : function( $table, toggle, $headers ) {\r\n\t\t\t$table = $( $table );\r\n\t\t\tvar c = $table[ 0 ].config,\r\n\t\t\t\t// default to all headers\r\n\t\t\t\t$header = $headers || $table.find( '.' + ts.css.header );\r\n\t\t\tif ( toggle ) {\r\n\t\t\t\t// don't use sortList if custom $headers used\r\n\t\t\t\tif ( typeof $headers !== 'undefined' && c.sortList.length > 0 ) {\r\n\t\t\t\t\t// get headers from the sortList\r\n\t\t\t\t\t$header = $header.filter( function() {\r\n\t\t\t\t\t\t// get data-column from attr to keep compatibility with jQuery 1.2.6\r\n\t\t\t\t\t\treturn this.sortDisabled ?\r\n\t\t\t\t\t\t\tfalse :\r\n\t\t\t\t\t\t\tts.isValueInArray( parseFloat( $( this ).attr( 'data-column' ) ), c.sortList ) >= 0;\r\n\t\t\t\t\t});\r\n\t\t\t\t}\r\n\t\t\t\t$table.add( $header ).addClass( ts.css.processing + ' ' + c.cssProcessing );\r\n\t\t\t} else {\r\n\t\t\t\t$table.add( $header ).removeClass( ts.css.processing + ' ' + c.cssProcessing );\r\n\t\t\t}\r\n\t\t},\r\n\r\n\t\t// detach tbody but save the position\r\n\t\t// don't use tbody because there are portions that look for a tbody index (updateCell)\r\n\t\tprocessTbody : function( table, $tb, getIt ) {\r\n\t\t\ttable = $( table )[ 0 ];\r\n\t\t\tif ( getIt ) {\r\n\t\t\t\ttable.isProcessing = true;\r\n\t\t\t\t$tb.before( '<colgroup class=\"tablesorter-savemyplace\"/>' );\r\n\t\t\t\treturn $.fn.detach ? $tb.detach() : $tb.remove();\r\n\t\t\t}\r\n\t\t\tvar holdr = $( table ).find( 'colgroup.tablesorter-savemyplace' );\r\n\t\t\t$tb.insertAfter( holdr );\r\n\t\t\tholdr.remove();\r\n\t\t\ttable.isProcessing = false;\r\n\t\t},\r\n\r\n\t\tclearTableBody : function( table ) {\r\n\t\t\t$( table )[ 0 ].config.$tbodies.children().detach();\r\n\t\t},\r\n\r\n\t\t// used when replacing accented characters during sorting\r\n\t\tcharacterEquivalents : {\r\n\t\t\t'a' : '\\u00e1\\u00e0\\u00e2\\u00e3\\u00e4\\u0105\\u00e5', // áàâãäąå\r\n\t\t\t'A' : '\\u00c1\\u00c0\\u00c2\\u00c3\\u00c4\\u0104\\u00c5', // ÁÀÂÃÄĄÅ\r\n\t\t\t'c' : '\\u00e7\\u0107\\u010d', // çćč\r\n\t\t\t'C' : '\\u00c7\\u0106\\u010c', // ÇĆČ\r\n\t\t\t'e' : '\\u00e9\\u00e8\\u00ea\\u00eb\\u011b\\u0119', // éèêëěę\r\n\t\t\t'E' : '\\u00c9\\u00c8\\u00ca\\u00cb\\u011a\\u0118', // ÉÈÊËĚĘ\r\n\t\t\t'i' : '\\u00ed\\u00ec\\u0130\\u00ee\\u00ef\\u0131', // íìİîïı\r\n\t\t\t'I' : '\\u00cd\\u00cc\\u0130\\u00ce\\u00cf', // ÍÌİÎÏ\r\n\t\t\t'o' : '\\u00f3\\u00f2\\u00f4\\u00f5\\u00f6\\u014d', // óòôõöō\r\n\t\t\t'O' : '\\u00d3\\u00d2\\u00d4\\u00d5\\u00d6\\u014c', // ÓÒÔÕÖŌ\r\n\t\t\t'ss': '\\u00df', // ß (s sharp)\r\n\t\t\t'SS': '\\u1e9e', // ẞ (Capital sharp s)\r\n\t\t\t'u' : '\\u00fa\\u00f9\\u00fb\\u00fc\\u016f', // úùûüů\r\n\t\t\t'U' : '\\u00da\\u00d9\\u00db\\u00dc\\u016e' // ÚÙÛÜŮ\r\n\t\t},\r\n\r\n\t\treplaceAccents : function( str ) {\r\n\t\t\tvar chr,\r\n\t\t\t\tacc = '[',\r\n\t\t\t\teq = ts.characterEquivalents;\r\n\t\t\tif ( !ts.characterRegex ) {\r\n\t\t\t\tts.characterRegexArray = {};\r\n\t\t\t\tfor ( chr in eq ) {\r\n\t\t\t\t\tif ( typeof chr === 'string' ) {\r\n\t\t\t\t\t\tacc += eq[ chr ];\r\n\t\t\t\t\t\tts.characterRegexArray[ chr ] = new RegExp( '[' + eq[ chr ] + ']', 'g' );\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t\tts.characterRegex = new RegExp( acc + ']' );\r\n\t\t\t}\r\n\t\t\tif ( ts.characterRegex.test( str ) ) {\r\n\t\t\t\tfor ( chr in eq ) {\r\n\t\t\t\t\tif ( typeof chr === 'string' ) {\r\n\t\t\t\t\t\tstr = str.replace( ts.characterRegexArray[ chr ], chr );\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\treturn str;\r\n\t\t},\r\n\r\n\t\tvalidateOptions : function( c ) {\r\n\t\t\tvar setting, setting2, typ, timer,\r\n\t\t\t\t// ignore options containing an array\r\n\t\t\t\tignore = 'headers sortForce sortList sortAppend widgets'.split( ' ' ),\r\n\t\t\t\torig = c.originalSettings;\r\n\t\t\tif ( orig ) {\r\n\t\t\t\tif ( ts.debug(c, 'core') ) {\r\n\t\t\t\t\ttimer = new Date();\r\n\t\t\t\t}\r\n\t\t\t\tfor ( setting in orig ) {\r\n\t\t\t\t\ttyp = typeof ts.defaults[setting];\r\n\t\t\t\t\tif ( typ === 'undefined' ) {\r\n\t\t\t\t\t\tconsole.warn( 'Tablesorter Warning! \"table.config.' + setting + '\" option not recognized' );\r\n\t\t\t\t\t} else if ( typ === 'object' ) {\r\n\t\t\t\t\t\tfor ( setting2 in orig[setting] ) {\r\n\t\t\t\t\t\t\ttyp = ts.defaults[setting] && typeof ts.defaults[setting][setting2];\r\n\t\t\t\t\t\t\tif ( $.inArray( setting, ignore ) < 0 && typ === 'undefined' ) {\r\n\t\t\t\t\t\t\t\tconsole.warn( 'Tablesorter Warning! \"table.config.' + setting + '.' + setting2 + '\" option not recognized' );\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t\tif ( ts.debug(c, 'core') ) {\r\n\t\t\t\t\tconsole.log( 'validate options time:' + ts.benchmark( timer ) );\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t},\r\n\r\n\t\t// restore headers\r\n\t\trestoreHeaders : function( table ) {\r\n\t\t\tvar index, $cell,\r\n\t\t\t\tc = $( table )[ 0 ].config,\r\n\t\t\t\t$headers = c.$table.find( c.selectorHeaders ),\r\n\t\t\t\tlen = $headers.length;\r\n\t\t\t// don't use c.$headers here in case header cells were swapped\r\n\t\t\tfor ( index = 0; index < len; index++ ) {\r\n\t\t\t\t$cell = $headers.eq( index );\r\n\t\t\t\t// only restore header cells if it is wrapped\r\n\t\t\t\t// because this is also used by the updateAll method\r\n\t\t\t\tif ( $cell.find( '.' + ts.css.headerIn ).length ) {\r\n\t\t\t\t\t$cell.html( c.headerContent[ index ] );\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t},\r\n\r\n\t\tdestroy : function( table, removeClasses, callback ) {\r\n\t\t\ttable = $( table )[ 0 ];\r\n\t\t\tif ( !table.hasInitialized ) { return; }\r\n\t\t\t// remove all widgets\r\n\t\t\tts.removeWidget( table, true, false );\r\n\t\t\tvar events,\r\n\t\t\t\t$t = $( table ),\r\n\t\t\t\tc = table.config,\r\n\t\t\t\t$h = $t.find( 'thead:first' ),\r\n\t\t\t\t$r = $h.find( 'tr.' + ts.css.headerRow ).removeClass( ts.css.headerRow + ' ' + c.cssHeaderRow ),\r\n\t\t\t\t$f = $t.find( 'tfoot:first > tr' ).children( 'th, td' );\r\n\t\t\tif ( removeClasses === false && $.inArray( 'uitheme', c.widgets ) >= 0 ) {\r\n\t\t\t\t// reapply uitheme classes, in case we want to maintain appearance\r\n\t\t\t\t$t.triggerHandler( 'applyWidgetId', [ 'uitheme' ] );\r\n\t\t\t\t$t.triggerHandler( 'applyWidgetId', [ 'zebra' ] );\r\n\t\t\t}\r\n\t\t\t// remove widget added rows, just in case\r\n\t\t\t$h.find( 'tr' ).not( $r ).remove();\r\n\t\t\t// disable tablesorter - not using .unbind( namespace ) because namespacing was\r\n\t\t\t// added in jQuery v1.4.3 - see http://api.jquery.com/event.namespace/\r\n\t\t\tevents = 'sortReset update updateRows updateAll updateHeaders updateCell addRows updateComplete sorton ' +\r\n\t\t\t\t'appendCache updateCache applyWidgetId applyWidgets refreshWidgets removeWidget destroy mouseup mouseleave ' +\r\n\t\t\t\t'keypress sortBegin sortEnd resetToLoadState '.split( ' ' )\r\n\t\t\t\t.join( c.namespace + ' ' );\r\n\t\t\t$t\r\n\t\t\t\t.removeData( 'tablesorter' )\r\n\t\t\t\t.unbind( events.replace( ts.regex.spaces, ' ' ) );\r\n\t\t\tc.$headers\r\n\t\t\t\t.add( $f )\r\n\t\t\t\t.removeClass( [ ts.css.header, c.cssHeader, c.cssAsc, c.cssDesc, ts.css.sortAsc, ts.css.sortDesc, ts.css.sortNone ].join( ' ' ) )\r\n\t\t\t\t.removeAttr( 'data-column' )\r\n\t\t\t\t.removeAttr( 'aria-label' )\r\n\t\t\t\t.attr( 'aria-disabled', 'true' );\r\n\t\t\t$r\r\n\t\t\t\t.find( c.selectorSort )\r\n\t\t\t\t.unbind( ( 'mousedown mouseup keypress '.split( ' ' ).join( c.namespace + ' ' ) ).replace( ts.regex.spaces, ' ' ) );\r\n\t\t\tts.restoreHeaders( table );\r\n\t\t\t$t.toggleClass( ts.css.table + ' ' + c.tableClass + ' tablesorter-' + c.theme, removeClasses === false );\r\n\t\t\t$t.removeClass(c.namespace.slice(1));\r\n\t\t\t// clear flag in case the plugin is initialized again\r\n\t\t\ttable.hasInitialized = false;\r\n\t\t\tdelete table.config.cache;\r\n\t\t\tif ( typeof callback === 'function' ) {\r\n\t\t\t\tcallback( table );\r\n\t\t\t}\r\n\t\t\tif ( ts.debug(c, 'core') ) {\r\n\t\t\t\tconsole.log( 'tablesorter has been removed' );\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t};\r\n\r\n\t$.fn.tablesorter = function( settings ) {\r\n\t\treturn this.each( function() {\r\n\t\t\tvar table = this,\r\n\t\t\t// merge & extend config options\r\n\t\t\tc = $.extend( true, {}, ts.defaults, settings, ts.instanceMethods );\r\n\t\t\t// save initial settings\r\n\t\t\tc.originalSettings = settings;\r\n\t\t\t// create a table from data (build table widget)\r\n\t\t\tif ( !table.hasInitialized && ts.buildTable && this.nodeName !== 'TABLE' ) {\r\n\t\t\t\t// return the table (in case the original target is the table's container)\r\n\t\t\t\tts.buildTable( table, c );\r\n\t\t\t} else {\r\n\t\t\t\tts.setup( table, c );\r\n\t\t\t}\r\n\t\t});\r\n\t};\r\n\r\n\t// set up debug logs\r\n\tif ( !( window.console && window.console.log ) ) {\r\n\t\t// access $.tablesorter.logs for browsers that don't have a console...\r\n\t\tts.logs = [];\r\n\t\t/*jshint -W020 */\r\n\t\tconsole = {};\r\n\t\tconsole.log = console.warn = console.error = console.table = function() {\r\n\t\t\tvar arg = arguments.length > 1 ? arguments : arguments[0];\r\n\t\t\tts.logs[ ts.logs.length ] = { date: Date.now(), log: arg };\r\n\t\t};\r\n\t}\r\n\r\n\t// add default parsers\r\n\tts.addParser({\r\n\t\tid : 'no-parser',\r\n\t\tis : function() {\r\n\t\t\treturn false;\r\n\t\t},\r\n\t\tformat : function() {\r\n\t\t\treturn '';\r\n\t\t},\r\n\t\ttype : 'text'\r\n\t});\r\n\r\n\tts.addParser({\r\n\t\tid : 'text',\r\n\t\tis : function() {\r\n\t\t\treturn true;\r\n\t\t},\r\n\t\tformat : function( str, table ) {\r\n\t\t\tvar c = table.config;\r\n\t\t\tif ( str ) {\r\n\t\t\t\tstr = $.trim( c.ignoreCase ? str.toLocaleLowerCase() : str );\r\n\t\t\t\tstr = c.sortLocaleCompare ? ts.replaceAccents( str ) : str;\r\n\t\t\t}\r\n\t\t\treturn str;\r\n\t\t},\r\n\t\ttype : 'text'\r\n\t});\r\n\r\n\tts.regex.nondigit = /[^\\w,. \\-()]/g;\r\n\tts.addParser({\r\n\t\tid : 'digit',\r\n\t\tis : function( str ) {\r\n\t\t\treturn ts.isDigit( str );\r\n\t\t},\r\n\t\tformat : function( str, table ) {\r\n\t\t\tvar num = ts.formatFloat( ( str || '' ).replace( ts.regex.nondigit, '' ), table );\r\n\t\t\treturn str && typeof num === 'number' ? num :\r\n\t\t\t\tstr ? $.trim( str && table.config.ignoreCase ? str.toLocaleLowerCase() : str ) : str;\r\n\t\t},\r\n\t\ttype : 'numeric'\r\n\t});\r\n\r\n\tts.regex.currencyReplace = /[+\\-,. ]/g;\r\n\tts.regex.currencyTest = /^\\(?\\d+[\\u00a3$\\u20ac\\u00a4\\u00a5\\u00a2?.]|[\\u00a3$\\u20ac\\u00a4\\u00a5\\u00a2?.]\\d+\\)?$/;\r\n\tts.addParser({\r\n\t\tid : 'currency',\r\n\t\tis : function( str ) {\r\n\t\t\tstr = ( str || '' ).replace( ts.regex.currencyReplace, '' );\r\n\t\t\t// test for £$€¤¥¢\r\n\t\t\treturn ts.regex.currencyTest.test( str );\r\n\t\t},\r\n\t\tformat : function( str, table ) {\r\n\t\t\tvar num = ts.formatFloat( ( str || '' ).replace( ts.regex.nondigit, '' ), table );\r\n\t\t\treturn str && typeof num === 'number' ? num :\r\n\t\t\t\tstr ? $.trim( str && table.config.ignoreCase ? str.toLocaleLowerCase() : str ) : str;\r\n\t\t},\r\n\t\ttype : 'numeric'\r\n\t});\r\n\r\n\t// too many protocols to add them all https://en.wikipedia.org/wiki/URI_scheme\r\n\t// now, this regex can be updated before initialization\r\n\tts.regex.urlProtocolTest = /^(https?|ftp|file):\\/\\//;\r\n\tts.regex.urlProtocolReplace = /(https?|ftp|file):\\/\\/(www\\.)?/;\r\n\tts.addParser({\r\n\t\tid : 'url',\r\n\t\tis : function( str ) {\r\n\t\t\treturn ts.regex.urlProtocolTest.test( str );\r\n\t\t},\r\n\t\tformat : function( str ) {\r\n\t\t\treturn str ? $.trim( str.replace( ts.regex.urlProtocolReplace, '' ) ) : str;\r\n\t\t},\r\n\t\ttype : 'text'\r\n\t});\r\n\r\n\tts.regex.dash = /-/g;\r\n\tts.regex.isoDate = /^\\d{4}[\\/\\-]\\d{1,2}[\\/\\-]\\d{1,2}/;\r\n\tts.addParser({\r\n\t\tid : 'isoDate',\r\n\t\tis : function( str ) {\r\n\t\t\treturn ts.regex.isoDate.test( str );\r\n\t\t},\r\n\t\tformat : function( str ) {\r\n\t\t\tvar date = str ? new Date( str.replace( ts.regex.dash, '/' ) ) : str;\r\n\t\t\treturn date instanceof Date && isFinite( date ) ? date.getTime() : str;\r\n\t\t},\r\n\t\ttype : 'numeric'\r\n\t});\r\n\r\n\tts.regex.percent = /%/g;\r\n\tts.regex.percentTest = /(\\d\\s*?%|%\\s*?\\d)/;\r\n\tts.addParser({\r\n\t\tid : 'percent',\r\n\t\tis : function( str ) {\r\n\t\t\treturn ts.regex.percentTest.test( str ) && str.length < 15;\r\n\t\t},\r\n\t\tformat : function( str, table ) {\r\n\t\t\treturn str ? ts.formatFloat( str.replace( ts.regex.percent, '' ), table ) : str;\r\n\t\t},\r\n\t\ttype : 'numeric'\r\n\t});\r\n\r\n\t// added image parser to core v2.17.9\r\n\tts.addParser({\r\n\t\tid : 'image',\r\n\t\tis : function( str, table, node, $node ) {\r\n\t\t\treturn $node.find( 'img' ).length > 0;\r\n\t\t},\r\n\t\tformat : function( str, table, cell ) {\r\n\t\t\treturn $( cell ).find( 'img' ).attr( table.config.imgAttr || 'alt' ) || str;\r\n\t\t},\r\n\t\tparsed : true, // filter widget flag\r\n\t\ttype : 'text'\r\n\t});\r\n\r\n\tts.regex.dateReplace = /(\\S)([AP]M)$/i; // used by usLongDate & time parser\r\n\tts.regex.usLongDateTest1 = /^[A-Z]{3,10}\\.?\\s+\\d{1,2},?\\s+(\\d{4})(\\s+\\d{1,2}:\\d{2}(:\\d{2})?(\\s+[AP]M)?)?$/i;\r\n\tts.regex.usLongDateTest2 = /^\\d{1,2}\\s+[A-Z]{3,10}\\s+\\d{4}/i;\r\n\tts.addParser({\r\n\t\tid : 'usLongDate',\r\n\t\tis : function( str ) {\r\n\t\t\t// two digit years are not allowed cross-browser\r\n\t\t\t// Jan 01, 2013 12:34:56 PM or 01 Jan 2013\r\n\t\t\treturn ts.regex.usLongDateTest1.test( str ) || ts.regex.usLongDateTest2.test( str );\r\n\t\t},\r\n\t\tformat : function( str ) {\r\n\t\t\tvar date = str ? new Date( str.replace( ts.regex.dateReplace, '$1 $2' ) ) : str;\r\n\t\t\treturn date instanceof Date && isFinite( date ) ? date.getTime() : str;\r\n\t\t},\r\n\t\ttype : 'numeric'\r\n\t});\r\n\r\n\t// testing for ##-##-#### or ####-##-##, so it's not perfect; time can be included\r\n\tts.regex.shortDateTest = /(^\\d{1,2}[\\/\\s]\\d{1,2}[\\/\\s]\\d{4})|(^\\d{4}[\\/\\s]\\d{1,2}[\\/\\s]\\d{1,2})/;\r\n\t// escaped \"-\" because JSHint in Firefox was showing it as an error\r\n\tts.regex.shortDateReplace = /[\\-.,]/g;\r\n\t// XXY covers MDY & DMY formats\r\n\tts.regex.shortDateXXY = /(\\d{1,2})[\\/\\s](\\d{1,2})[\\/\\s](\\d{4})/;\r\n\tts.regex.shortDateYMD = /(\\d{4})[\\/\\s](\\d{1,2})[\\/\\s](\\d{1,2})/;\r\n\tts.convertFormat = function( dateString, format ) {\r\n\t\tdateString = ( dateString || '' )\r\n\t\t\t.replace( ts.regex.spaces, ' ' )\r\n\t\t\t.replace( ts.regex.shortDateReplace, '/' );\r\n\t\tif ( format === 'mmddyyyy' ) {\r\n\t\t\tdateString = dateString.replace( ts.regex.shortDateXXY, '$3/$1/$2' );\r\n\t\t} else if ( format === 'ddmmyyyy' ) {\r\n\t\t\tdateString = dateString.replace( ts.regex.shortDateXXY, '$3/$2/$1' );\r\n\t\t} else if ( format === 'yyyymmdd' ) {\r\n\t\t\tdateString = dateString.replace( ts.regex.shortDateYMD, '$1/$2/$3' );\r\n\t\t}\r\n\t\tvar date = new Date( dateString );\r\n\t\treturn date instanceof Date && isFinite( date ) ? date.getTime() : '';\r\n\t};\r\n\r\n\tts.addParser({\r\n\t\tid : 'shortDate', // 'mmddyyyy', 'ddmmyyyy' or 'yyyymmdd'\r\n\t\tis : function( str ) {\r\n\t\t\tstr = ( str || '' ).replace( ts.regex.spaces, ' ' ).replace( ts.regex.shortDateReplace, '/' );\r\n\t\t\treturn ts.regex.shortDateTest.test( str );\r\n\t\t},\r\n\t\tformat : function( str, table, cell, cellIndex ) {\r\n\t\t\tif ( str ) {\r\n\t\t\t\tvar c = table.config,\r\n\t\t\t\t\t$header = c.$headerIndexed[ cellIndex ],\r\n\t\t\t\t\tformat = $header.length && $header.data( 'dateFormat' ) ||\r\n\t\t\t\t\t\tts.getData( $header, ts.getColumnData( table, c.headers, cellIndex ), 'dateFormat' ) ||\r\n\t\t\t\t\t\tc.dateFormat;\r\n\t\t\t\t// save format because getData can be slow...\r\n\t\t\t\tif ( $header.length ) {\r\n\t\t\t\t\t$header.data( 'dateFormat', format );\r\n\t\t\t\t}\r\n\t\t\t\treturn ts.convertFormat( str, format ) || str;\r\n\t\t\t}\r\n\t\t\treturn str;\r\n\t\t},\r\n\t\ttype : 'numeric'\r\n\t});\r\n\r\n\t// match 24 hour time & 12 hours time + am/pm - see http://regexr.com/3c3tk\r\n\tts.regex.timeTest = /^(0?[1-9]|1[0-2]):([0-5]\\d)(\\s[AP]M)$|^((?:[01]\\d|[2][0-4]):[0-5]\\d)$/i;\r\n\tts.regex.timeMatch = /(0?[1-9]|1[0-2]):([0-5]\\d)(\\s[AP]M)|((?:[01]\\d|[2][0-4]):[0-5]\\d)/i;\r\n\tts.addParser({\r\n\t\tid : 'time',\r\n\t\tis : function( str ) {\r\n\t\t\treturn ts.regex.timeTest.test( str );\r\n\t\t},\r\n\t\tformat : function( str ) {\r\n\t\t\t// isolate time... ignore month, day and year\r\n\t\t\tvar temp,\r\n\t\t\t\ttimePart = ( str || '' ).match( ts.regex.timeMatch ),\r\n\t\t\t\torig = new Date( str ),\r\n\t\t\t\t// no time component? default to 00:00 by leaving it out, but only if str is defined\r\n\t\t\t\ttime = str && ( timePart !== null ? timePart[ 0 ] : '00:00 AM' ),\r\n\t\t\t\tdate = time ? new Date( '2000/01/01 ' + time.replace( ts.regex.dateReplace, '$1 $2' ) ) : time;\r\n\t\t\tif ( date instanceof Date && isFinite( date ) ) {\r\n\t\t\t\ttemp = orig instanceof Date && isFinite( orig ) ? orig.getTime() : 0;\r\n\t\t\t\t// if original string was a valid date, add it to the decimal so the column sorts in some kind of order\r\n\t\t\t\t// luckily new Date() ignores the decimals\r\n\t\t\t\treturn temp ? parseFloat( date.getTime() + '.' + orig.getTime() ) : date.getTime();\r\n\t\t\t}\r\n\t\t\treturn str;\r\n\t\t},\r\n\t\ttype : 'numeric'\r\n\t});\r\n\r\n\tts.addParser({\r\n\t\tid : 'metadata',\r\n\t\tis : function() {\r\n\t\t\treturn false;\r\n\t\t},\r\n\t\tformat : function( str, table, cell ) {\r\n\t\t\tvar c = table.config,\r\n\t\t\tp = ( !c.parserMetadataName ) ? 'sortValue' : c.parserMetadataName;\r\n\t\t\treturn $( cell ).metadata()[ p ];\r\n\t\t},\r\n\t\ttype : 'numeric'\r\n\t});\r\n\r\n\t/*\r\n\t\t██████ ██████ █████▄ █████▄ ▄████▄\r\n\t\t  ▄█▀  ██▄▄   ██▄▄██ ██▄▄██ ██▄▄██\r\n\t\t▄█▀    ██▀▀   ██▀▀██ ██▀▀█  ██▀▀██\r\n\t\t██████ ██████ █████▀ ██  ██ ██  ██\r\n\t\t*/\r\n\t// add default widgets\r\n\tts.addWidget({\r\n\t\tid : 'zebra',\r\n\t\tpriority : 90,\r\n\t\tformat : function( table, c, wo ) {\r\n\t\t\tvar $visibleRows, $row, count, isEven, tbodyIndex, rowIndex, len,\r\n\t\t\t\tchild = new RegExp( c.cssChildRow, 'i' ),\r\n\t\t\t\t$tbodies = c.$tbodies.add( $( c.namespace + '_extra_table' ).children( 'tbody:not(.' + c.cssInfoBlock + ')' ) );\r\n\t\t\tfor ( tbodyIndex = 0; tbodyIndex < $tbodies.length; tbodyIndex++ ) {\r\n\t\t\t\t// loop through the visible rows\r\n\t\t\t\tcount = 0;\r\n\t\t\t\t$visibleRows = $tbodies.eq( tbodyIndex ).children( 'tr:visible' ).not( c.selectorRemove );\r\n\t\t\t\tlen = $visibleRows.length;\r\n\t\t\t\tfor ( rowIndex = 0; rowIndex < len; rowIndex++ ) {\r\n\t\t\t\t\t$row = $visibleRows.eq( rowIndex );\r\n\t\t\t\t\t// style child rows the same way the parent row was styled\r\n\t\t\t\t\tif ( !child.test( $row[ 0 ].className ) ) { count++; }\r\n\t\t\t\t\tisEven = ( count % 2 === 0 );\r\n\t\t\t\t\t$row\r\n\t\t\t\t\t\t.removeClass( wo.zebra[ isEven ? 1 : 0 ] )\r\n\t\t\t\t\t\t.addClass( wo.zebra[ isEven ? 0 : 1 ] );\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t},\r\n\t\tremove : function( table, c, wo, refreshing ) {\r\n\t\t\tif ( refreshing ) { return; }\r\n\t\t\tvar tbodyIndex, $tbody,\r\n\t\t\t\t$tbodies = c.$tbodies,\r\n\t\t\t\ttoRemove = ( wo.zebra || [ 'even', 'odd' ] ).join( ' ' );\r\n\t\t\tfor ( tbodyIndex = 0; tbodyIndex < $tbodies.length; tbodyIndex++ ) {\r\n\t\t\t\t$tbody = ts.processTbody( table, $tbodies.eq( tbodyIndex ), true ); // remove tbody\r\n\t\t\t\t$tbody.children().removeClass( toRemove );\r\n\t\t\t\tts.processTbody( table, $tbody, false ); // restore tbody\r\n\t\t\t}\r\n\t\t}\r\n\t});\r\n\r\n})( jQuery );\r\n\r\n/*! Widget: storage - updated 2018-03-18 (v2.30.0) */\r\n/*global JSON:false */\r\n;(function ($, window, document) {\r\n\t'use strict';\r\n\r\n\tvar ts = $.tablesorter || {};\r\n\r\n\t// update defaults for validator; these values must be falsy!\r\n\t$.extend(true, ts.defaults, {\r\n\t\tfixedUrl: '',\r\n\t\twidgetOptions: {\r\n\t\t\tstorage_fixedUrl: '',\r\n\t\t\tstorage_group: '',\r\n\t\t\tstorage_page: '',\r\n\t\t\tstorage_storageType: '',\r\n\t\t\tstorage_tableId: '',\r\n\t\t\tstorage_useSessionStorage: ''\r\n\t\t}\r\n\t});\r\n\r\n\t// *** Store data in local storage, with a cookie fallback ***\r\n\t/* IE7 needs JSON library for JSON.stringify - (http://caniuse.com/#search=json)\r\n\t   if you need it, then include https://github.com/douglascrockford/JSON-js\r\n\r\n\t   $.parseJSON is not available is jQuery versions older than 1.4.1, using older\r\n\t   versions will only allow storing information for one page at a time\r\n\r\n\t   // *** Save data (JSON format only) ***\r\n\t   // val must be valid JSON... use http://jsonlint.com/ to ensure it is valid\r\n\t   var val = { \"mywidget\" : \"data1\" }; // valid JSON uses double quotes\r\n\t   // $.tablesorter.storage(table, key, val);\r\n\t   $.tablesorter.storage(table, 'tablesorter-mywidget', val);\r\n\r\n\t   // *** Get data: $.tablesorter.storage(table, key); ***\r\n\t   v = $.tablesorter.storage(table, 'tablesorter-mywidget');\r\n\t   // val may be empty, so also check for your data\r\n\t   val = (v && v.hasOwnProperty('mywidget')) ? v.mywidget : '';\r\n\t   alert(val); // 'data1' if saved, or '' if not\r\n\t*/\r\n\tts.storage = function(table, key, value, options) {\r\n\t\ttable = $(table)[0];\r\n\t\tvar cookieIndex, cookies, date,\r\n\t\t\thasStorage = false,\r\n\t\t\tvalues = {},\r\n\t\t\tc = table.config,\r\n\t\t\two = c && c.widgetOptions,\r\n\t\t\tdebug = ts.debug(c, 'storage'),\r\n\t\t\tstorageType = (\r\n\t\t\t\t( options && options.storageType ) || ( wo && wo.storage_storageType )\r\n\t\t\t).toString().charAt(0).toLowerCase(),\r\n\t\t\t// deprecating \"useSessionStorage\"; any storageType setting overrides it\r\n\t\t\tsession = storageType ? '' :\r\n\t\t\t\t( options && options.useSessionStorage ) || ( wo && wo.storage_useSessionStorage ),\r\n\t\t\t$table = $(table),\r\n\t\t\t// id from (1) options ID, (2) table 'data-table-group' attribute, (3) widgetOptions.storage_tableId,\r\n\t\t\t// (4) table ID, then (5) table index\r\n\t\t\tid = options && options.id ||\r\n\t\t\t\t$table.attr( options && options.group || wo && wo.storage_group || 'data-table-group') ||\r\n\t\t\t\two && wo.storage_tableId || table.id || $('.tablesorter').index( $table ),\r\n\t\t\t// url from (1) options url, (2) table 'data-table-page' attribute, (3) widgetOptions.storage_fixedUrl,\r\n\t\t\t// (4) table.config.fixedUrl (deprecated), then (5) window location path\r\n\t\t\turl = options && options.url ||\r\n\t\t\t\t$table.attr(options && options.page || wo && wo.storage_page || 'data-table-page') ||\r\n\t\t\t\two && wo.storage_fixedUrl || c && c.fixedUrl || window.location.pathname;\r\n\r\n\t\t// skip if using cookies\r\n\t\tif (storageType !== 'c') {\r\n\t\t\tstorageType = (storageType === 's' || session) ? 'sessionStorage' : 'localStorage';\r\n\t\t\t// https://gist.github.com/paulirish/5558557\r\n\t\t\tif (storageType in window) {\r\n\t\t\t\ttry {\r\n\t\t\t\t\twindow[storageType].setItem('_tmptest', 'temp');\r\n\t\t\t\t\thasStorage = true;\r\n\t\t\t\t\twindow[storageType].removeItem('_tmptest');\r\n\t\t\t\t} catch (error) {\r\n\t\t\t\t\tconsole.warn( storageType + ' is not supported in this browser' );\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\t\tif (debug) {\r\n\t\t\tconsole.log('Storage >> Using', hasStorage ? storageType : 'cookies');\r\n\t\t}\r\n\t\t// *** get value ***\r\n\t\tif ($.parseJSON) {\r\n\t\t\tif (hasStorage) {\r\n\t\t\t\tvalues = $.parseJSON( window[storageType][key] || 'null' ) || {};\r\n\t\t\t} else {\r\n\t\t\t\t// old browser, using cookies\r\n\t\t\t\tcookies = document.cookie.split(/[;\\s|=]/);\r\n\t\t\t\t// add one to get from the key to the value\r\n\t\t\t\tcookieIndex = $.inArray(key, cookies) + 1;\r\n\t\t\t\tvalues = (cookieIndex !== 0) ? $.parseJSON(cookies[cookieIndex] || 'null') || {} : {};\r\n\t\t\t}\r\n\t\t}\r\n\t\t// allow value to be an empty string too\r\n\t\tif (typeof value !== 'undefined' && window.JSON && JSON.hasOwnProperty('stringify')) {\r\n\t\t\t// add unique identifiers = url pathname > table ID/index on page > data\r\n\t\t\tif (!values[url]) {\r\n\t\t\t\tvalues[url] = {};\r\n\t\t\t}\r\n\t\t\tvalues[url][id] = value;\r\n\t\t\t// *** set value ***\r\n\t\t\tif (hasStorage) {\r\n\t\t\t\twindow[storageType][key] = JSON.stringify(values);\r\n\t\t\t} else {\r\n\t\t\t\tdate = new Date();\r\n\t\t\t\tdate.setTime(date.getTime() + (31536e+6)); // 365 days\r\n\t\t\t\tdocument.cookie = key + '=' + (JSON.stringify(values)).replace(/\\\"/g, '\\\"') + '; expires=' + date.toGMTString() + '; path=/';\r\n\t\t\t}\r\n\t\t} else {\r\n\t\t\treturn values && values[url] ? values[url][id] : '';\r\n\t\t}\r\n\t};\r\n\r\n})(jQuery, window, document);\r\n\r\n/*! Widget: uitheme - updated 2018-03-18 (v2.30.0) */\r\n;(function ($) {\r\n\t'use strict';\r\n\tvar ts = $.tablesorter || {};\r\n\r\n\tts.themes = {\r\n\t\t'bootstrap' : {\r\n\t\t\ttable        : 'table table-bordered table-striped',\r\n\t\t\tcaption      : 'caption',\r\n\t\t\t// header class names\r\n\t\t\theader       : 'bootstrap-header', // give the header a gradient background (theme.bootstrap_2.css)\r\n\t\t\tsortNone     : '',\r\n\t\t\tsortAsc      : '',\r\n\t\t\tsortDesc     : '',\r\n\t\t\tactive       : '', // applied when column is sorted\r\n\t\t\thover        : '', // custom css required - a defined bootstrap style may not override other classes\r\n\t\t\t// icon class names\r\n\t\t\ticons        : '', // add 'bootstrap-icon-white' to make them white; this icon class is added to the <i> in the header\r\n\t\t\ticonSortNone : 'bootstrap-icon-unsorted', // class name added to icon when column is not sorted\r\n\t\t\ticonSortAsc  : 'glyphicon glyphicon-chevron-up', // class name added to icon when column has ascending sort\r\n\t\t\ticonSortDesc : 'glyphicon glyphicon-chevron-down', // class name added to icon when column has descending sort\r\n\t\t\tfilterRow    : '', // filter row class\r\n\t\t\tfooterRow    : '',\r\n\t\t\tfooterCells  : '',\r\n\t\t\teven         : '', // even row zebra striping\r\n\t\t\todd          : ''  // odd row zebra striping\r\n\t\t},\r\n\t\t'jui' : {\r\n\t\t\ttable        : 'ui-widget ui-widget-content ui-corner-all', // table classes\r\n\t\t\tcaption      : 'ui-widget-content',\r\n\t\t\t// header class names\r\n\t\t\theader       : 'ui-widget-header ui-corner-all ui-state-default', // header classes\r\n\t\t\tsortNone     : '',\r\n\t\t\tsortAsc      : '',\r\n\t\t\tsortDesc     : '',\r\n\t\t\tactive       : 'ui-state-active', // applied when column is sorted\r\n\t\t\thover        : 'ui-state-hover',  // hover class\r\n\t\t\t// icon class names\r\n\t\t\ticons        : 'ui-icon', // icon class added to the <i> in the header\r\n\t\t\ticonSortNone : 'ui-icon-carat-2-n-s ui-icon-caret-2-n-s', // class name added to icon when column is not sorted\r\n\t\t\ticonSortAsc  : 'ui-icon-carat-1-n ui-icon-caret-1-n', // class name added to icon when column has ascending sort\r\n\t\t\ticonSortDesc : 'ui-icon-carat-1-s ui-icon-caret-1-s', // class name added to icon when column has descending sort\r\n\t\t\tfilterRow    : '',\r\n\t\t\tfooterRow    : '',\r\n\t\t\tfooterCells  : '',\r\n\t\t\teven         : 'ui-widget-content', // even row zebra striping\r\n\t\t\todd          : 'ui-state-default'   // odd row zebra striping\r\n\t\t}\r\n\t};\r\n\r\n\t$.extend(ts.css, {\r\n\t\twrapper : 'tablesorter-wrapper' // ui theme & resizable\r\n\t});\r\n\r\n\tts.addWidget({\r\n\t\tid: 'uitheme',\r\n\t\tpriority: 10,\r\n\t\tformat: function(table, c, wo) {\r\n\t\t\tvar i, tmp, hdr, icon, time, $header, $icon, $tfoot, $h, oldtheme, oldremove, oldIconRmv, hasOldTheme,\r\n\t\t\t\tthemesAll = ts.themes,\r\n\t\t\t\t$table = c.$table.add( $( c.namespace + '_extra_table' ) ),\r\n\t\t\t\t$headers = c.$headers.add( $( c.namespace + '_extra_headers' ) ),\r\n\t\t\t\ttheme = c.theme || 'jui',\r\n\t\t\t\tthemes = themesAll[theme] || {},\r\n\t\t\t\tremove = $.trim( [ themes.sortNone, themes.sortDesc, themes.sortAsc, themes.active ].join( ' ' ) ),\r\n\t\t\t\ticonRmv = $.trim( [ themes.iconSortNone, themes.iconSortDesc, themes.iconSortAsc ].join( ' ' ) ),\r\n\t\t\t\tdebug = ts.debug(c, 'uitheme');\r\n\t\t\tif (debug) { time = new Date(); }\r\n\t\t\t// initialization code - run once\r\n\t\t\tif (!$table.hasClass('tablesorter-' + theme) || c.theme !== c.appliedTheme || !wo.uitheme_applied) {\r\n\t\t\t\two.uitheme_applied = true;\r\n\t\t\t\toldtheme = themesAll[c.appliedTheme] || {};\r\n\t\t\t\thasOldTheme = !$.isEmptyObject(oldtheme);\r\n\t\t\t\toldremove =  hasOldTheme ? [ oldtheme.sortNone, oldtheme.sortDesc, oldtheme.sortAsc, oldtheme.active ].join( ' ' ) : '';\r\n\t\t\t\toldIconRmv = hasOldTheme ? [ oldtheme.iconSortNone, oldtheme.iconSortDesc, oldtheme.iconSortAsc ].join( ' ' ) : '';\r\n\t\t\t\tif (hasOldTheme) {\r\n\t\t\t\t\two.zebra[0] = $.trim( ' ' + wo.zebra[0].replace(' ' + oldtheme.even, '') );\r\n\t\t\t\t\two.zebra[1] = $.trim( ' ' + wo.zebra[1].replace(' ' + oldtheme.odd, '') );\r\n\t\t\t\t\tc.$tbodies.children().removeClass( [ oldtheme.even, oldtheme.odd ].join(' ') );\r\n\t\t\t\t}\r\n\t\t\t\t// update zebra stripes\r\n\t\t\t\tif (themes.even) { wo.zebra[0] += ' ' + themes.even; }\r\n\t\t\t\tif (themes.odd) { wo.zebra[1] += ' ' + themes.odd; }\r\n\t\t\t\t// add caption style\r\n\t\t\t\t$table.children('caption')\r\n\t\t\t\t\t.removeClass(oldtheme.caption || '')\r\n\t\t\t\t\t.addClass(themes.caption);\r\n\t\t\t\t// add table/footer class names\r\n\t\t\t\t$tfoot = $table\r\n\t\t\t\t\t// remove other selected themes\r\n\t\t\t\t\t.removeClass( (c.appliedTheme ? 'tablesorter-' + (c.appliedTheme || '') : '') + ' ' + (oldtheme.table || '') )\r\n\t\t\t\t\t.addClass('tablesorter-' + theme + ' ' + (themes.table || '')) // add theme widget class name\r\n\t\t\t\t\t.children('tfoot');\r\n\t\t\t\tc.appliedTheme = c.theme;\r\n\r\n\t\t\t\tif ($tfoot.length) {\r\n\t\t\t\t\t$tfoot\r\n\t\t\t\t\t\t// if oldtheme.footerRow or oldtheme.footerCells are undefined, all class names are removed\r\n\t\t\t\t\t\t.children('tr').removeClass(oldtheme.footerRow || '').addClass(themes.footerRow)\r\n\t\t\t\t\t\t.children('th, td').removeClass(oldtheme.footerCells || '').addClass(themes.footerCells);\r\n\t\t\t\t}\r\n\t\t\t\t// update header classes\r\n\t\t\t\t$headers\r\n\t\t\t\t\t.removeClass( (hasOldTheme ? [ oldtheme.header, oldtheme.hover, oldremove ].join(' ') : '') || '' )\r\n\t\t\t\t\t.addClass(themes.header)\r\n\t\t\t\t\t.not('.sorter-false')\r\n\t\t\t\t\t.unbind('mouseenter.tsuitheme mouseleave.tsuitheme')\r\n\t\t\t\t\t.bind('mouseenter.tsuitheme mouseleave.tsuitheme', function(event) {\r\n\t\t\t\t\t\t// toggleClass with switch added in jQuery 1.3\r\n\t\t\t\t\t\t$(this)[ event.type === 'mouseenter' ? 'addClass' : 'removeClass' ](themes.hover || '');\r\n\t\t\t\t\t});\r\n\r\n\t\t\t\t$headers.each(function() {\r\n\t\t\t\t\tvar $this = $(this);\r\n\t\t\t\t\tif (!$this.find('.' + ts.css.wrapper).length) {\r\n\t\t\t\t\t\t// Firefox needs this inner div to position the icon & resizer correctly\r\n\t\t\t\t\t\t$this.wrapInner('<div class=\"' + ts.css.wrapper + '\" style=\"position:relative;height:100%;width:100%\"></div>');\r\n\t\t\t\t\t}\r\n\t\t\t\t});\r\n\t\t\t\tif (c.cssIcon) {\r\n\t\t\t\t\t// if c.cssIcon is '', then no <i> is added to the header\r\n\t\t\t\t\t$headers\r\n\t\t\t\t\t\t.find('.' + ts.css.icon)\r\n\t\t\t\t\t\t.removeClass(hasOldTheme ? [ oldtheme.icons, oldIconRmv ].join(' ') : '')\r\n\t\t\t\t\t\t.addClass(themes.icons || '');\r\n\t\t\t\t}\r\n\t\t\t\t// filter widget initializes after uitheme\r\n\t\t\t\tif (ts.hasWidget( c.table, 'filter' )) {\r\n\t\t\t\t\ttmp = function() {\r\n\t\t\t\t\t\t$table.children('thead').children('.' + ts.css.filterRow)\r\n\t\t\t\t\t\t\t.removeClass(hasOldTheme ? oldtheme.filterRow || '' : '')\r\n\t\t\t\t\t\t\t.addClass(themes.filterRow || '');\r\n\t\t\t\t\t};\r\n\t\t\t\t\tif (wo.filter_initialized) {\r\n\t\t\t\t\t\ttmp();\r\n\t\t\t\t\t} else {\r\n\t\t\t\t\t\t$table.one('filterInit', function() {\r\n\t\t\t\t\t\t\ttmp();\r\n\t\t\t\t\t\t});\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\tfor (i = 0; i < c.columns; i++) {\r\n\t\t\t\t$header = c.$headers\r\n\t\t\t\t\t.add($(c.namespace + '_extra_headers'))\r\n\t\t\t\t\t.not('.sorter-false')\r\n\t\t\t\t\t.filter('[data-column=\"' + i + '\"]');\r\n\t\t\t\t$icon = (ts.css.icon) ? $header.find('.' + ts.css.icon) : $();\r\n\t\t\t\t$h = $headers.not('.sorter-false').filter('[data-column=\"' + i + '\"]:last');\r\n\t\t\t\tif ($h.length) {\r\n\t\t\t\t\t$header.removeClass(remove);\r\n\t\t\t\t\t$icon.removeClass(iconRmv);\r\n\t\t\t\t\tif ($h[0].sortDisabled) {\r\n\t\t\t\t\t\t// no sort arrows for disabled columns!\r\n\t\t\t\t\t\t$icon.removeClass(themes.icons || '');\r\n\t\t\t\t\t} else {\r\n\t\t\t\t\t\thdr = themes.sortNone;\r\n\t\t\t\t\t\ticon = themes.iconSortNone;\r\n\t\t\t\t\t\tif ($h.hasClass(ts.css.sortAsc)) {\r\n\t\t\t\t\t\t\thdr = [ themes.sortAsc, themes.active ].join(' ');\r\n\t\t\t\t\t\t\ticon = themes.iconSortAsc;\r\n\t\t\t\t\t\t} else if ($h.hasClass(ts.css.sortDesc)) {\r\n\t\t\t\t\t\t\thdr = [ themes.sortDesc, themes.active ].join(' ');\r\n\t\t\t\t\t\t\ticon = themes.iconSortDesc;\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\t$header.addClass(hdr);\r\n\t\t\t\t\t\t$icon.addClass(icon || '');\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\tif (debug) {\r\n\t\t\t\tconsole.log('uitheme >> Applied ' + theme + ' theme' + ts.benchmark(time));\r\n\t\t\t}\r\n\t\t},\r\n\t\tremove: function(table, c, wo, refreshing) {\r\n\t\t\tif (!wo.uitheme_applied) { return; }\r\n\t\t\tvar $table = c.$table,\r\n\t\t\t\ttheme = c.appliedTheme || 'jui',\r\n\t\t\t\tthemes = ts.themes[ theme ] || ts.themes.jui,\r\n\t\t\t\t$headers = $table.children('thead').children(),\r\n\t\t\t\tremove = themes.sortNone + ' ' + themes.sortDesc + ' ' + themes.sortAsc,\r\n\t\t\t\ticonRmv = themes.iconSortNone + ' ' + themes.iconSortDesc + ' ' + themes.iconSortAsc;\r\n\t\t\t$table.removeClass('tablesorter-' + theme + ' ' + themes.table);\r\n\t\t\two.uitheme_applied = false;\r\n\t\t\tif (refreshing) { return; }\r\n\t\t\t$table.find(ts.css.header).removeClass(themes.header);\r\n\t\t\t$headers\r\n\t\t\t\t.unbind('mouseenter.tsuitheme mouseleave.tsuitheme') // remove hover\r\n\t\t\t\t.removeClass(themes.hover + ' ' + remove + ' ' + themes.active)\r\n\t\t\t\t.filter('.' + ts.css.filterRow)\r\n\t\t\t\t.removeClass(themes.filterRow);\r\n\t\t\t$headers.find('.' + ts.css.icon).removeClass(themes.icons + ' ' + iconRmv);\r\n\t\t}\r\n\t});\r\n\r\n})(jQuery);\r\n\r\n/*! Widget: columns - updated 5/24/2017 (v2.28.11) */\r\n;(function ($) {\r\n\t'use strict';\r\n\tvar ts = $.tablesorter || {};\r\n\r\n\tts.addWidget({\r\n\t\tid: 'columns',\r\n\t\tpriority: 65,\r\n\t\toptions : {\r\n\t\t\tcolumns : [ 'primary', 'secondary', 'tertiary' ]\r\n\t\t},\r\n\t\tformat: function(table, c, wo) {\r\n\t\t\tvar $tbody, tbodyIndex, $rows, rows, $row, $cells, remove, indx,\r\n\t\t\t$table = c.$table,\r\n\t\t\t$tbodies = c.$tbodies,\r\n\t\t\tsortList = c.sortList,\r\n\t\t\tlen = sortList.length,\r\n\t\t\t// removed c.widgetColumns support\r\n\t\t\tcss = wo && wo.columns || [ 'primary', 'secondary', 'tertiary' ],\r\n\t\t\tlast = css.length - 1;\r\n\t\t\tremove = css.join(' ');\r\n\t\t\t// check if there is a sort (on initialization there may not be one)\r\n\t\t\tfor (tbodyIndex = 0; tbodyIndex < $tbodies.length; tbodyIndex++ ) {\r\n\t\t\t\t$tbody = ts.processTbody(table, $tbodies.eq(tbodyIndex), true); // detach tbody\r\n\t\t\t\t$rows = $tbody.children('tr');\r\n\t\t\t\t// loop through the visible rows\r\n\t\t\t\t$rows.each(function() {\r\n\t\t\t\t\t$row = $(this);\r\n\t\t\t\t\tif (this.style.display !== 'none') {\r\n\t\t\t\t\t\t// remove all columns class names\r\n\t\t\t\t\t\t$cells = $row.children().removeClass(remove);\r\n\t\t\t\t\t\t// add appropriate column class names\r\n\t\t\t\t\t\tif (sortList && sortList[0]) {\r\n\t\t\t\t\t\t\t// primary sort column class\r\n\t\t\t\t\t\t\t$cells.eq(sortList[0][0]).addClass(css[0]);\r\n\t\t\t\t\t\t\tif (len > 1) {\r\n\t\t\t\t\t\t\t\tfor (indx = 1; indx < len; indx++) {\r\n\t\t\t\t\t\t\t\t\t// secondary, tertiary, etc sort column classes\r\n\t\t\t\t\t\t\t\t\t$cells.eq(sortList[indx][0]).addClass( css[indx] || css[last] );\r\n\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\t\t\t\t});\r\n\t\t\t\tts.processTbody(table, $tbody, false);\r\n\t\t\t}\r\n\t\t\t// add classes to thead and tfoot\r\n\t\t\trows = wo.columns_thead !== false ? [ 'thead tr' ] : [];\r\n\t\t\tif (wo.columns_tfoot !== false) {\r\n\t\t\t\trows.push('tfoot tr');\r\n\t\t\t}\r\n\t\t\tif (rows.length) {\r\n\t\t\t\t$rows = $table.find( rows.join(',') ).children().removeClass(remove);\r\n\t\t\t\tif (len) {\r\n\t\t\t\t\tfor (indx = 0; indx < len; indx++) {\r\n\t\t\t\t\t\t// add primary. secondary, tertiary, etc sort column classes\r\n\t\t\t\t\t\t$rows.filter('[data-column=\"' + sortList[indx][0] + '\"]').addClass(css[indx] || css[last]);\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t},\r\n\t\tremove: function(table, c, wo) {\r\n\t\t\tvar tbodyIndex, $tbody,\r\n\t\t\t\t$tbodies = c.$tbodies,\r\n\t\t\t\tremove = (wo.columns || [ 'primary', 'secondary', 'tertiary' ]).join(' ');\r\n\t\t\tc.$headers.removeClass(remove);\r\n\t\t\tc.$table.children('tfoot').children('tr').children('th, td').removeClass(remove);\r\n\t\t\tfor (tbodyIndex = 0; tbodyIndex < $tbodies.length; tbodyIndex++ ) {\r\n\t\t\t\t$tbody = ts.processTbody(table, $tbodies.eq(tbodyIndex), true); // remove tbody\r\n\t\t\t\t$tbody.children('tr').each(function() {\r\n\t\t\t\t\t$(this).children().removeClass(remove);\r\n\t\t\t\t});\r\n\t\t\t\tts.processTbody(table, $tbody, false); // restore tbody\r\n\t\t\t}\r\n\t\t}\r\n\t});\r\n\r\n})(jQuery);\r\n\r\n/*! Widget: filter - updated 2018-03-18 (v2.30.0) *//*\r\n * Requires tablesorter v2.8+ and jQuery 1.7+\r\n * by Rob Garrison\r\n */\r\n;( function ( $ ) {\r\n\t'use strict';\r\n\tvar tsf, tsfRegex,\r\n\t\tts = $.tablesorter || {},\r\n\t\ttscss = ts.css,\r\n\t\ttskeyCodes = ts.keyCodes;\r\n\r\n\t$.extend( tscss, {\r\n\t\tfilterRow      : 'tablesorter-filter-row',\r\n\t\tfilter         : 'tablesorter-filter',\r\n\t\tfilterDisabled : 'disabled',\r\n\t\tfilterRowHide  : 'hideme'\r\n\t});\r\n\r\n\t$.extend( tskeyCodes, {\r\n\t\tbackSpace : 8,\r\n\t\tescape : 27,\r\n\t\tspace : 32,\r\n\t\tleft : 37,\r\n\t\tdown : 40\r\n\t});\r\n\r\n\tts.addWidget({\r\n\t\tid: 'filter',\r\n\t\tpriority: 50,\r\n\t\toptions : {\r\n\t\t\tfilter_cellFilter    : '',    // css class name added to the filter cell ( string or array )\r\n\t\t\tfilter_childRows     : false, // if true, filter includes child row content in the search\r\n\t\t\tfilter_childByColumn : false, // ( filter_childRows must be true ) if true = search child rows by column; false = search all child row text grouped\r\n\t\t\tfilter_childWithSibs : true,  // if true, include matching child row siblings\r\n\t\t\tfilter_columnAnyMatch: true,  // if true, allows using '#:{query}' in AnyMatch searches ( column:query )\r\n\t\t\tfilter_columnFilters : true,  // if true, a filter will be added to the top of each table column\r\n\t\t\tfilter_cssFilter     : '',    // css class name added to the filter row & each input in the row ( tablesorter-filter is ALWAYS added )\r\n\t\t\tfilter_defaultAttrib : 'data-value', // data attribute in the header cell that contains the default filter value\r\n\t\t\tfilter_defaultFilter : {},    // add a default column filter type '~{query}' to make fuzzy searches default; '{q1} AND {q2}' to make all searches use a logical AND.\r\n\t\t\tfilter_excludeFilter : {},    // filters to exclude, per column\r\n\t\t\tfilter_external      : '',    // jQuery selector string ( or jQuery object ) of external filters\r\n\t\t\tfilter_filteredRow   : 'filtered', // class added to filtered rows; define in css with \"display:none\" to hide the filtered-out rows\r\n\t\t\tfilter_filterLabel   : 'Filter \"{{label}}\" column by...', // Aria-label added to filter input/select; see #1495\r\n\t\t\tfilter_formatter     : null,  // add custom filter elements to the filter row\r\n\t\t\tfilter_functions     : null,  // add custom filter functions using this option\r\n\t\t\tfilter_hideEmpty     : true,  // hide filter row when table is empty\r\n\t\t\tfilter_hideFilters   : false, // collapse filter row when mouse leaves the area\r\n\t\t\tfilter_ignoreCase    : true,  // if true, make all searches case-insensitive\r\n\t\t\tfilter_liveSearch    : true,  // if true, search column content while the user types ( with a delay )\r\n\t\t\tfilter_matchType     : { 'input': 'exact', 'select': 'exact' }, // global query settings ('exact' or 'match'); overridden by \"filter-match\" or \"filter-exact\" class\r\n\t\t\tfilter_onlyAvail     : 'filter-onlyAvail', // a header with a select dropdown & this class name will only show available ( visible ) options within the drop down\r\n\t\t\tfilter_placeholder   : { search : '', select : '' }, // default placeholder text ( overridden by any header 'data-placeholder' setting )\r\n\t\t\tfilter_reset         : null,  // jQuery selector string of an element used to reset the filters\r\n\t\t\tfilter_resetOnEsc    : true,  // Reset filter input when the user presses escape - normalized across browsers\r\n\t\t\tfilter_saveFilters   : false, // Use the $.tablesorter.storage utility to save the most recent filters\r\n\t\t\tfilter_searchDelay   : 300,   // typing delay in milliseconds before starting a search\r\n\t\t\tfilter_searchFiltered: true,  // allow searching through already filtered rows in special circumstances; will speed up searching in large tables if true\r\n\t\t\tfilter_selectSource  : null,  // include a function to return an array of values to be added to the column filter select\r\n\t\t\tfilter_selectSourceSeparator : '|', // filter_selectSource array text left of the separator is added to the option value, right into the option text\r\n\t\t\tfilter_serversideFiltering : false, // if true, must perform server-side filtering b/c client-side filtering is disabled, but the ui and events will still be used.\r\n\t\t\tfilter_startsWith    : false, // if true, filter start from the beginning of the cell contents\r\n\t\t\tfilter_useParsedData : false  // filter all data using parsed content\r\n\t\t},\r\n\t\tformat: function( table, c, wo ) {\r\n\t\t\tif ( !c.$table.hasClass( 'hasFilters' ) ) {\r\n\t\t\t\ttsf.init( table, c, wo );\r\n\t\t\t}\r\n\t\t},\r\n\t\tremove: function( table, c, wo, refreshing ) {\r\n\t\t\tvar tbodyIndex, $tbody,\r\n\t\t\t\t$table = c.$table,\r\n\t\t\t\t$tbodies = c.$tbodies,\r\n\t\t\t\tevents = (\r\n\t\t\t\t\t'addRows updateCell update updateRows updateComplete appendCache filterReset ' +\r\n\t\t\t\t\t'filterAndSortReset filterFomatterUpdate filterEnd search stickyHeadersInit '\r\n\t\t\t\t).split( ' ' ).join( c.namespace + 'filter ' );\r\n\t\t\t$table\r\n\t\t\t\t.removeClass( 'hasFilters' )\r\n\t\t\t\t// add filter namespace to all BUT search\r\n\t\t\t\t.unbind( events.replace( ts.regex.spaces, ' ' ) )\r\n\t\t\t\t// remove the filter row even if refreshing, because the column might have been moved\r\n\t\t\t\t.find( '.' + tscss.filterRow ).remove();\r\n\t\t\two.filter_initialized = false;\r\n\t\t\tif ( refreshing ) { return; }\r\n\t\t\tfor ( tbodyIndex = 0; tbodyIndex < $tbodies.length; tbodyIndex++ ) {\r\n\t\t\t\t$tbody = ts.processTbody( table, $tbodies.eq( tbodyIndex ), true ); // remove tbody\r\n\t\t\t\t$tbody.children().removeClass( wo.filter_filteredRow ).show();\r\n\t\t\t\tts.processTbody( table, $tbody, false ); // restore tbody\r\n\t\t\t}\r\n\t\t\tif ( wo.filter_reset ) {\r\n\t\t\t\t$( document ).undelegate( wo.filter_reset, 'click' + c.namespace + 'filter' );\r\n\t\t\t}\r\n\t\t}\r\n\t});\r\n\r\n\ttsf = ts.filter = {\r\n\r\n\t\t// regex used in filter 'check' functions - not for general use and not documented\r\n\t\tregex: {\r\n\t\t\tregex     : /^\\/((?:\\\\\\/|[^\\/])+)\\/([migyu]{0,5})?$/, // regex to test for regex\r\n\t\t\tchild     : /tablesorter-childRow/, // child row class name; this gets updated in the script\r\n\t\t\tfiltered  : /filtered/, // filtered (hidden) row class name; updated in the script\r\n\t\t\ttype      : /undefined|number/, // check type\r\n\t\t\texact     : /(^[\\\"\\'=]+)|([\\\"\\'=]+$)/g, // exact match (allow '==')\r\n\t\t\toperators : /[<>=]/g, // replace operators\r\n\t\t\tquery     : '(q|query)', // replace filter queries\r\n\t\t\twild01    : /\\?/g, // wild card match 0 or 1\r\n\t\t\twild0More : /\\*/g, // wild care match 0 or more\r\n\t\t\tquote     : /\\\"/g,\r\n\t\t\tisNeg1    : /(>=?\\s*-\\d)/,\r\n\t\t\tisNeg2    : /(<=?\\s*\\d)/\r\n\t\t},\r\n\t\t// function( c, data ) { }\r\n\t\t// c = table.config\r\n\t\t// data.$row = jQuery object of the row currently being processed\r\n\t\t// data.$cells = jQuery object of all cells within the current row\r\n\t\t// data.filters = array of filters for all columns ( some may be undefined )\r\n\t\t// data.filter = filter for the current column\r\n\t\t// data.iFilter = same as data.filter, except lowercase ( if wo.filter_ignoreCase is true )\r\n\t\t// data.exact = table cell text ( or parsed data if column parser enabled; may be a number & not a string )\r\n\t\t// data.iExact = same as data.exact, except lowercase ( if wo.filter_ignoreCase is true; may be a number & not a string )\r\n\t\t// data.cache = table cell text from cache, so it has been parsed ( & in all lower case if c.ignoreCase is true )\r\n\t\t// data.cacheArray = An array of parsed content from each table cell in the row being processed\r\n\t\t// data.index = column index; table = table element ( DOM )\r\n\t\t// data.parsed = array ( by column ) of boolean values ( from filter_useParsedData or 'filter-parsed' class )\r\n\t\ttypes: {\r\n\t\t\tor : function( c, data, vars ) {\r\n\t\t\t\t// look for \"|\", but not if it is inside of a regular expression\r\n\t\t\t\tif ( ( tsfRegex.orTest.test( data.iFilter ) || tsfRegex.orSplit.test( data.filter ) ) &&\r\n\t\t\t\t\t// this test for regex has potential to slow down the overall search\r\n\t\t\t\t\t!tsfRegex.regex.test( data.filter ) ) {\r\n\t\t\t\t\tvar indx, filterMatched, query, regex,\r\n\t\t\t\t\t\t// duplicate data but split filter\r\n\t\t\t\t\t\tdata2 = $.extend( {}, data ),\r\n\t\t\t\t\t\tfilter = data.filter.split( tsfRegex.orSplit ),\r\n\t\t\t\t\t\tiFilter = data.iFilter.split( tsfRegex.orSplit ),\r\n\t\t\t\t\t\tlen = filter.length;\r\n\t\t\t\t\tfor ( indx = 0; indx < len; indx++ ) {\r\n\t\t\t\t\t\tdata2.nestedFilters = true;\r\n\t\t\t\t\t\tdata2.filter = '' + ( tsf.parseFilter( c, filter[ indx ], data ) || '' );\r\n\t\t\t\t\t\tdata2.iFilter = '' + ( tsf.parseFilter( c, iFilter[ indx ], data ) || '' );\r\n\t\t\t\t\t\tquery = '(' + ( tsf.parseFilter( c, data2.filter, data ) || '' ) + ')';\r\n\t\t\t\t\t\ttry {\r\n\t\t\t\t\t\t\t// use try/catch, because query may not be a valid regex if \"|\" is contained within a partial regex search,\r\n\t\t\t\t\t\t\t// e.g \"/(Alex|Aar\" -> Uncaught SyntaxError: Invalid regular expression: /(/(Alex)/: Unterminated group\r\n\t\t\t\t\t\t\tregex = new RegExp( data.isMatch ? query : '^' + query + '$', c.widgetOptions.filter_ignoreCase ? 'i' : '' );\r\n\t\t\t\t\t\t\t// filterMatched = data2.filter === '' && indx > 0 ? true\r\n\t\t\t\t\t\t\t// look for an exact match with the 'or' unless the 'filter-match' class is found\r\n\t\t\t\t\t\t\tfilterMatched = regex.test( data2.exact ) || tsf.processTypes( c, data2, vars );\r\n\t\t\t\t\t\t\tif ( filterMatched ) {\r\n\t\t\t\t\t\t\t\treturn filterMatched;\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t} catch ( error ) {\r\n\t\t\t\t\t\t\treturn null;\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\t\t\t\t\t// may be null from processing types\r\n\t\t\t\t\treturn filterMatched || false;\r\n\t\t\t\t}\r\n\t\t\t\treturn null;\r\n\t\t\t},\r\n\t\t\t// Look for an AND or && operator ( logical and )\r\n\t\t\tand : function( c, data, vars ) {\r\n\t\t\t\tif ( tsfRegex.andTest.test( data.filter ) ) {\r\n\t\t\t\t\tvar indx, filterMatched, result, query, regex,\r\n\t\t\t\t\t\t// duplicate data but split filter\r\n\t\t\t\t\t\tdata2 = $.extend( {}, data ),\r\n\t\t\t\t\t\tfilter = data.filter.split( tsfRegex.andSplit ),\r\n\t\t\t\t\t\tiFilter = data.iFilter.split( tsfRegex.andSplit ),\r\n\t\t\t\t\t\tlen = filter.length;\r\n\t\t\t\t\tfor ( indx = 0; indx < len; indx++ ) {\r\n\t\t\t\t\t\tdata2.nestedFilters = true;\r\n\t\t\t\t\t\tdata2.filter = '' + ( tsf.parseFilter( c, filter[ indx ], data ) || '' );\r\n\t\t\t\t\t\tdata2.iFilter = '' + ( tsf.parseFilter( c, iFilter[ indx ], data ) || '' );\r\n\t\t\t\t\t\tquery = ( '(' + ( tsf.parseFilter( c, data2.filter, data ) || '' ) + ')' )\r\n\t\t\t\t\t\t\t// replace wild cards since /(a*)/i will match anything\r\n\t\t\t\t\t\t\t.replace( tsfRegex.wild01, '\\\\S{1}' ).replace( tsfRegex.wild0More, '\\\\S*' );\r\n\t\t\t\t\t\ttry {\r\n\t\t\t\t\t\t\t// use try/catch just in case RegExp is invalid\r\n\t\t\t\t\t\t\tregex = new RegExp( data.isMatch ? query : '^' + query + '$', c.widgetOptions.filter_ignoreCase ? 'i' : '' );\r\n\t\t\t\t\t\t\t// look for an exact match with the 'and' unless the 'filter-match' class is found\r\n\t\t\t\t\t\t\tresult = ( regex.test( data2.exact ) || tsf.processTypes( c, data2, vars ) );\r\n\t\t\t\t\t\t\tif ( indx === 0 ) {\r\n\t\t\t\t\t\t\t\tfilterMatched = result;\r\n\t\t\t\t\t\t\t} else {\r\n\t\t\t\t\t\t\t\tfilterMatched = filterMatched && result;\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t} catch ( error ) {\r\n\t\t\t\t\t\t\treturn null;\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\t\t\t\t\t// may be null from processing types\r\n\t\t\t\t\treturn filterMatched || false;\r\n\t\t\t\t}\r\n\t\t\t\treturn null;\r\n\t\t\t},\r\n\t\t\t// Look for regex\r\n\t\t\tregex: function( c, data ) {\r\n\t\t\t\tif ( tsfRegex.regex.test( data.filter ) ) {\r\n\t\t\t\t\tvar matches,\r\n\t\t\t\t\t\t// cache regex per column for optimal speed\r\n\t\t\t\t\t\tregex = data.filter_regexCache[ data.index ] || tsfRegex.regex.exec( data.filter ),\r\n\t\t\t\t\t\tisRegex = regex instanceof RegExp;\r\n\t\t\t\t\ttry {\r\n\t\t\t\t\t\tif ( !isRegex ) {\r\n\t\t\t\t\t\t\t// force case insensitive search if ignoreCase option set?\r\n\t\t\t\t\t\t\t// if ( c.ignoreCase && !regex[2] ) { regex[2] = 'i'; }\r\n\t\t\t\t\t\t\tdata.filter_regexCache[ data.index ] = regex = new RegExp( regex[1], regex[2] );\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\tmatches = regex.test( data.exact );\r\n\t\t\t\t\t} catch ( error ) {\r\n\t\t\t\t\t\tmatches = false;\r\n\t\t\t\t\t}\r\n\t\t\t\t\treturn matches;\r\n\t\t\t\t}\r\n\t\t\t\treturn null;\r\n\t\t\t},\r\n\t\t\t// Look for operators >, >=, < or <=\r\n\t\t\toperators: function( c, data ) {\r\n\t\t\t\t// ignore empty strings... because '' < 10 is true\r\n\t\t\t\tif ( tsfRegex.operTest.test( data.iFilter ) && data.iExact !== '' ) {\r\n\t\t\t\t\tvar cachedValue, result, txt,\r\n\t\t\t\t\t\ttable = c.table,\r\n\t\t\t\t\t\tparsed = data.parsed[ data.index ],\r\n\t\t\t\t\t\tquery = ts.formatFloat( data.iFilter.replace( tsfRegex.operators, '' ), table ),\r\n\t\t\t\t\t\tparser = c.parsers[ data.index ] || {},\r\n\t\t\t\t\t\tsavedSearch = query;\r\n\t\t\t\t\t// parse filter value in case we're comparing numbers ( dates )\r\n\t\t\t\t\tif ( parsed || parser.type === 'numeric' ) {\r\n\t\t\t\t\t\ttxt = $.trim( '' + data.iFilter.replace( tsfRegex.operators, '' ) );\r\n\t\t\t\t\t\tresult = tsf.parseFilter( c, txt, data, true );\r\n\t\t\t\t\t\tquery = ( typeof result === 'number' && result !== '' && !isNaN( result ) ) ? result : query;\r\n\t\t\t\t\t}\r\n\t\t\t\t\t// iExact may be numeric - see issue #149;\r\n\t\t\t\t\t// check if cached is defined, because sometimes j goes out of range? ( numeric columns )\r\n\t\t\t\t\tif ( ( parsed || parser.type === 'numeric' ) && !isNaN( query ) &&\r\n\t\t\t\t\t\ttypeof data.cache !== 'undefined' ) {\r\n\t\t\t\t\t\tcachedValue = data.cache;\r\n\t\t\t\t\t} else {\r\n\t\t\t\t\t\ttxt = isNaN( data.iExact ) ? data.iExact.replace( ts.regex.nondigit, '' ) : data.iExact;\r\n\t\t\t\t\t\tcachedValue = ts.formatFloat( txt, table );\r\n\t\t\t\t\t}\r\n\t\t\t\t\tif ( tsfRegex.gtTest.test( data.iFilter ) ) {\r\n\t\t\t\t\t\tresult = tsfRegex.gteTest.test( data.iFilter ) ? cachedValue >= query : cachedValue > query;\r\n\t\t\t\t\t} else if ( tsfRegex.ltTest.test( data.iFilter ) ) {\r\n\t\t\t\t\t\tresult = tsfRegex.lteTest.test( data.iFilter ) ? cachedValue <= query : cachedValue < query;\r\n\t\t\t\t\t}\r\n\t\t\t\t\t// keep showing all rows if nothing follows the operator\r\n\t\t\t\t\tif ( !result && savedSearch === '' ) {\r\n\t\t\t\t\t\tresult = true;\r\n\t\t\t\t\t}\r\n\t\t\t\t\treturn result;\r\n\t\t\t\t}\r\n\t\t\t\treturn null;\r\n\t\t\t},\r\n\t\t\t// Look for a not match\r\n\t\t\tnotMatch: function( c, data ) {\r\n\t\t\t\tif ( tsfRegex.notTest.test( data.iFilter ) ) {\r\n\t\t\t\t\tvar indx,\r\n\t\t\t\t\t\ttxt = data.iFilter.replace( '!', '' ),\r\n\t\t\t\t\t\tfilter = tsf.parseFilter( c, txt, data ) || '';\r\n\t\t\t\t\tif ( tsfRegex.exact.test( filter ) ) {\r\n\t\t\t\t\t\t// look for exact not matches - see #628\r\n\t\t\t\t\t\tfilter = filter.replace( tsfRegex.exact, '' );\r\n\t\t\t\t\t\treturn filter === '' ? true : $.trim( filter ) !== data.iExact;\r\n\t\t\t\t\t} else {\r\n\t\t\t\t\t\tindx = data.iExact.search( $.trim( filter ) );\r\n\t\t\t\t\t\treturn filter === '' ? true :\r\n\t\t\t\t\t\t\t// return true if not found\r\n\t\t\t\t\t\t\tdata.anyMatch ? indx < 0 :\r\n\t\t\t\t\t\t\t// return false if found\r\n\t\t\t\t\t\t\t!( c.widgetOptions.filter_startsWith ? indx === 0 : indx >= 0 );\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t\treturn null;\r\n\t\t\t},\r\n\t\t\t// Look for quotes or equals to get an exact match; ignore type since iExact could be numeric\r\n\t\t\texact: function( c, data ) {\r\n\t\t\t\t/*jshint eqeqeq:false */\r\n\t\t\t\tif ( tsfRegex.exact.test( data.iFilter ) ) {\r\n\t\t\t\t\tvar txt = data.iFilter.replace( tsfRegex.exact, '' ),\r\n\t\t\t\t\t\tfilter = tsf.parseFilter( c, txt, data ) || '';\r\n\t\t\t\t\t// eslint-disable-next-line eqeqeq\r\n\t\t\t\t\treturn data.anyMatch ? $.inArray( filter, data.rowArray ) >= 0 : filter == data.iExact;\r\n\t\t\t\t}\r\n\t\t\t\treturn null;\r\n\t\t\t},\r\n\t\t\t// Look for a range ( using ' to ' or ' - ' ) - see issue #166; thanks matzhu!\r\n\t\t\trange : function( c, data ) {\r\n\t\t\t\tif ( tsfRegex.toTest.test( data.iFilter ) ) {\r\n\t\t\t\t\tvar result, tmp, range1, range2,\r\n\t\t\t\t\t\ttable = c.table,\r\n\t\t\t\t\t\tindex = data.index,\r\n\t\t\t\t\t\tparsed = data.parsed[index],\r\n\t\t\t\t\t\t// make sure the dash is for a range and not indicating a negative number\r\n\t\t\t\t\t\tquery = data.iFilter.split( tsfRegex.toSplit );\r\n\r\n\t\t\t\t\ttmp = query[0].replace( ts.regex.nondigit, '' ) || '';\r\n\t\t\t\t\trange1 = ts.formatFloat( tsf.parseFilter( c, tmp, data ), table );\r\n\t\t\t\t\ttmp = query[1].replace( ts.regex.nondigit, '' ) || '';\r\n\t\t\t\t\trange2 = ts.formatFloat( tsf.parseFilter( c, tmp, data ), table );\r\n\t\t\t\t\t// parse filter value in case we're comparing numbers ( dates )\r\n\t\t\t\t\tif ( parsed || c.parsers[ index ].type === 'numeric' ) {\r\n\t\t\t\t\t\tresult = c.parsers[ index ].format( '' + query[0], table, c.$headers.eq( index ), index );\r\n\t\t\t\t\t\trange1 = ( result !== '' && !isNaN( result ) ) ? result : range1;\r\n\t\t\t\t\t\tresult = c.parsers[ index ].format( '' + query[1], table, c.$headers.eq( index ), index );\r\n\t\t\t\t\t\trange2 = ( result !== '' && !isNaN( result ) ) ? result : range2;\r\n\t\t\t\t\t}\r\n\t\t\t\t\tif ( ( parsed || c.parsers[ index ].type === 'numeric' ) && !isNaN( range1 ) && !isNaN( range2 ) ) {\r\n\t\t\t\t\t\tresult = data.cache;\r\n\t\t\t\t\t} else {\r\n\t\t\t\t\t\ttmp = isNaN( data.iExact ) ? data.iExact.replace( ts.regex.nondigit, '' ) : data.iExact;\r\n\t\t\t\t\t\tresult = ts.formatFloat( tmp, table );\r\n\t\t\t\t\t}\r\n\t\t\t\t\tif ( range1 > range2 ) {\r\n\t\t\t\t\t\ttmp = range1; range1 = range2; range2 = tmp; // swap\r\n\t\t\t\t\t}\r\n\t\t\t\t\treturn ( result >= range1 && result <= range2 ) || ( range1 === '' || range2 === '' );\r\n\t\t\t\t}\r\n\t\t\t\treturn null;\r\n\t\t\t},\r\n\t\t\t// Look for wild card: ? = single, * = multiple, or | = logical OR\r\n\t\t\twild : function( c, data ) {\r\n\t\t\t\tif ( tsfRegex.wildOrTest.test( data.iFilter ) ) {\r\n\t\t\t\t\tvar query = '' + ( tsf.parseFilter( c, data.iFilter, data ) || '' );\r\n\t\t\t\t\t// look for an exact match with the 'or' unless the 'filter-match' class is found\r\n\t\t\t\t\tif ( !tsfRegex.wildTest.test( query ) && data.nestedFilters ) {\r\n\t\t\t\t\t\tquery = data.isMatch ? query : '^(' + query + ')$';\r\n\t\t\t\t\t}\r\n\t\t\t\t\t// parsing the filter may not work properly when using wildcards =/\r\n\t\t\t\t\ttry {\r\n\t\t\t\t\t\treturn new RegExp(\r\n\t\t\t\t\t\t\tquery.replace( tsfRegex.wild01, '\\\\S{1}' ).replace( tsfRegex.wild0More, '\\\\S*' ),\r\n\t\t\t\t\t\t\tc.widgetOptions.filter_ignoreCase ? 'i' : ''\r\n\t\t\t\t\t\t)\r\n\t\t\t\t\t\t.test( data.exact );\r\n\t\t\t\t\t} catch ( error ) {\r\n\t\t\t\t\t\treturn null;\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t\treturn null;\r\n\t\t\t},\r\n\t\t\t// fuzzy text search; modified from https://github.com/mattyork/fuzzy ( MIT license )\r\n\t\t\tfuzzy: function( c, data ) {\r\n\t\t\t\tif ( tsfRegex.fuzzyTest.test( data.iFilter ) ) {\r\n\t\t\t\t\tvar indx,\r\n\t\t\t\t\t\tpatternIndx = 0,\r\n\t\t\t\t\t\tlen = data.iExact.length,\r\n\t\t\t\t\t\ttxt = data.iFilter.slice( 1 ),\r\n\t\t\t\t\t\tpattern = tsf.parseFilter( c, txt, data ) || '';\r\n\t\t\t\t\tfor ( indx = 0; indx < len; indx++ ) {\r\n\t\t\t\t\t\tif ( data.iExact[ indx ] === pattern[ patternIndx ] ) {\r\n\t\t\t\t\t\t\tpatternIndx += 1;\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\t\t\t\t\treturn patternIndx === pattern.length;\r\n\t\t\t\t}\r\n\t\t\t\treturn null;\r\n\t\t\t}\r\n\t\t},\r\n\t\tinit: function( table ) {\r\n\t\t\t// filter language options\r\n\t\t\tts.language = $.extend( true, {}, {\r\n\t\t\t\tto  : 'to',\r\n\t\t\t\tor  : 'or',\r\n\t\t\t\tand : 'and'\r\n\t\t\t}, ts.language );\r\n\r\n\t\t\tvar options, string, txt, $header, column, val, fxn, noSelect,\r\n\t\t\t\tc = table.config,\r\n\t\t\t\two = c.widgetOptions,\r\n\t\t\t\tprocessStr = function(prefix, str, suffix) {\r\n\t\t\t\t\tstr = str.trim();\r\n\t\t\t\t\t// don't include prefix/suffix if str is empty\r\n\t\t\t\t\treturn str === '' ? '' : (prefix || '') + str + (suffix || '');\r\n\t\t\t\t};\r\n\t\t\tc.$table.addClass( 'hasFilters' );\r\n\t\t\tc.lastSearch = [];\r\n\r\n\t\t\t// define timers so using clearTimeout won't cause an undefined error\r\n\t\t\two.filter_searchTimer = null;\r\n\t\t\two.filter_initTimer = null;\r\n\t\t\two.filter_formatterCount = 0;\r\n\t\t\two.filter_formatterInit = [];\r\n\t\t\two.filter_anyColumnSelector = '[data-column=\"all\"],[data-column=\"any\"]';\r\n\t\t\two.filter_multipleColumnSelector = '[data-column*=\"-\"],[data-column*=\",\"]';\r\n\r\n\t\t\tval = '\\\\{' + tsfRegex.query + '\\\\}';\r\n\t\t\t$.extend( tsfRegex, {\r\n\t\t\t\tchild : new RegExp( c.cssChildRow ),\r\n\t\t\t\tfiltered : new RegExp( wo.filter_filteredRow ),\r\n\t\t\t\talreadyFiltered : new RegExp( '(\\\\s+(-' + processStr('|', ts.language.or) + processStr('|', ts.language.to) + ')\\\\s+)', 'i' ),\r\n\t\t\t\ttoTest : new RegExp( '\\\\s+(-' + processStr('|', ts.language.to) + ')\\\\s+', 'i' ),\r\n\t\t\t\ttoSplit : new RegExp( '(?:\\\\s+(?:-' + processStr('|', ts.language.to) + ')\\\\s+)', 'gi' ),\r\n\t\t\t\tandTest : new RegExp( '\\\\s+(' + processStr('', ts.language.and, '|') + '&&)\\\\s+', 'i' ),\r\n\t\t\t\tandSplit : new RegExp( '(?:\\\\s+(?:' + processStr('', ts.language.and, '|') + '&&)\\\\s+)', 'gi' ),\r\n\t\t\t\torTest : new RegExp( '(\\\\|' + processStr('|\\\\s+', ts.language.or, '\\\\s+') + ')', 'i' ),\r\n\t\t\t\torSplit : new RegExp( '(?:\\\\|' + processStr('|\\\\s+(?:', ts.language.or, ')\\\\s+') + ')', 'gi' ),\r\n\t\t\t\tiQuery : new RegExp( val, 'i' ),\r\n\t\t\t\tigQuery : new RegExp( val, 'ig' ),\r\n\t\t\t\toperTest : /^[<>]=?/,\r\n\t\t\t\tgtTest  : />/,\r\n\t\t\t\tgteTest : />=/,\r\n\t\t\t\tltTest  : /</,\r\n\t\t\t\tlteTest : /<=/,\r\n\t\t\t\tnotTest : /^\\!/,\r\n\t\t\t\twildOrTest : /[\\?\\*\\|]/,\r\n\t\t\t\twildTest : /\\?\\*/,\r\n\t\t\t\tfuzzyTest : /^~/,\r\n\t\t\t\texactTest : /[=\\\"\\|!]/\r\n\t\t\t});\r\n\r\n\t\t\t// don't build filter row if columnFilters is false or all columns are set to 'filter-false'\r\n\t\t\t// see issue #156\r\n\t\t\tval = c.$headers.filter( '.filter-false, .parser-false' ).length;\r\n\t\t\tif ( wo.filter_columnFilters !== false && val !== c.$headers.length ) {\r\n\t\t\t\t// build filter row\r\n\t\t\t\ttsf.buildRow( table, c, wo );\r\n\t\t\t}\r\n\r\n\t\t\ttxt = 'addRows updateCell update updateRows updateComplete appendCache filterReset ' +\r\n\t\t\t\t'filterAndSortReset filterResetSaved filterEnd search '.split( ' ' ).join( c.namespace + 'filter ' );\r\n\t\t\tc.$table.bind( txt, function( event, filter ) {\r\n\t\t\t\tval = wo.filter_hideEmpty &&\r\n\t\t\t\t\t$.isEmptyObject( c.cache ) &&\r\n\t\t\t\t\t!( c.delayInit && event.type === 'appendCache' );\r\n\t\t\t\t// hide filter row using the 'filtered' class name\r\n\t\t\t\tc.$table.find( '.' + tscss.filterRow ).toggleClass( wo.filter_filteredRow, val ); // fixes #450\r\n\t\t\t\tif ( !/(search|filter)/.test( event.type ) ) {\r\n\t\t\t\t\tevent.stopPropagation();\r\n\t\t\t\t\ttsf.buildDefault( table, true );\r\n\t\t\t\t}\r\n\t\t\t\t// Add filterAndSortReset - see #1361\r\n\t\t\t\tif ( event.type === 'filterReset' || event.type === 'filterAndSortReset' ) {\r\n\t\t\t\t\tc.$table.find( '.' + tscss.filter ).add( wo.filter_$externalFilters ).val( '' );\r\n\t\t\t\t\tif ( event.type === 'filterAndSortReset' ) {\r\n\t\t\t\t\t\tts.sortReset( this.config, function() {\r\n\t\t\t\t\t\t\ttsf.searching( table, [] );\r\n\t\t\t\t\t\t});\r\n\t\t\t\t\t} else {\r\n\t\t\t\t\t\ttsf.searching( table, [] );\r\n\t\t\t\t\t}\r\n\t\t\t\t} else if ( event.type === 'filterResetSaved' ) {\r\n\t\t\t\t\tts.storage( table, 'tablesorter-filters', '' );\r\n\t\t\t\t} else if ( event.type === 'filterEnd' ) {\r\n\t\t\t\t\ttsf.buildDefault( table, true );\r\n\t\t\t\t} else {\r\n\t\t\t\t\t// send false argument to force a new search; otherwise if the filter hasn't changed,\r\n\t\t\t\t\t// it will return\r\n\t\t\t\t\tfilter = event.type === 'search' ? filter :\r\n\t\t\t\t\t\tevent.type === 'updateComplete' ? c.$table.data( 'lastSearch' ) : '';\r\n\t\t\t\t\tif ( /(update|add)/.test( event.type ) && event.type !== 'updateComplete' ) {\r\n\t\t\t\t\t\t// force a new search since content has changed\r\n\t\t\t\t\t\tc.lastCombinedFilter = null;\r\n\t\t\t\t\t\tc.lastSearch = [];\r\n\t\t\t\t\t\t// update filterFormatters after update (& small delay) - Fixes #1237\r\n\t\t\t\t\t\tsetTimeout(function() {\r\n\t\t\t\t\t\t\tc.$table.triggerHandler( 'filterFomatterUpdate' );\r\n\t\t\t\t\t\t}, 100);\r\n\t\t\t\t\t}\r\n\t\t\t\t\t// pass true ( skipFirst ) to prevent the tablesorter.setFilters function from skipping the first\r\n\t\t\t\t\t// input ensures all inputs are updated when a search is triggered on the table\r\n\t\t\t\t\t// $( 'table' ).trigger( 'search', [...] );\r\n\t\t\t\t\ttsf.searching( table, filter, true );\r\n\t\t\t\t}\r\n\t\t\t\treturn false;\r\n\t\t\t});\r\n\r\n\t\t\t// reset button/link\r\n\t\t\tif ( wo.filter_reset ) {\r\n\t\t\t\tif ( wo.filter_reset instanceof $ ) {\r\n\t\t\t\t\t// reset contains a jQuery object, bind to it\r\n\t\t\t\t\two.filter_reset.click( function() {\r\n\t\t\t\t\t\tc.$table.triggerHandler( 'filterReset' );\r\n\t\t\t\t\t});\r\n\t\t\t\t} else if ( $( wo.filter_reset ).length ) {\r\n\t\t\t\t\t// reset is a jQuery selector, use event delegation\r\n\t\t\t\t\t$( document )\r\n\t\t\t\t\t\t.undelegate( wo.filter_reset, 'click' + c.namespace + 'filter' )\r\n\t\t\t\t\t\t.delegate( wo.filter_reset, 'click' + c.namespace + 'filter', function() {\r\n\t\t\t\t\t\t\t// trigger a reset event, so other functions ( filter_formatter ) know when to reset\r\n\t\t\t\t\t\t\tc.$table.triggerHandler( 'filterReset' );\r\n\t\t\t\t\t\t});\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\tif ( wo.filter_functions ) {\r\n\t\t\t\tfor ( column = 0; column < c.columns; column++ ) {\r\n\t\t\t\t\tfxn = ts.getColumnData( table, wo.filter_functions, column );\r\n\t\t\t\t\tif ( fxn ) {\r\n\t\t\t\t\t\t// remove 'filter-select' from header otherwise the options added here are replaced with\r\n\t\t\t\t\t\t// all options\r\n\t\t\t\t\t\t$header = c.$headerIndexed[ column ].removeClass( 'filter-select' );\r\n\t\t\t\t\t\t// don't build select if 'filter-false' or 'parser-false' set\r\n\t\t\t\t\t\tnoSelect = !( $header.hasClass( 'filter-false' ) || $header.hasClass( 'parser-false' ) );\r\n\t\t\t\t\t\toptions = '';\r\n\t\t\t\t\t\tif ( fxn === true && noSelect ) {\r\n\t\t\t\t\t\t\ttsf.buildSelect( table, column );\r\n\t\t\t\t\t\t} else if ( typeof fxn === 'object' && noSelect ) {\r\n\t\t\t\t\t\t\t// add custom drop down list\r\n\t\t\t\t\t\t\tfor ( string in fxn ) {\r\n\t\t\t\t\t\t\t\tif ( typeof string === 'string' ) {\r\n\t\t\t\t\t\t\t\t\toptions += options === '' ?\r\n\t\t\t\t\t\t\t\t\t\t'<option value=\"\">' +\r\n\t\t\t\t\t\t\t\t\t\t\t( $header.data( 'placeholder' ) ||\r\n\t\t\t\t\t\t\t\t\t\t\t\t$header.attr( 'data-placeholder' ) ||\r\n\t\t\t\t\t\t\t\t\t\t\t\two.filter_placeholder.select ||\r\n\t\t\t\t\t\t\t\t\t\t\t\t''\r\n\t\t\t\t\t\t\t\t\t\t\t) +\r\n\t\t\t\t\t\t\t\t\t\t'</option>' : '';\r\n\t\t\t\t\t\t\t\t\tval = string;\r\n\t\t\t\t\t\t\t\t\ttxt = string;\r\n\t\t\t\t\t\t\t\t\tif ( string.indexOf( wo.filter_selectSourceSeparator ) >= 0 ) {\r\n\t\t\t\t\t\t\t\t\t\tval = string.split( wo.filter_selectSourceSeparator );\r\n\t\t\t\t\t\t\t\t\t\ttxt = val[1];\r\n\t\t\t\t\t\t\t\t\t\tval = val[0];\r\n\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t\toptions += '<option ' +\r\n\t\t\t\t\t\t\t\t\t\t( txt === val ? '' : 'data-function-name=\"' + string + '\" ' ) +\r\n\t\t\t\t\t\t\t\t\t\t'value=\"' + val + '\">' + txt + '</option>';\r\n\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\tc.$table\r\n\t\t\t\t\t\t\t\t.find( 'thead' )\r\n\t\t\t\t\t\t\t\t.find( 'select.' + tscss.filter + '[data-column=\"' + column + '\"]' )\r\n\t\t\t\t\t\t\t\t.append( options );\r\n\t\t\t\t\t\t\ttxt = wo.filter_selectSource;\r\n\t\t\t\t\t\t\tfxn = typeof txt === 'function' ? true : ts.getColumnData( table, txt, column );\r\n\t\t\t\t\t\t\tif ( fxn ) {\r\n\t\t\t\t\t\t\t\t// updating so the extra options are appended\r\n\t\t\t\t\t\t\t\ttsf.buildSelect( c.table, column, '', true, $header.hasClass( wo.filter_onlyAvail ) );\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\t// not really updating, but if the column has both the 'filter-select' class &\r\n\t\t\t// filter_functions set to true, it would append the same options twice.\r\n\t\t\ttsf.buildDefault( table, true );\r\n\r\n\t\t\ttsf.bindSearch( table, c.$table.find( '.' + tscss.filter ), true );\r\n\t\t\tif ( wo.filter_external ) {\r\n\t\t\t\ttsf.bindSearch( table, wo.filter_external );\r\n\t\t\t}\r\n\r\n\t\t\tif ( wo.filter_hideFilters ) {\r\n\t\t\t\ttsf.hideFilters( c );\r\n\t\t\t}\r\n\r\n\t\t\t// show processing icon\r\n\t\t\tif ( c.showProcessing ) {\r\n\t\t\t\ttxt = 'filterStart filterEnd '.split( ' ' ).join( c.namespace + 'filter-sp ' );\r\n\t\t\t\tc.$table\r\n\t\t\t\t\t.unbind( txt.replace( ts.regex.spaces, ' ' ) )\r\n\t\t\t\t\t.bind( txt, function( event, columns ) {\r\n\t\t\t\t\t// only add processing to certain columns to all columns\r\n\t\t\t\t\t$header = ( columns ) ?\r\n\t\t\t\t\t\tc.$table\r\n\t\t\t\t\t\t\t.find( '.' + tscss.header )\r\n\t\t\t\t\t\t\t.filter( '[data-column]' )\r\n\t\t\t\t\t\t\t.filter( function() {\r\n\t\t\t\t\t\t\t\treturn columns[ $( this ).data( 'column' ) ] !== '';\r\n\t\t\t\t\t\t\t}) : '';\r\n\t\t\t\t\tts.isProcessing( table, event.type === 'filterStart', columns ? $header : '' );\r\n\t\t\t\t});\r\n\t\t\t}\r\n\r\n\t\t\t// set filtered rows count ( intially unfiltered )\r\n\t\t\tc.filteredRows = c.totalRows;\r\n\r\n\t\t\t// add default values\r\n\t\t\ttxt = 'tablesorter-initialized pagerBeforeInitialized '.split( ' ' ).join( c.namespace + 'filter ' );\r\n\t\t\tc.$table\r\n\t\t\t.unbind( txt.replace( ts.regex.spaces, ' ' ) )\r\n\t\t\t.bind( txt, function() {\r\n\t\t\t\ttsf.completeInit( this );\r\n\t\t\t});\r\n\t\t\t// if filter widget is added after pager has initialized; then set filter init flag\r\n\t\t\tif ( c.pager && c.pager.initialized && !wo.filter_initialized ) {\r\n\t\t\t\tc.$table.triggerHandler( 'filterFomatterUpdate' );\r\n\t\t\t\tsetTimeout( function() {\r\n\t\t\t\t\ttsf.filterInitComplete( c );\r\n\t\t\t\t}, 100 );\r\n\t\t\t} else if ( !wo.filter_initialized ) {\r\n\t\t\t\ttsf.completeInit( table );\r\n\t\t\t}\r\n\t\t},\r\n\t\tcompleteInit: function( table ) {\r\n\t\t\t// redefine 'c' & 'wo' so they update properly inside this callback\r\n\t\t\tvar c = table.config,\r\n\t\t\t\two = c.widgetOptions,\r\n\t\t\t\tfilters = tsf.setDefaults( table, c, wo ) || [];\r\n\t\t\tif ( filters.length ) {\r\n\t\t\t\t// prevent delayInit from triggering a cache build if filters are empty\r\n\t\t\t\tif ( !( c.delayInit && filters.join( '' ) === '' ) ) {\r\n\t\t\t\t\tts.setFilters( table, filters, true );\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\tc.$table.triggerHandler( 'filterFomatterUpdate' );\r\n\t\t\t// trigger init after setTimeout to prevent multiple filterStart/End/Init triggers\r\n\t\t\tsetTimeout( function() {\r\n\t\t\t\tif ( !wo.filter_initialized ) {\r\n\t\t\t\t\ttsf.filterInitComplete( c );\r\n\t\t\t\t}\r\n\t\t\t}, 100 );\r\n\t\t},\r\n\r\n\t\t// $cell parameter, but not the config, is passed to the filter_formatters,\r\n\t\t// so we have to work with it instead\r\n\t\tformatterUpdated: function( $cell, column ) {\r\n\t\t\t// prevent error if $cell is undefined - see #1056\r\n\t\t\tvar $table = $cell && $cell.closest( 'table' );\r\n\t\t\tvar config = $table.length && $table[0].config,\r\n\t\t\t\two = config && config.widgetOptions;\r\n\t\t\tif ( wo && !wo.filter_initialized ) {\r\n\t\t\t\t// add updates by column since this function\r\n\t\t\t\t// may be called numerous times before initialization\r\n\t\t\t\two.filter_formatterInit[ column ] = 1;\r\n\t\t\t}\r\n\t\t},\r\n\t\tfilterInitComplete: function( c ) {\r\n\t\t\tvar indx, len,\r\n\t\t\t\two = c.widgetOptions,\r\n\t\t\t\tcount = 0,\r\n\t\t\t\tcompleted = function() {\r\n\t\t\t\t\two.filter_initialized = true;\r\n\t\t\t\t\t// update lastSearch - it gets cleared often\r\n\t\t\t\t\tc.lastSearch = c.$table.data( 'lastSearch' );\r\n\t\t\t\t\tc.$table.triggerHandler( 'filterInit', c );\r\n\t\t\t\t\ttsf.findRows( c.table, c.lastSearch || [] );\r\n\t\t\t\t\tif (ts.debug(c, 'filter')) {\r\n\t\t\t\t\t\tconsole.log('Filter >> Widget initialized');\r\n\t\t\t\t\t}\r\n\t\t\t\t};\r\n\t\t\tif ( $.isEmptyObject( wo.filter_formatter ) ) {\r\n\t\t\t\tcompleted();\r\n\t\t\t} else {\r\n\t\t\t\tlen = wo.filter_formatterInit.length;\r\n\t\t\t\tfor ( indx = 0; indx < len; indx++ ) {\r\n\t\t\t\t\tif ( wo.filter_formatterInit[ indx ] === 1 ) {\r\n\t\t\t\t\t\tcount++;\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t\tclearTimeout( wo.filter_initTimer );\r\n\t\t\t\tif ( !wo.filter_initialized && count === wo.filter_formatterCount ) {\r\n\t\t\t\t\t// filter widget initialized\r\n\t\t\t\t\tcompleted();\r\n\t\t\t\t} else if ( !wo.filter_initialized ) {\r\n\t\t\t\t\t// fall back in case a filter_formatter doesn't call\r\n\t\t\t\t\t// $.tablesorter.filter.formatterUpdated( $cell, column ), and the count is off\r\n\t\t\t\t\two.filter_initTimer = setTimeout( function() {\r\n\t\t\t\t\t\tcompleted();\r\n\t\t\t\t\t}, 500 );\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t},\r\n\t\t// encode or decode filters for storage; see #1026\r\n\t\tprocessFilters: function( filters, encode ) {\r\n\t\t\tvar indx,\r\n\t\t\t\t// fixes #1237; previously returning an encoded \"filters\" value\r\n\t\t\t\tresult = [],\r\n\t\t\t\tmode = encode ? encodeURIComponent : decodeURIComponent,\r\n\t\t\t\tlen = filters.length;\r\n\t\t\tfor ( indx = 0; indx < len; indx++ ) {\r\n\t\t\t\tif ( filters[ indx ] ) {\r\n\t\t\t\t\tresult[ indx ] = mode( filters[ indx ] );\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\treturn result;\r\n\t\t},\r\n\t\tsetDefaults: function( table, c, wo ) {\r\n\t\t\tvar isArray, saved, indx, col, $filters,\r\n\t\t\t\t// get current ( default ) filters\r\n\t\t\t\tfilters = ts.getFilters( table ) || [];\r\n\t\t\tif ( wo.filter_saveFilters && ts.storage ) {\r\n\t\t\t\tsaved = ts.storage( table, 'tablesorter-filters' ) || [];\r\n\t\t\t\tisArray = $.isArray( saved );\r\n\t\t\t\t// make sure we're not just getting an empty array\r\n\t\t\t\tif ( !( isArray && saved.join( '' ) === '' || !isArray ) ) {\r\n\t\t\t\t\tfilters = tsf.processFilters( saved );\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\t// if no filters saved, then check default settings\r\n\t\t\tif ( filters.join( '' ) === '' ) {\r\n\t\t\t\t// allow adding default setting to external filters\r\n\t\t\t\t$filters = c.$headers.add( wo.filter_$externalFilters )\r\n\t\t\t\t\t.filter( '[' + wo.filter_defaultAttrib + ']' );\r\n\t\t\t\tfor ( indx = 0; indx <= c.columns; indx++ ) {\r\n\t\t\t\t\t// include data-column='all' external filters\r\n\t\t\t\t\tcol = indx === c.columns ? 'all' : indx;\r\n\t\t\t\t\tfilters[ indx ] = $filters\r\n\t\t\t\t\t\t.filter( '[data-column=\"' + col + '\"]' )\r\n\t\t\t\t\t\t.attr( wo.filter_defaultAttrib ) || filters[indx] || '';\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\tc.$table.data( 'lastSearch', filters );\r\n\t\t\treturn filters;\r\n\t\t},\r\n\t\tparseFilter: function( c, filter, data, parsed ) {\r\n\t\t\treturn parsed || data.parsed[ data.index ] ?\r\n\t\t\t\tc.parsers[ data.index ].format( filter, c.table, [], data.index ) :\r\n\t\t\t\tfilter;\r\n\t\t},\r\n\t\tbuildRow: function( table, c, wo ) {\r\n\t\t\tvar $filter, col, column, $header, makeSelect, disabled, name, ffxn, tmp,\r\n\t\t\t\t// c.columns defined in computeThIndexes()\r\n\t\t\t\tcellFilter = wo.filter_cellFilter,\r\n\t\t\t\tcolumns = c.columns,\r\n\t\t\t\tarry = $.isArray( cellFilter ),\r\n\t\t\t\tbuildFilter = '<tr role=\"search\" class=\"' + tscss.filterRow + ' ' + c.cssIgnoreRow + '\">';\r\n\t\t\tfor ( column = 0; column < columns; column++ ) {\r\n\t\t\t\tif ( c.$headerIndexed[ column ].length ) {\r\n\t\t\t\t\t// account for entire column set with colspan. See #1047\r\n\t\t\t\t\ttmp = c.$headerIndexed[ column ] && c.$headerIndexed[ column ][0].colSpan || 0;\r\n\t\t\t\t\tif ( tmp > 1 ) {\r\n\t\t\t\t\t\tbuildFilter += '<td data-column=\"' + column + '-' + ( column + tmp - 1 ) + '\" colspan=\"' + tmp + '\"';\r\n\t\t\t\t\t} else {\r\n\t\t\t\t\t\tbuildFilter += '<td data-column=\"' + column + '\"';\r\n\t\t\t\t\t}\r\n\t\t\t\t\tif ( arry ) {\r\n\t\t\t\t\t\tbuildFilter += ( cellFilter[ column ] ? ' class=\"' + cellFilter[ column ] + '\"' : '' );\r\n\t\t\t\t\t} else {\r\n\t\t\t\t\t\tbuildFilter += ( cellFilter !== '' ? ' class=\"' + cellFilter + '\"' : '' );\r\n\t\t\t\t\t}\r\n\t\t\t\t\tbuildFilter += '></td>';\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\tc.$filters = $( buildFilter += '</tr>' )\r\n\t\t\t\t.appendTo( c.$table.children( 'thead' ).eq( 0 ) )\r\n\t\t\t\t.children( 'td' );\r\n\t\t\t// build each filter input\r\n\t\t\tfor ( column = 0; column < columns; column++ ) {\r\n\t\t\t\tdisabled = false;\r\n\t\t\t\t// assuming last cell of a column is the main column\r\n\t\t\t\t$header = c.$headerIndexed[ column ];\r\n\t\t\t\tif ( $header && $header.length ) {\r\n\t\t\t\t\t// $filter = c.$filters.filter( '[data-column=\"' + column + '\"]' );\r\n\t\t\t\t\t$filter = tsf.getColumnElm( c, c.$filters, column );\r\n\t\t\t\t\tffxn = ts.getColumnData( table, wo.filter_functions, column );\r\n\t\t\t\t\tmakeSelect = ( wo.filter_functions && ffxn && typeof ffxn !== 'function' ) ||\r\n\t\t\t\t\t\t$header.hasClass( 'filter-select' );\r\n\t\t\t\t\t// get data from jQuery data, metadata, headers option or header class name\r\n\t\t\t\t\tcol = ts.getColumnData( table, c.headers, column );\r\n\t\t\t\t\tdisabled = ts.getData( $header[0], col, 'filter' ) === 'false' ||\r\n\t\t\t\t\t\tts.getData( $header[0], col, 'parser' ) === 'false';\r\n\r\n\t\t\t\t\tif ( makeSelect ) {\r\n\t\t\t\t\t\tbuildFilter = $( '<select>' ).appendTo( $filter );\r\n\t\t\t\t\t} else {\r\n\t\t\t\t\t\tffxn = ts.getColumnData( table, wo.filter_formatter, column );\r\n\t\t\t\t\t\tif ( ffxn ) {\r\n\t\t\t\t\t\t\two.filter_formatterCount++;\r\n\t\t\t\t\t\t\tbuildFilter = ffxn( $filter, column );\r\n\t\t\t\t\t\t\t// no element returned, so lets go find it\r\n\t\t\t\t\t\t\tif ( buildFilter && buildFilter.length === 0 ) {\r\n\t\t\t\t\t\t\t\tbuildFilter = $filter.children( 'input' );\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t// element not in DOM, so lets attach it\r\n\t\t\t\t\t\t\tif ( buildFilter && ( buildFilter.parent().length === 0 ||\r\n\t\t\t\t\t\t\t\t( buildFilter.parent().length && buildFilter.parent()[0] !== $filter[0] ) ) ) {\r\n\t\t\t\t\t\t\t\t$filter.append( buildFilter );\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t} else {\r\n\t\t\t\t\t\t\tbuildFilter = $( '<input type=\"search\">' ).appendTo( $filter );\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\tif ( buildFilter ) {\r\n\t\t\t\t\t\t\ttmp = $header.data( 'placeholder' ) ||\r\n\t\t\t\t\t\t\t\t$header.attr( 'data-placeholder' ) ||\r\n\t\t\t\t\t\t\t\two.filter_placeholder.search || '';\r\n\t\t\t\t\t\t\tbuildFilter.attr( 'placeholder', tmp );\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\t\t\t\t\tif ( buildFilter ) {\r\n\t\t\t\t\t\t// add filter class name\r\n\t\t\t\t\t\tname = ( $.isArray( wo.filter_cssFilter ) ?\r\n\t\t\t\t\t\t\t( typeof wo.filter_cssFilter[column] !== 'undefined' ? wo.filter_cssFilter[column] || '' : '' ) :\r\n\t\t\t\t\t\t\two.filter_cssFilter ) || '';\r\n\t\t\t\t\t\t// copy data-column from table cell (it will include colspan)\r\n\t\t\t\t\t\tbuildFilter.addClass( tscss.filter + ' ' + name );\r\n\t\t\t\t\t\tname = wo.filter_filterLabel;\r\n\t\t\t\t\t\ttmp = name.match(/{{([^}]+?)}}/g);\r\n\t\t\t\t\t\tif (!tmp) {\r\n\t\t\t\t\t\t\ttmp = [ '{{label}}' ];\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\t$.each(tmp, function(indx, attr) {\r\n\t\t\t\t\t\t\tvar regex = new RegExp(attr, 'g'),\r\n\t\t\t\t\t\t\t\tdata = $header.attr('data-' + attr.replace(/{{|}}/g, '')),\r\n\t\t\t\t\t\t\t\ttext = typeof data === 'undefined' ? $header.text() : data;\r\n\t\t\t\t\t\t\tname = name.replace( regex, $.trim( text ) );\r\n\t\t\t\t\t\t});\r\n\t\t\t\t\t\tbuildFilter.attr({\r\n\t\t\t\t\t\t\t'data-column': $filter.attr( 'data-column' ),\r\n\t\t\t\t\t\t\t'aria-label': name\r\n\t\t\t\t\t\t});\r\n\t\t\t\t\t\tif ( disabled ) {\r\n\t\t\t\t\t\t\tbuildFilter.attr( 'placeholder', '' ).addClass( tscss.filterDisabled )[0].disabled = true;\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t},\r\n\t\tbindSearch: function( table, $el, internal ) {\r\n\t\t\ttable = $( table )[0];\r\n\t\t\t$el = $( $el ); // allow passing a selector string\r\n\t\t\tif ( !$el.length ) { return; }\r\n\t\t\tvar tmp,\r\n\t\t\t\tc = table.config,\r\n\t\t\t\two = c.widgetOptions,\r\n\t\t\t\tnamespace = c.namespace + 'filter',\r\n\t\t\t\t$ext = wo.filter_$externalFilters;\r\n\t\t\tif ( internal !== true ) {\r\n\t\t\t\t// save anyMatch element\r\n\t\t\t\ttmp = wo.filter_anyColumnSelector + ',' + wo.filter_multipleColumnSelector;\r\n\t\t\t\two.filter_$anyMatch = $el.filter( tmp );\r\n\t\t\t\tif ( $ext && $ext.length ) {\r\n\t\t\t\t\two.filter_$externalFilters = wo.filter_$externalFilters.add( $el );\r\n\t\t\t\t} else {\r\n\t\t\t\t\two.filter_$externalFilters = $el;\r\n\t\t\t\t}\r\n\t\t\t\t// update values ( external filters added after table initialization )\r\n\t\t\t\tts.setFilters( table, c.$table.data( 'lastSearch' ) || [], internal === false );\r\n\t\t\t}\r\n\t\t\t// unbind events\r\n\t\t\ttmp = ( 'keypress keyup keydown search change input '.split( ' ' ).join( namespace + ' ' ) );\r\n\t\t\t$el\r\n\t\t\t// use data attribute instead of jQuery data since the head is cloned without including\r\n\t\t\t// the data/binding\r\n\t\t\t.attr( 'data-lastSearchTime', new Date().getTime() )\r\n\t\t\t.unbind( tmp.replace( ts.regex.spaces, ' ' ) )\r\n\t\t\t.bind( 'keydown' + namespace, function( event ) {\r\n\t\t\t\tif ( event.which === tskeyCodes.escape && !table.config.widgetOptions.filter_resetOnEsc ) {\r\n\t\t\t\t\t// prevent keypress event\r\n\t\t\t\t\treturn false;\r\n\t\t\t\t}\r\n\t\t\t})\r\n\t\t\t.bind( 'keyup' + namespace, function( event ) {\r\n\t\t\t\two = table.config.widgetOptions; // make sure \"wo\" isn't cached\r\n\t\t\t\tvar column = parseInt( $( this ).attr( 'data-column' ), 10 ),\r\n\t\t\t\t\tliveSearch = typeof wo.filter_liveSearch === 'boolean' ? wo.filter_liveSearch :\r\n\t\t\t\t\t\tts.getColumnData( table, wo.filter_liveSearch, column );\r\n\t\t\t\tif ( typeof liveSearch === 'undefined' ) {\r\n\t\t\t\t\tliveSearch = wo.filter_liveSearch.fallback || false;\r\n\t\t\t\t}\r\n\t\t\t\t$( this ).attr( 'data-lastSearchTime', new Date().getTime() );\r\n\t\t\t\t// emulate what webkit does.... escape clears the filter\r\n\t\t\t\tif ( event.which === tskeyCodes.escape ) {\r\n\t\t\t\t\t// make sure to restore the last value on escape\r\n\t\t\t\t\tthis.value = wo.filter_resetOnEsc ? '' : c.lastSearch[column];\r\n\t\t\t\t\t// don't return if the search value is empty ( all rows need to be revealed )\r\n\t\t\t\t} else if ( this.value !== '' && (\r\n\t\t\t\t\t// liveSearch can contain a min value length; ignore arrow and meta keys, but allow backspace\r\n\t\t\t\t\t( typeof liveSearch === 'number' && this.value.length < liveSearch ) ||\r\n\t\t\t\t\t// let return & backspace continue on, but ignore arrows & non-valid characters\r\n\t\t\t\t\t( event.which !== tskeyCodes.enter && event.which !== tskeyCodes.backSpace &&\r\n\t\t\t\t\t\t( event.which < tskeyCodes.space || ( event.which >= tskeyCodes.left && event.which <= tskeyCodes.down ) ) ) ) ) {\r\n\t\t\t\t\treturn;\r\n\t\t\t\t\t// live search\r\n\t\t\t\t} else if ( liveSearch === false ) {\r\n\t\t\t\t\tif ( this.value !== '' && event.which !== tskeyCodes.enter ) {\r\n\t\t\t\t\t\treturn;\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t\t// change event = no delay; last true flag tells getFilters to skip newest timed input\r\n\t\t\t\ttsf.searching( table, true, true, column );\r\n\t\t\t})\r\n\t\t\t// include change for select - fixes #473\r\n\t\t\t.bind( 'search change keypress input blur '.split( ' ' ).join( namespace + ' ' ), function( event ) {\r\n\t\t\t\t// don't get cached data, in case data-column changes dynamically\r\n\t\t\t\tvar column = parseInt( $( this ).attr( 'data-column' ), 10 ),\r\n\t\t\t\t\teventType = event.type,\r\n\t\t\t\t\tliveSearch = typeof wo.filter_liveSearch === 'boolean' ?\r\n\t\t\t\t\t\two.filter_liveSearch :\r\n\t\t\t\t\t\tts.getColumnData( table, wo.filter_liveSearch, column );\r\n\t\t\t\tif ( table.config.widgetOptions.filter_initialized &&\r\n\t\t\t\t\t// immediate search if user presses enter\r\n\t\t\t\t\t( event.which === tskeyCodes.enter ||\r\n\t\t\t\t\t\t// immediate search if a \"search\" or \"blur\" is triggered on the input\r\n\t\t\t\t\t\t( eventType === 'search' || eventType === 'blur' ) ||\r\n\t\t\t\t\t\t// change & input events must be ignored if liveSearch !== true\r\n\t\t\t\t\t\t( eventType === 'change' || eventType === 'input' ) &&\r\n\t\t\t\t\t\t// prevent search if liveSearch is a number\r\n\t\t\t\t\t\t( liveSearch === true || liveSearch !== true && event.target.nodeName !== 'INPUT' ) &&\r\n\t\t\t\t\t\t// don't allow 'change' or 'input' event to process if the input value\r\n\t\t\t\t\t\t// is the same - fixes #685\r\n\t\t\t\t\t\tthis.value !== c.lastSearch[column]\r\n\t\t\t\t\t)\r\n\t\t\t\t) {\r\n\t\t\t\t\tevent.preventDefault();\r\n\t\t\t\t\t// init search with no delay\r\n\t\t\t\t\t$( this ).attr( 'data-lastSearchTime', new Date().getTime() );\r\n\t\t\t\t\ttsf.searching( table, eventType !== 'keypress' || event.which === tskeyCodes.enter, true, column );\r\n\t\t\t\t}\r\n\t\t\t});\r\n\t\t},\r\n\t\tsearching: function( table, filter, skipFirst, column ) {\r\n\t\t\tvar liveSearch,\r\n\t\t\t\two = table.config.widgetOptions;\r\n\t\t\tif (typeof column === 'undefined') {\r\n\t\t\t\t// no delay\r\n\t\t\t\tliveSearch = false;\r\n\t\t\t} else {\r\n\t\t\t\tliveSearch = typeof wo.filter_liveSearch === 'boolean' ?\r\n\t\t\t\t\two.filter_liveSearch :\r\n\t\t\t\t\t// get column setting, or set to fallback value, or default to false\r\n\t\t\t\t\tts.getColumnData( table, wo.filter_liveSearch, column );\r\n\t\t\t\tif ( typeof liveSearch === 'undefined' ) {\r\n\t\t\t\t\tliveSearch = wo.filter_liveSearch.fallback || false;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\tclearTimeout( wo.filter_searchTimer );\r\n\t\t\tif ( typeof filter === 'undefined' || filter === true ) {\r\n\t\t\t\t// delay filtering\r\n\t\t\t\two.filter_searchTimer = setTimeout( function() {\r\n\t\t\t\t\ttsf.checkFilters( table, filter, skipFirst );\r\n\t\t\t\t}, liveSearch ? wo.filter_searchDelay : 10 );\r\n\t\t\t} else {\r\n\t\t\t\t// skip delay\r\n\t\t\t\ttsf.checkFilters( table, filter, skipFirst );\r\n\t\t\t}\r\n\t\t},\r\n\t\tequalFilters: function (c, filter1, filter2) {\r\n\t\t\tvar indx,\r\n\t\t\t\tf1 = [],\r\n\t\t\t\tf2 = [],\r\n\t\t\t\tlen = c.columns + 1; // add one to include anyMatch filter\r\n\t\t\tfilter1 = $.isArray(filter1) ? filter1 : [];\r\n\t\t\tfilter2 = $.isArray(filter2) ? filter2 : [];\r\n\t\t\tfor (indx = 0; indx < len; indx++) {\r\n\t\t\t\tf1[indx] = filter1[indx] || '';\r\n\t\t\t\tf2[indx] = filter2[indx] || '';\r\n\t\t\t}\r\n\t\t\treturn f1.join(',') === f2.join(',');\r\n\t\t},\r\n\t\tcheckFilters: function( table, filter, skipFirst ) {\r\n\t\t\tvar c = table.config,\r\n\t\t\t\two = c.widgetOptions,\r\n\t\t\t\tfilterArray = $.isArray( filter ),\r\n\t\t\t\tfilters = ( filterArray ) ? filter : ts.getFilters( table, true ),\r\n\t\t\t\tcurrentFilters = filters || []; // current filter values\r\n\t\t\t// prevent errors if delay init is set\r\n\t\t\tif ( $.isEmptyObject( c.cache ) ) {\r\n\t\t\t\t// update cache if delayInit set & pager has initialized ( after user initiates a search )\r\n\t\t\t\tif ( c.delayInit && ( !c.pager || c.pager && c.pager.initialized ) ) {\r\n\t\t\t\t\tts.updateCache( c, function() {\r\n\t\t\t\t\t\ttsf.checkFilters( table, false, skipFirst );\r\n\t\t\t\t\t});\r\n\t\t\t\t}\r\n\t\t\t\treturn;\r\n\t\t\t}\r\n\t\t\t// add filter array back into inputs\r\n\t\t\tif ( filterArray ) {\r\n\t\t\t\tts.setFilters( table, filters, false, skipFirst !== true );\r\n\t\t\t\tif ( !wo.filter_initialized ) {\r\n\t\t\t\t\tc.lastSearch = [];\r\n\t\t\t\t\tc.lastCombinedFilter = '';\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\tif ( wo.filter_hideFilters ) {\r\n\t\t\t\t// show/hide filter row as needed\r\n\t\t\t\tc.$table\r\n\t\t\t\t\t.find( '.' + tscss.filterRow )\r\n\t\t\t\t\t.triggerHandler( tsf.hideFiltersCheck( c ) ? 'mouseleave' : 'mouseenter' );\r\n\t\t\t}\r\n\t\t\t// return if the last search is the same; but filter === false when updating the search\r\n\t\t\t// see example-widget-filter.html filter toggle buttons\r\n\t\t\tif ( tsf.equalFilters(c, c.lastSearch, currentFilters) ) {\r\n\t\t\t\tif ( filter !== false ) {\r\n\t\t\t\t\treturn;\r\n\t\t\t\t} else {\r\n\t\t\t\t\t// force filter refresh\r\n\t\t\t\t\tc.lastCombinedFilter = '';\r\n\t\t\t\t\tc.lastSearch = [];\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\t// define filter inside it is false\r\n\t\t\tfilters = filters || [];\r\n\t\t\t// convert filters to strings - see #1070\r\n\t\t\tfilters = Array.prototype.map ?\r\n\t\t\t\tfilters.map( String ) :\r\n\t\t\t\t// for IE8 & older browsers - maybe not the best method\r\n\t\t\t\tfilters.join( '\\ufffd' ).split( '\\ufffd' );\r\n\r\n\t\t\tif ( wo.filter_initialized ) {\r\n\t\t\t\tc.$table.triggerHandler( 'filterStart', [ filters ] );\r\n\t\t\t}\r\n\t\t\tif ( c.showProcessing ) {\r\n\t\t\t\t// give it time for the processing icon to kick in\r\n\t\t\t\tsetTimeout( function() {\r\n\t\t\t\t\ttsf.findRows( table, filters, currentFilters );\r\n\t\t\t\t\treturn false;\r\n\t\t\t\t}, 30 );\r\n\t\t\t} else {\r\n\t\t\t\ttsf.findRows( table, filters, currentFilters );\r\n\t\t\t\treturn false;\r\n\t\t\t}\r\n\t\t},\r\n\t\thideFiltersCheck: function( c ) {\r\n\t\t\tif (typeof c.widgetOptions.filter_hideFilters === 'function') {\r\n\t\t\t\tvar val = c.widgetOptions.filter_hideFilters( c );\r\n\t\t\t\tif (typeof val === 'boolean') {\r\n\t\t\t\t\treturn val;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\treturn ts.getFilters( c.$table ).join( '' ) === '';\r\n\t\t},\r\n\t\thideFilters: function( c, $table ) {\r\n\t\t\tvar timer;\r\n\t\t\t( $table || c.$table )\r\n\t\t\t\t.find( '.' + tscss.filterRow )\r\n\t\t\t\t.addClass( tscss.filterRowHide )\r\n\t\t\t\t.bind( 'mouseenter mouseleave', function( e ) {\r\n\t\t\t\t\t// save event object - http://bugs.jquery.com/ticket/12140\r\n\t\t\t\t\tvar event = e,\r\n\t\t\t\t\t\t$row = $( this );\r\n\t\t\t\t\tclearTimeout( timer );\r\n\t\t\t\t\ttimer = setTimeout( function() {\r\n\t\t\t\t\t\tif ( /enter|over/.test( event.type ) ) {\r\n\t\t\t\t\t\t\t$row.removeClass( tscss.filterRowHide );\r\n\t\t\t\t\t\t} else {\r\n\t\t\t\t\t\t\t// don't hide if input has focus\r\n\t\t\t\t\t\t\t// $( ':focus' ) needs jQuery 1.6+\r\n\t\t\t\t\t\t\tif ( $( document.activeElement ).closest( 'tr' )[0] !== $row[0] ) {\r\n\t\t\t\t\t\t\t\t// don't hide row if any filter has a value\r\n\t\t\t\t\t\t\t\t$row.toggleClass( tscss.filterRowHide, tsf.hideFiltersCheck( c ) );\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}, 200 );\r\n\t\t\t\t})\r\n\t\t\t\t.find( 'input, select' ).bind( 'focus blur', function( e ) {\r\n\t\t\t\t\tvar event = e,\r\n\t\t\t\t\t\t$row = $( this ).closest( 'tr' );\r\n\t\t\t\t\tclearTimeout( timer );\r\n\t\t\t\t\ttimer = setTimeout( function() {\r\n\t\t\t\t\t\tclearTimeout( timer );\r\n\t\t\t\t\t\t// don't hide row if any filter has a value\r\n\t\t\t\t\t\t$row.toggleClass( tscss.filterRowHide, tsf.hideFiltersCheck( c ) && event.type !== 'focus' );\r\n\t\t\t\t\t}, 200 );\r\n\t\t\t\t});\r\n\t\t},\r\n\t\tdefaultFilter: function( filter, mask ) {\r\n\t\t\tif ( filter === '' ) { return filter; }\r\n\t\t\tvar regex = tsfRegex.iQuery,\r\n\t\t\t\tmaskLen = mask.match( tsfRegex.igQuery ).length,\r\n\t\t\t\tquery = maskLen > 1 ? $.trim( filter ).split( /\\s/ ) : [ $.trim( filter ) ],\r\n\t\t\t\tlen = query.length - 1,\r\n\t\t\t\tindx = 0,\r\n\t\t\t\tval = mask;\r\n\t\t\tif ( len < 1 && maskLen > 1 ) {\r\n\t\t\t\t// only one 'word' in query but mask has >1 slots\r\n\t\t\t\tquery[1] = query[0];\r\n\t\t\t}\r\n\t\t\t// replace all {query} with query words...\r\n\t\t\t// if query = 'Bob', then convert mask from '!{query}' to '!Bob'\r\n\t\t\t// if query = 'Bob Joe Frank', then convert mask '{q} OR {q}' to 'Bob OR Joe OR Frank'\r\n\t\t\twhile ( regex.test( val ) ) {\r\n\t\t\t\tval = val.replace( regex, query[indx++] || '' );\r\n\t\t\t\tif ( regex.test( val ) && indx < len && ( query[indx] || '' ) !== '' ) {\r\n\t\t\t\t\tval = mask.replace( regex, val );\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\treturn val;\r\n\t\t},\r\n\t\tgetLatestSearch: function( $input ) {\r\n\t\t\tif ( $input ) {\r\n\t\t\t\treturn $input.sort( function( a, b ) {\r\n\t\t\t\t\treturn $( b ).attr( 'data-lastSearchTime' ) - $( a ).attr( 'data-lastSearchTime' );\r\n\t\t\t\t});\r\n\t\t\t}\r\n\t\t\treturn $input || $();\r\n\t\t},\r\n\t\tfindRange: function( c, val, ignoreRanges ) {\r\n\t\t\t// look for multiple columns '1-3,4-6,8' in data-column\r\n\t\t\tvar temp, ranges, range, start, end, singles, i, indx, len,\r\n\t\t\t\tcolumns = [];\r\n\t\t\tif ( /^[0-9]+$/.test( val ) ) {\r\n\t\t\t\t// always return an array\r\n\t\t\t\treturn [ parseInt( val, 10 ) ];\r\n\t\t\t}\r\n\t\t\t// process column range\r\n\t\t\tif ( !ignoreRanges && /-/.test( val ) ) {\r\n\t\t\t\tranges = val.match( /(\\d+)\\s*-\\s*(\\d+)/g );\r\n\t\t\t\tlen = ranges ? ranges.length : 0;\r\n\t\t\t\tfor ( indx = 0; indx < len; indx++ ) {\r\n\t\t\t\t\trange = ranges[indx].split( /\\s*-\\s*/ );\r\n\t\t\t\t\tstart = parseInt( range[0], 10 ) || 0;\r\n\t\t\t\t\tend = parseInt( range[1], 10 ) || ( c.columns - 1 );\r\n\t\t\t\t\tif ( start > end ) {\r\n\t\t\t\t\t\ttemp = start; start = end; end = temp; // swap\r\n\t\t\t\t\t}\r\n\t\t\t\t\tif ( end >= c.columns ) {\r\n\t\t\t\t\t\tend = c.columns - 1;\r\n\t\t\t\t\t}\r\n\t\t\t\t\tfor ( ; start <= end; start++ ) {\r\n\t\t\t\t\t\tcolumns[ columns.length ] = start;\r\n\t\t\t\t\t}\r\n\t\t\t\t\t// remove processed range from val\r\n\t\t\t\t\tval = val.replace( ranges[ indx ], '' );\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\t// process single columns\r\n\t\t\tif ( !ignoreRanges && /,/.test( val ) ) {\r\n\t\t\t\tsingles = val.split( /\\s*,\\s*/ );\r\n\t\t\t\tlen = singles.length;\r\n\t\t\t\tfor ( i = 0; i < len; i++ ) {\r\n\t\t\t\t\tif ( singles[ i ] !== '' ) {\r\n\t\t\t\t\t\tindx = parseInt( singles[ i ], 10 );\r\n\t\t\t\t\t\tif ( indx < c.columns ) {\r\n\t\t\t\t\t\t\tcolumns[ columns.length ] = indx;\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\t// return all columns\r\n\t\t\tif ( !columns.length ) {\r\n\t\t\t\tfor ( indx = 0; indx < c.columns; indx++ ) {\r\n\t\t\t\t\tcolumns[ columns.length ] = indx;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\treturn columns;\r\n\t\t},\r\n\t\tgetColumnElm: function( c, $elements, column ) {\r\n\t\t\t// data-column may contain multiple columns '1-3,5-6,8'\r\n\t\t\t// replaces: c.$filters.filter( '[data-column=\"' + column + '\"]' );\r\n\t\t\treturn $elements.filter( function() {\r\n\t\t\t\tvar cols = tsf.findRange( c, $( this ).attr( 'data-column' ) );\r\n\t\t\t\treturn $.inArray( column, cols ) > -1;\r\n\t\t\t});\r\n\t\t},\r\n\t\tmultipleColumns: function( c, $input ) {\r\n\t\t\t// look for multiple columns '1-3,4-6,8' in data-column\r\n\t\t\tvar wo = c.widgetOptions,\r\n\t\t\t\t// only target 'all' column inputs on initialization\r\n\t\t\t\t// & don't target 'all' column inputs if they don't exist\r\n\t\t\t\ttargets = wo.filter_initialized || !$input.filter( wo.filter_anyColumnSelector ).length,\r\n\t\t\t\tval = $.trim( tsf.getLatestSearch( $input ).attr( 'data-column' ) || '' );\r\n\t\t\treturn tsf.findRange( c, val, !targets );\r\n\t\t},\r\n\t\tprocessTypes: function( c, data, vars ) {\r\n\t\t\tvar ffxn,\r\n\t\t\t\tfilterMatched = null,\r\n\t\t\t\tmatches = null;\r\n\t\t\tfor ( ffxn in tsf.types ) {\r\n\t\t\t\tif ( $.inArray( ffxn, vars.excludeMatch ) < 0 && matches === null ) {\r\n\t\t\t\t\tmatches = tsf.types[ffxn]( c, data, vars );\r\n\t\t\t\t\tif ( matches !== null ) {\r\n\t\t\t\t\t\tdata.matchedOn = ffxn;\r\n\t\t\t\t\t\tfilterMatched = matches;\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\treturn filterMatched;\r\n\t\t},\r\n\t\tmatchType: function( c, columnIndex ) {\r\n\t\t\tvar isMatch,\r\n\t\t\t\two = c.widgetOptions,\r\n\t\t\t\t$el = c.$headerIndexed[ columnIndex ];\r\n\t\t\t// filter-exact > filter-match > filter_matchType for type\r\n\t\t\tif ( $el.hasClass( 'filter-exact' ) ) {\r\n\t\t\t\tisMatch = false;\r\n\t\t\t} else if ( $el.hasClass( 'filter-match' ) ) {\r\n\t\t\t\tisMatch = true;\r\n\t\t\t} else {\r\n\t\t\t\t// filter-select is not applied when filter_functions are used, so look for a select\r\n\t\t\t\tif ( wo.filter_columnFilters ) {\r\n\t\t\t\t\t$el = c.$filters\r\n\t\t\t\t\t\t.find( '.' + tscss.filter )\r\n\t\t\t\t\t\t.add( wo.filter_$externalFilters )\r\n\t\t\t\t\t\t.filter( '[data-column=\"' + columnIndex + '\"]' );\r\n\t\t\t\t} else if ( wo.filter_$externalFilters ) {\r\n\t\t\t\t\t$el = wo.filter_$externalFilters.filter( '[data-column=\"' + columnIndex + '\"]' );\r\n\t\t\t\t}\r\n\t\t\t\tisMatch = $el.length ?\r\n\t\t\t\t\tc.widgetOptions.filter_matchType[ ( $el[ 0 ].nodeName || '' ).toLowerCase() ] === 'match' :\r\n\t\t\t\t\t// default to exact, if no inputs found\r\n\t\t\t\t\tfalse;\r\n\t\t\t}\r\n\t\t\treturn isMatch;\r\n\t\t},\r\n\t\tprocessRow: function( c, data, vars ) {\r\n\t\t\tvar result, filterMatched,\r\n\t\t\t\tfxn, ffxn, txt,\r\n\t\t\t\two = c.widgetOptions,\r\n\t\t\t\tshowRow = true,\r\n\t\t\t\thasAnyMatchInput = wo.filter_$anyMatch && wo.filter_$anyMatch.length,\r\n\r\n\t\t\t\t// if wo.filter_$anyMatch data-column attribute is changed dynamically\r\n\t\t\t\t// we don't want to do an \"anyMatch\" search on one column using data\r\n\t\t\t\t// for the entire row - see #998\r\n\t\t\t\tcolumnIndex = wo.filter_$anyMatch && wo.filter_$anyMatch.length ?\r\n\t\t\t\t\t// look for multiple columns '1-3,4-6,8'\r\n\t\t\t\t\ttsf.multipleColumns( c, wo.filter_$anyMatch ) :\r\n\t\t\t\t\t[];\r\n\t\t\tdata.$cells = data.$row.children();\r\n\t\t\tdata.matchedOn = null;\r\n\t\t\tif ( data.anyMatchFlag && columnIndex.length > 1 || ( data.anyMatchFilter && !hasAnyMatchInput ) ) {\r\n\t\t\t\tdata.anyMatch = true;\r\n\t\t\t\tdata.isMatch = true;\r\n\t\t\t\tdata.rowArray = data.$cells.map( function( i ) {\r\n\t\t\t\t\tif ( $.inArray( i, columnIndex ) > -1 || ( data.anyMatchFilter && !hasAnyMatchInput ) ) {\r\n\t\t\t\t\t\tif ( data.parsed[ i ] ) {\r\n\t\t\t\t\t\t\ttxt = data.cacheArray[ i ];\r\n\t\t\t\t\t\t} else {\r\n\t\t\t\t\t\t\ttxt = data.rawArray[ i ];\r\n\t\t\t\t\t\t\ttxt = $.trim( wo.filter_ignoreCase ? txt.toLowerCase() : txt );\r\n\t\t\t\t\t\t\tif ( c.sortLocaleCompare ) {\r\n\t\t\t\t\t\t\t\ttxt = ts.replaceAccents( txt );\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\treturn txt;\r\n\t\t\t\t\t}\r\n\t\t\t\t}).get();\r\n\t\t\t\tdata.filter = data.anyMatchFilter;\r\n\t\t\t\tdata.iFilter = data.iAnyMatchFilter;\r\n\t\t\t\tdata.exact = data.rowArray.join( ' ' );\r\n\t\t\t\tdata.iExact = wo.filter_ignoreCase ? data.exact.toLowerCase() : data.exact;\r\n\t\t\t\tdata.cache = data.cacheArray.slice( 0, -1 ).join( ' ' );\r\n\t\t\t\tvars.excludeMatch = vars.noAnyMatch;\r\n\t\t\t\tfilterMatched = tsf.processTypes( c, data, vars );\r\n\t\t\t\tif ( filterMatched !== null ) {\r\n\t\t\t\t\tshowRow = filterMatched;\r\n\t\t\t\t} else {\r\n\t\t\t\t\tif ( wo.filter_startsWith ) {\r\n\t\t\t\t\t\tshowRow = false;\r\n\t\t\t\t\t\t// data.rowArray may not contain all columns\r\n\t\t\t\t\t\tcolumnIndex = Math.min( c.columns, data.rowArray.length );\r\n\t\t\t\t\t\twhile ( !showRow && columnIndex > 0 ) {\r\n\t\t\t\t\t\t\tcolumnIndex--;\r\n\t\t\t\t\t\t\tshowRow = showRow || data.rowArray[ columnIndex ].indexOf( data.iFilter ) === 0;\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t} else {\r\n\t\t\t\t\t\tshowRow = ( data.iExact + data.childRowText ).indexOf( data.iFilter ) >= 0;\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t\tdata.anyMatch = false;\r\n\t\t\t\t// no other filters to process\r\n\t\t\t\tif ( data.filters.join( '' ) === data.filter ) {\r\n\t\t\t\t\treturn showRow;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t\tfor ( columnIndex = 0; columnIndex < c.columns; columnIndex++ ) {\r\n\t\t\t\tdata.filter = data.filters[ columnIndex ];\r\n\t\t\t\tdata.index = columnIndex;\r\n\r\n\t\t\t\t// filter types to exclude, per column\r\n\t\t\t\tvars.excludeMatch = vars.excludeFilter[ columnIndex ];\r\n\r\n\t\t\t\t// ignore if filter is empty or disabled\r\n\t\t\t\tif ( data.filter ) {\r\n\t\t\t\t\tdata.cache = data.cacheArray[ columnIndex ];\r\n\t\t\t\t\tresult = data.parsed[ columnIndex ] ? data.cache : data.rawArray[ columnIndex ] || '';\r\n\t\t\t\t\tdata.exact = c.sortLocaleCompare ? ts.replaceAccents( result ) : result; // issue #405\r\n\t\t\t\t\tdata.iExact = !tsfRegex.type.test( typeof data.exact ) && wo.filter_ignoreCase ?\r\n\t\t\t\t\t\tdata.exact.toLowerCase() : data.exact;\r\n\t\t\t\t\tdata.isMatch = tsf.matchType( c, columnIndex );\r\n\r\n\t\t\t\t\tresult = showRow; // if showRow is true, show that row\r\n\r\n\t\t\t\t\t// in case select filter option has a different value vs text 'a - z|A through Z'\r\n\t\t\t\t\tffxn = wo.filter_columnFilters ?\r\n\t\t\t\t\t\tc.$filters.add( wo.filter_$externalFilters )\r\n\t\t\t\t\t\t\t.filter( '[data-column=\"' + columnIndex + '\"]' )\r\n\t\t\t\t\t\t\t.find( 'select option:selected' )\r\n\t\t\t\t\t\t\t.attr( 'data-function-name' ) || '' : '';\r\n\t\t\t\t\t// replace accents - see #357\r\n\t\t\t\t\tif ( c.sortLocaleCompare ) {\r\n\t\t\t\t\t\tdata.filter = ts.replaceAccents( data.filter );\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\t// replace column specific default filters - see #1088\r\n\t\t\t\t\tif ( wo.filter_defaultFilter && tsfRegex.iQuery.test( vars.defaultColFilter[ columnIndex ] ) ) {\r\n\t\t\t\t\t\tdata.filter = tsf.defaultFilter( data.filter, vars.defaultColFilter[ columnIndex ] );\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\t// data.iFilter = case insensitive ( if wo.filter_ignoreCase is true ),\r\n\t\t\t\t\t// data.filter = case sensitive\r\n\t\t\t\t\tdata.iFilter = wo.filter_ignoreCase ? ( data.filter || '' ).toLowerCase() : data.filter;\r\n\t\t\t\t\tfxn = vars.functions[ columnIndex ];\r\n\t\t\t\t\tfilterMatched = null;\r\n\t\t\t\t\tif ( fxn ) {\r\n\t\t\t\t\t\tif ( typeof fxn === 'function' ) {\r\n\t\t\t\t\t\t\t// filter callback( exact cell content, parser normalized content,\r\n\t\t\t\t\t\t\t// filter input value, column index, jQuery row object )\r\n\t\t\t\t\t\t\tfilterMatched = fxn( data.exact, data.cache, data.filter, columnIndex, data.$row, c, data );\r\n\t\t\t\t\t\t} else if ( typeof fxn[ ffxn || data.filter ] === 'function' ) {\r\n\t\t\t\t\t\t\t// selector option function\r\n\t\t\t\t\t\t\ttxt = ffxn || data.filter;\r\n\t\t\t\t\t\t\tfilterMatched =\r\n\t\t\t\t\t\t\t\tfxn[ txt ]( data.exact, data.cache, data.filter, columnIndex, data.$row, c, data );\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\t\t\t\t\tif ( filterMatched === null ) {\r\n\t\t\t\t\t\t// cycle through the different filters\r\n\t\t\t\t\t\t// filters return a boolean or null if nothing matches\r\n\t\t\t\t\t\tfilterMatched = tsf.processTypes( c, data, vars );\r\n\t\t\t\t\t\t// select with exact match; ignore \"and\" or \"or\" within the text; fixes #1486\r\n\t\t\t\t\t\ttxt = fxn === true && (data.matchedOn === 'and' || data.matchedOn === 'or');\r\n\t\t\t\t\t\tif ( filterMatched !== null && !txt) {\r\n\t\t\t\t\t\t\tresult = filterMatched;\r\n\t\t\t\t\t\t// Look for match, and add child row data for matching\r\n\t\t\t\t\t\t} else {\r\n\t\t\t\t\t\t\t// check fxn (filter-select in header) after filter types are checked\r\n\t\t\t\t\t\t\t// without this, the filter + jQuery UI selectmenu demo was breaking\r\n\t\t\t\t\t\t\tif ( fxn === true ) {\r\n\t\t\t\t\t\t\t\t// default selector uses exact match unless 'filter-match' class is found\r\n\t\t\t\t\t\t\t\tresult = data.isMatch ?\r\n\t\t\t\t\t\t\t\t\t// data.iExact may be a number\r\n\t\t\t\t\t\t\t\t\t( '' + data.iExact ).search( data.iFilter ) >= 0 :\r\n\t\t\t\t\t\t\t\t\tdata.filter === data.exact;\r\n\t\t\t\t\t\t\t} else {\r\n\t\t\t\t\t\t\t\ttxt = ( data.iExact + data.childRowText ).indexOf( tsf.parseFilter( c, data.iFilter, data ) );\r\n\t\t\t\t\t\t\t\tresult = ( ( !wo.filter_startsWith && txt >= 0 ) || ( wo.filter_startsWith && txt === 0 ) );\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t} else {\r\n\t\t\t\t\t\tresult = filterMatched;\r\n\t\t\t\t\t}\r\n\t\t\t\t\tshowRow = ( result ) ? showRow : false;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\treturn showRow;\r\n\t\t},\r\n\t\tfindRows: function( table, filters, currentFilters ) {\r\n\t\t\tif (\r\n\t\t\t\ttsf.equalFilters(table.config, table.config.lastSearch, currentFilters) ||\r\n\t\t\t\t!table.config.widgetOptions.filter_initialized\r\n\t\t\t) {\r\n\t\t\t\treturn;\r\n\t\t\t}\r\n\t\t\tvar len, norm_rows, rowData, $rows, $row, rowIndex, tbodyIndex, $tbody, columnIndex,\r\n\t\t\t\tisChild, childRow, lastSearch, showRow, showParent, time, val, indx,\r\n\t\t\t\tnotFiltered, searchFiltered, query, injected, res, id, txt,\r\n\t\t\t\tstoredFilters = $.extend( [], filters ),\r\n\t\t\t\tc = table.config,\r\n\t\t\t\two = c.widgetOptions,\r\n\t\t\t\tdebug = ts.debug(c, 'filter'),\r\n\t\t\t\t// data object passed to filters; anyMatch is a flag for the filters\r\n\t\t\t\tdata = {\r\n\t\t\t\t\tanyMatch: false,\r\n\t\t\t\t\tfilters: filters,\r\n\t\t\t\t\t// regex filter type cache\r\n\t\t\t\t\tfilter_regexCache : []\r\n\t\t\t\t},\r\n\t\t\t\tvars = {\r\n\t\t\t\t\t// anyMatch really screws up with these types of filters\r\n\t\t\t\t\tnoAnyMatch: [ 'range',  'operators' ],\r\n\t\t\t\t\t// cache filter variables that use ts.getColumnData in the main loop\r\n\t\t\t\t\tfunctions : [],\r\n\t\t\t\t\texcludeFilter : [],\r\n\t\t\t\t\tdefaultColFilter : [],\r\n\t\t\t\t\tdefaultAnyFilter : ts.getColumnData( table, wo.filter_defaultFilter, c.columns, true ) || ''\r\n\t\t\t\t};\r\n\t\t\t// parse columns after formatter, in case the class is added at that point\r\n\t\t\tdata.parsed = [];\r\n\t\t\tfor ( columnIndex = 0; columnIndex < c.columns; columnIndex++ ) {\r\n\t\t\t\tdata.parsed[ columnIndex ] = wo.filter_useParsedData ||\r\n\t\t\t\t\t// parser has a \"parsed\" parameter\r\n\t\t\t\t\t( c.parsers && c.parsers[ columnIndex ] && c.parsers[ columnIndex ].parsed ||\r\n\t\t\t\t\t// getData may not return 'parsed' if other 'filter-' class names exist\r\n\t\t\t\t\t// ( e.g. <th class=\"filter-select filter-parsed\"> )\r\n\t\t\t\t\tts.getData && ts.getData( c.$headerIndexed[ columnIndex ],\r\n\t\t\t\t\t\tts.getColumnData( table, c.headers, columnIndex ), 'filter' ) === 'parsed' ||\r\n\t\t\t\t\tc.$headerIndexed[ columnIndex ].hasClass( 'filter-parsed' ) );\r\n\r\n\t\t\t\tvars.functions[ columnIndex ] =\r\n\t\t\t\t\tts.getColumnData( table, wo.filter_functions, columnIndex ) ||\r\n\t\t\t\t\tc.$headerIndexed[ columnIndex ].hasClass( 'filter-select' );\r\n\t\t\t\tvars.defaultColFilter[ columnIndex ] =\r\n\t\t\t\t\tts.getColumnData( table, wo.filter_defaultFilter, columnIndex ) || '';\r\n\t\t\t\tvars.excludeFilter[ columnIndex ] =\r\n\t\t\t\t\t( ts.getColumnData( table, wo.filter_excludeFilter, columnIndex, true ) || '' ).split( /\\s+/ );\r\n\t\t\t}\r\n\r\n\t\t\tif ( debug ) {\r\n\t\t\t\tconsole.log( 'Filter >> Starting filter widget search', filters );\r\n\t\t\t\ttime = new Date();\r\n\t\t\t}\r\n\t\t\t// filtered rows count\r\n\t\t\tc.filteredRows = 0;\r\n\t\t\tc.totalRows = 0;\r\n\t\t\tcurrentFilters = ( storedFilters || [] );\r\n\r\n\t\t\tfor ( tbodyIndex = 0; tbodyIndex < c.$tbodies.length; tbodyIndex++ ) {\r\n\t\t\t\t$tbody = ts.processTbody( table, c.$tbodies.eq( tbodyIndex ), true );\r\n\t\t\t\t// skip child rows & widget added ( removable ) rows - fixes #448 thanks to @hempel!\r\n\t\t\t\t// $rows = $tbody.children( 'tr' ).not( c.selectorRemove );\r\n\t\t\t\tcolumnIndex = c.columns;\r\n\t\t\t\t// convert stored rows into a jQuery object\r\n\t\t\t\tnorm_rows = c.cache[ tbodyIndex ].normalized;\r\n\t\t\t\t$rows = $( $.map( norm_rows, function( el ) {\r\n\t\t\t\t\treturn el[ columnIndex ].$row.get();\r\n\t\t\t\t}) );\r\n\r\n\t\t\t\tif ( currentFilters.join('') === '' || wo.filter_serversideFiltering ) {\r\n\t\t\t\t\t$rows\r\n\t\t\t\t\t\t.removeClass( wo.filter_filteredRow )\r\n\t\t\t\t\t\t.not( '.' + c.cssChildRow )\r\n\t\t\t\t\t\t.css( 'display', '' );\r\n\t\t\t\t} else {\r\n\t\t\t\t\t// filter out child rows\r\n\t\t\t\t\t$rows = $rows.not( '.' + c.cssChildRow );\r\n\t\t\t\t\tlen = $rows.length;\r\n\r\n\t\t\t\t\tif ( ( wo.filter_$anyMatch && wo.filter_$anyMatch.length ) ||\r\n\t\t\t\t\t\ttypeof filters[c.columns] !== 'undefined' ) {\r\n\t\t\t\t\t\tdata.anyMatchFlag = true;\r\n\t\t\t\t\t\tdata.anyMatchFilter = '' + (\r\n\t\t\t\t\t\t\tfilters[ c.columns ] ||\r\n\t\t\t\t\t\t\two.filter_$anyMatch && tsf.getLatestSearch( wo.filter_$anyMatch ).val() ||\r\n\t\t\t\t\t\t\t''\r\n\t\t\t\t\t\t);\r\n\t\t\t\t\t\tif ( wo.filter_columnAnyMatch ) {\r\n\t\t\t\t\t\t\t// specific columns search\r\n\t\t\t\t\t\t\tquery = data.anyMatchFilter.split( tsfRegex.andSplit );\r\n\t\t\t\t\t\t\tinjected = false;\r\n\t\t\t\t\t\t\tfor ( indx = 0; indx < query.length; indx++ ) {\r\n\t\t\t\t\t\t\t\tres = query[ indx ].split( ':' );\r\n\t\t\t\t\t\t\t\tif ( res.length > 1 ) {\r\n\t\t\t\t\t\t\t\t\t// make the column a one-based index ( non-developers start counting from one :P )\r\n\t\t\t\t\t\t\t\t\tif ( isNaN( res[0] ) ) {\r\n\t\t\t\t\t\t\t\t\t\t$.each( c.headerContent, function( i, txt ) {\r\n\t\t\t\t\t\t\t\t\t\t\t// multiple matches are possible\r\n\t\t\t\t\t\t\t\t\t\t\tif ( txt.toLowerCase().indexOf( res[0] ) > -1 ) {\r\n\t\t\t\t\t\t\t\t\t\t\t\tid = i;\r\n\t\t\t\t\t\t\t\t\t\t\t\tfilters[ id ] = res[1];\r\n\t\t\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t\t\t});\r\n\t\t\t\t\t\t\t\t\t} else {\r\n\t\t\t\t\t\t\t\t\t\tid = parseInt( res[0], 10 ) - 1;\r\n\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t\tif ( id >= 0 && id < c.columns ) { // if id is an integer\r\n\t\t\t\t\t\t\t\t\t\tfilters[ id ] = res[1];\r\n\t\t\t\t\t\t\t\t\t\tquery.splice( indx, 1 );\r\n\t\t\t\t\t\t\t\t\t\tindx--;\r\n\t\t\t\t\t\t\t\t\t\tinjected = true;\r\n\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\tif ( injected ) {\r\n\t\t\t\t\t\t\t\tdata.anyMatchFilter = query.join( ' && ' );\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\t// optimize searching only through already filtered rows - see #313\r\n\t\t\t\t\tsearchFiltered = wo.filter_searchFiltered;\r\n\t\t\t\t\tlastSearch = c.lastSearch || c.$table.data( 'lastSearch' ) || [];\r\n\t\t\t\t\tif ( searchFiltered ) {\r\n\t\t\t\t\t\t// cycle through all filters; include last ( columnIndex + 1 = match any column ). Fixes #669\r\n\t\t\t\t\t\tfor ( indx = 0; indx < columnIndex + 1; indx++ ) {\r\n\t\t\t\t\t\t\tval = filters[indx] || '';\r\n\t\t\t\t\t\t\t// break out of loop if we've already determined not to search filtered rows\r\n\t\t\t\t\t\t\tif ( !searchFiltered ) { indx = columnIndex; }\r\n\t\t\t\t\t\t\t// search already filtered rows if...\r\n\t\t\t\t\t\t\tsearchFiltered = searchFiltered && lastSearch.length &&\r\n\t\t\t\t\t\t\t\t// there are no changes from beginning of filter\r\n\t\t\t\t\t\t\t\tval.indexOf( lastSearch[indx] || '' ) === 0 &&\r\n\t\t\t\t\t\t\t\t// if there is NOT a logical 'or', or range ( 'to' or '-' ) in the string\r\n\t\t\t\t\t\t\t\t!tsfRegex.alreadyFiltered.test( val ) &&\r\n\t\t\t\t\t\t\t\t// if we are not doing exact matches, using '|' ( logical or ) or not '!'\r\n\t\t\t\t\t\t\t\t!tsfRegex.exactTest.test( val ) &&\r\n\t\t\t\t\t\t\t\t// don't search only filtered if the value is negative\r\n\t\t\t\t\t\t\t\t// ( '> -10' => '> -100' will ignore hidden rows )\r\n\t\t\t\t\t\t\t\t!( tsfRegex.isNeg1.test( val ) || tsfRegex.isNeg2.test( val ) ) &&\r\n\t\t\t\t\t\t\t\t// if filtering using a select without a 'filter-match' class ( exact match ) - fixes #593\r\n\t\t\t\t\t\t\t\t!( val !== '' && c.$filters && c.$filters.filter( '[data-column=\"' + indx + '\"]' ).find( 'select' ).length &&\r\n\t\t\t\t\t\t\t\t\t!tsf.matchType( c, indx ) );\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\t\t\t\t\tnotFiltered = $rows.not( '.' + wo.filter_filteredRow ).length;\r\n\t\t\t\t\t// can't search when all rows are hidden - this happens when looking for exact matches\r\n\t\t\t\t\tif ( searchFiltered && notFiltered === 0 ) { searchFiltered = false; }\r\n\t\t\t\t\tif ( debug ) {\r\n\t\t\t\t\t\tconsole.log( 'Filter >> Searching through ' +\r\n\t\t\t\t\t\t\t( searchFiltered && notFiltered < len ? notFiltered : 'all' ) + ' rows' );\r\n\t\t\t\t\t}\r\n\t\t\t\t\tif ( data.anyMatchFlag ) {\r\n\t\t\t\t\t\tif ( c.sortLocaleCompare ) {\r\n\t\t\t\t\t\t\t// replace accents\r\n\t\t\t\t\t\t\tdata.anyMatchFilter = ts.replaceAccents( data.anyMatchFilter );\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\tif ( wo.filter_defaultFilter && tsfRegex.iQuery.test( vars.defaultAnyFilter ) ) {\r\n\t\t\t\t\t\t\tdata.anyMatchFilter = tsf.defaultFilter( data.anyMatchFilter, vars.defaultAnyFilter );\r\n\t\t\t\t\t\t\t// clear search filtered flag because default filters are not saved to the last search\r\n\t\t\t\t\t\t\tsearchFiltered = false;\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\t// make iAnyMatchFilter lowercase unless both filter widget & core ignoreCase options are true\r\n\t\t\t\t\t\t// when c.ignoreCase is true, the cache contains all lower case data\r\n\t\t\t\t\t\tdata.iAnyMatchFilter = !( wo.filter_ignoreCase && c.ignoreCase ) ?\r\n\t\t\t\t\t\t\tdata.anyMatchFilter :\r\n\t\t\t\t\t\t\tdata.anyMatchFilter.toLowerCase();\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\t// loop through the rows\r\n\t\t\t\t\tfor ( rowIndex = 0; rowIndex < len; rowIndex++ ) {\r\n\r\n\t\t\t\t\t\ttxt = $rows[ rowIndex ].className;\r\n\t\t\t\t\t\t// the first row can never be a child row\r\n\t\t\t\t\t\tisChild = rowIndex && tsfRegex.child.test( txt );\r\n\t\t\t\t\t\t// skip child rows & already filtered rows\r\n\t\t\t\t\t\tif ( isChild || ( searchFiltered && tsfRegex.filtered.test( txt ) ) ) {\r\n\t\t\t\t\t\t\tcontinue;\r\n\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t\tdata.$row = $rows.eq( rowIndex );\r\n\t\t\t\t\t\tdata.rowIndex = rowIndex;\r\n\t\t\t\t\t\tdata.cacheArray = norm_rows[ rowIndex ];\r\n\t\t\t\t\t\trowData = data.cacheArray[ c.columns ];\r\n\t\t\t\t\t\tdata.rawArray = rowData.raw;\r\n\t\t\t\t\t\tdata.childRowText = '';\r\n\r\n\t\t\t\t\t\tif ( !wo.filter_childByColumn ) {\r\n\t\t\t\t\t\t\ttxt = '';\r\n\t\t\t\t\t\t\t// child row cached text\r\n\t\t\t\t\t\t\tchildRow = rowData.child;\r\n\t\t\t\t\t\t\t// so, if 'table.config.widgetOptions.filter_childRows' is true and there is\r\n\t\t\t\t\t\t\t// a match anywhere in the child row, then it will make the row visible\r\n\t\t\t\t\t\t\t// checked here so the option can be changed dynamically\r\n\t\t\t\t\t\t\tfor ( indx = 0; indx < childRow.length; indx++ ) {\r\n\t\t\t\t\t\t\t\ttxt += ' ' + childRow[indx].join( ' ' ) || '';\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\tdata.childRowText = wo.filter_childRows ?\r\n\t\t\t\t\t\t\t\t( wo.filter_ignoreCase ? txt.toLowerCase() : txt ) :\r\n\t\t\t\t\t\t\t\t'';\r\n\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t\tshowRow = false;\r\n\t\t\t\t\t\tshowParent = tsf.processRow( c, data, vars );\r\n\t\t\t\t\t\t$row = rowData.$row;\r\n\r\n\t\t\t\t\t\t// don't pass reference to val\r\n\t\t\t\t\t\tval = showParent ? true : false;\r\n\t\t\t\t\t\tchildRow = rowData.$row.filter( ':gt(0)' );\r\n\t\t\t\t\t\tif ( wo.filter_childRows && childRow.length ) {\r\n\t\t\t\t\t\t\tif ( wo.filter_childByColumn ) {\r\n\t\t\t\t\t\t\t\tif ( !wo.filter_childWithSibs ) {\r\n\t\t\t\t\t\t\t\t\t// hide all child rows\r\n\t\t\t\t\t\t\t\t\tchildRow.addClass( wo.filter_filteredRow );\r\n\t\t\t\t\t\t\t\t\t// if only showing resulting child row, only include parent\r\n\t\t\t\t\t\t\t\t\t$row = $row.eq( 0 );\r\n\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t// cycle through each child row\r\n\t\t\t\t\t\t\t\tfor ( indx = 0; indx < childRow.length; indx++ ) {\r\n\t\t\t\t\t\t\t\t\tdata.$row = childRow.eq( indx );\r\n\t\t\t\t\t\t\t\t\tdata.cacheArray = rowData.child[ indx ];\r\n\t\t\t\t\t\t\t\t\tdata.rawArray = data.cacheArray;\r\n\t\t\t\t\t\t\t\t\tval = tsf.processRow( c, data, vars );\r\n\t\t\t\t\t\t\t\t\t// use OR comparison on child rows\r\n\t\t\t\t\t\t\t\t\tshowRow = showRow || val;\r\n\t\t\t\t\t\t\t\t\tif ( !wo.filter_childWithSibs && val ) {\r\n\t\t\t\t\t\t\t\t\t\tchildRow.eq( indx ).removeClass( wo.filter_filteredRow );\r\n\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t// keep parent row match even if no child matches... see #1020\r\n\t\t\t\t\t\t\tshowRow = showRow || showParent;\r\n\t\t\t\t\t\t} else {\r\n\t\t\t\t\t\t\tshowRow = val;\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\t$row\r\n\t\t\t\t\t\t\t.toggleClass( wo.filter_filteredRow, !showRow )[0]\r\n\t\t\t\t\t\t\t.display = showRow ? '' : 'none';\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t\tc.filteredRows += $rows.not( '.' + wo.filter_filteredRow ).length;\r\n\t\t\t\tc.totalRows += $rows.length;\r\n\t\t\t\tts.processTbody( table, $tbody, false );\r\n\t\t\t}\r\n\t\t\t// lastCombinedFilter is no longer used internally\r\n\t\t\tc.lastCombinedFilter = storedFilters.join(''); // save last search\r\n\t\t\t// don't save 'filters' directly since it may have altered ( AnyMatch column searches )\r\n\t\t\tc.lastSearch = storedFilters;\r\n\t\t\tc.$table.data( 'lastSearch', storedFilters );\r\n\t\t\tif ( wo.filter_saveFilters && ts.storage ) {\r\n\t\t\t\tts.storage( table, 'tablesorter-filters', tsf.processFilters( storedFilters, true ) );\r\n\t\t\t}\r\n\t\t\tif ( debug ) {\r\n\t\t\t\tconsole.log( 'Filter >> Completed search' + ts.benchmark(time) );\r\n\t\t\t}\r\n\t\t\tif ( wo.filter_initialized ) {\r\n\t\t\t\tc.$table.triggerHandler( 'filterBeforeEnd', c );\r\n\t\t\t\tc.$table.triggerHandler( 'filterEnd', c );\r\n\t\t\t}\r\n\t\t\tsetTimeout( function() {\r\n\t\t\t\tts.applyWidget( c.table ); // make sure zebra widget is applied\r\n\t\t\t}, 0 );\r\n\t\t},\r\n\t\tgetOptionSource: function( table, column, onlyAvail ) {\r\n\t\t\ttable = $( table )[0];\r\n\t\t\tvar c = table.config,\r\n\t\t\t\two = c.widgetOptions,\r\n\t\t\t\tarry = false,\r\n\t\t\t\tsource = wo.filter_selectSource,\r\n\t\t\t\tlast = c.$table.data( 'lastSearch' ) || [],\r\n\t\t\t\tfxn = typeof source === 'function' ? true : ts.getColumnData( table, source, column );\r\n\r\n\t\t\tif ( onlyAvail && last[column] !== '' ) {\r\n\t\t\t\tonlyAvail = false;\r\n\t\t\t}\r\n\r\n\t\t\t// filter select source option\r\n\t\t\tif ( fxn === true ) {\r\n\t\t\t\t// OVERALL source\r\n\t\t\t\tarry = source( table, column, onlyAvail );\r\n\t\t\t} else if ( fxn instanceof $ || ( $.type( fxn ) === 'string' && fxn.indexOf( '</option>' ) >= 0 ) ) {\r\n\t\t\t\t// selectSource is a jQuery object or string of options\r\n\t\t\t\treturn fxn;\r\n\t\t\t} else if ( $.isArray( fxn ) ) {\r\n\t\t\t\tarry = fxn;\r\n\t\t\t} else if ( $.type( source ) === 'object' && fxn ) {\r\n\t\t\t\t// custom select source function for a SPECIFIC COLUMN\r\n\t\t\t\tarry = fxn( table, column, onlyAvail );\r\n\t\t\t\t// abort - updating the selects from an external method\r\n\t\t\t\tif (arry === null) {\r\n\t\t\t\t\treturn null;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\tif ( arry === false ) {\r\n\t\t\t\t// fall back to original method\r\n\t\t\t\tarry = tsf.getOptions( table, column, onlyAvail );\r\n\t\t\t}\r\n\r\n\t\t\treturn tsf.processOptions( table, column, arry );\r\n\r\n\t\t},\r\n\t\tprocessOptions: function( table, column, arry ) {\r\n\t\t\tif ( !$.isArray( arry ) ) {\r\n\t\t\t\treturn false;\r\n\t\t\t}\r\n\t\t\ttable = $( table )[0];\r\n\t\t\tvar cts, txt, indx, len, parsedTxt, str,\r\n\t\t\t\tc = table.config,\r\n\t\t\t\tvalidColumn = typeof column !== 'undefined' && column !== null && column >= 0 && column < c.columns,\r\n\t\t\t\tdirection = validColumn ? c.$headerIndexed[ column ].hasClass( 'filter-select-sort-desc' ) : false,\r\n\t\t\t\tparsed = [];\r\n\t\t\t// get unique elements and sort the list\r\n\t\t\t// if $.tablesorter.sortText exists ( not in the original tablesorter ),\r\n\t\t\t// then natural sort the list otherwise use a basic sort\r\n\t\t\tarry = $.grep( arry, function( value, indx ) {\r\n\t\t\t\tif ( value.text ) {\r\n\t\t\t\t\treturn true;\r\n\t\t\t\t}\r\n\t\t\t\treturn $.inArray( value, arry ) === indx;\r\n\t\t\t});\r\n\t\t\tif ( validColumn && c.$headerIndexed[ column ].hasClass( 'filter-select-nosort' ) ) {\r\n\t\t\t\t// unsorted select options\r\n\t\t\t\treturn arry;\r\n\t\t\t} else {\r\n\t\t\t\tlen = arry.length;\r\n\t\t\t\t// parse select option values\r\n\t\t\t\tfor ( indx = 0; indx < len; indx++ ) {\r\n\t\t\t\t\ttxt = arry[ indx ];\r\n\t\t\t\t\t// check for object\r\n\t\t\t\t\tstr = txt.text ? txt.text : txt;\r\n\t\t\t\t\t// sortNatural breaks if you don't pass it strings\r\n\t\t\t\t\tparsedTxt = ( validColumn && c.parsers && c.parsers.length &&\r\n\t\t\t\t\t\tc.parsers[ column ].format( str, table, [], column ) || str ).toString();\r\n\t\t\t\t\tparsedTxt = c.widgetOptions.filter_ignoreCase ? parsedTxt.toLowerCase() : parsedTxt;\r\n\t\t\t\t\t// parse array data using set column parser; this DOES NOT pass the original\r\n\t\t\t\t\t// table cell to the parser format function\r\n\t\t\t\t\tif ( txt.text ) {\r\n\t\t\t\t\t\ttxt.parsed = parsedTxt;\r\n\t\t\t\t\t\tparsed[ parsed.length ] = txt;\r\n\t\t\t\t\t} else {\r\n\t\t\t\t\t\tparsed[ parsed.length ] = {\r\n\t\t\t\t\t\t\ttext : txt,\r\n\t\t\t\t\t\t\t// check parser length - fixes #934\r\n\t\t\t\t\t\t\tparsed : parsedTxt\r\n\t\t\t\t\t\t};\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t\t// sort parsed select options\r\n\t\t\t\tcts = c.textSorter || '';\r\n\t\t\t\tparsed.sort( function( a, b ) {\r\n\t\t\t\t\tvar x = direction ? b.parsed : a.parsed,\r\n\t\t\t\t\t\ty = direction ? a.parsed : b.parsed;\r\n\t\t\t\t\tif ( validColumn && typeof cts === 'function' ) {\r\n\t\t\t\t\t\t// custom OVERALL text sorter\r\n\t\t\t\t\t\treturn cts( x, y, true, column, table );\r\n\t\t\t\t\t} else if ( validColumn && typeof cts === 'object' && cts.hasOwnProperty( column ) ) {\r\n\t\t\t\t\t\t// custom text sorter for a SPECIFIC COLUMN\r\n\t\t\t\t\t\treturn cts[column]( x, y, true, column, table );\r\n\t\t\t\t\t} else if ( ts.sortNatural ) {\r\n\t\t\t\t\t\t// fall back to natural sort\r\n\t\t\t\t\t\treturn ts.sortNatural( x, y );\r\n\t\t\t\t\t}\r\n\t\t\t\t\t// using an older version! do a basic sort\r\n\t\t\t\t\treturn true;\r\n\t\t\t\t});\r\n\t\t\t\t// rebuild arry from sorted parsed data\r\n\t\t\t\tarry = [];\r\n\t\t\t\tlen = parsed.length;\r\n\t\t\t\tfor ( indx = 0; indx < len; indx++ ) {\r\n\t\t\t\t\tarry[ arry.length ] = parsed[indx];\r\n\t\t\t\t}\r\n\t\t\t\treturn arry;\r\n\t\t\t}\r\n\t\t},\r\n\t\tgetOptions: function( table, column, onlyAvail ) {\r\n\t\t\ttable = $( table )[0];\r\n\t\t\tvar rowIndex, tbodyIndex, len, row, cache, indx, child, childLen,\r\n\t\t\t\tc = table.config,\r\n\t\t\t\two = c.widgetOptions,\r\n\t\t\t\tarry = [];\r\n\t\t\tfor ( tbodyIndex = 0; tbodyIndex < c.$tbodies.length; tbodyIndex++ ) {\r\n\t\t\t\tcache = c.cache[tbodyIndex];\r\n\t\t\t\tlen = c.cache[tbodyIndex].normalized.length;\r\n\t\t\t\t// loop through the rows\r\n\t\t\t\tfor ( rowIndex = 0; rowIndex < len; rowIndex++ ) {\r\n\t\t\t\t\t// get cached row from cache.row ( old ) or row data object\r\n\t\t\t\t\t// ( new; last item in normalized array )\r\n\t\t\t\t\trow = cache.row ?\r\n\t\t\t\t\t\tcache.row[ rowIndex ] :\r\n\t\t\t\t\t\tcache.normalized[ rowIndex ][ c.columns ].$row[0];\r\n\t\t\t\t\t// check if has class filtered\r\n\t\t\t\t\tif ( onlyAvail && row.className.match( wo.filter_filteredRow ) ) {\r\n\t\t\t\t\t\tcontinue;\r\n\t\t\t\t\t}\r\n\t\t\t\t\t// get non-normalized cell content\r\n\t\t\t\t\tif ( wo.filter_useParsedData ||\r\n\t\t\t\t\t\tc.parsers[column].parsed ||\r\n\t\t\t\t\t\tc.$headerIndexed[column].hasClass( 'filter-parsed' ) ) {\r\n\t\t\t\t\t\tarry[ arry.length ] = '' + cache.normalized[ rowIndex ][ column ];\r\n\t\t\t\t\t\t// child row parsed data\r\n\t\t\t\t\t\tif ( wo.filter_childRows && wo.filter_childByColumn ) {\r\n\t\t\t\t\t\t\tchildLen = cache.normalized[ rowIndex ][ c.columns ].$row.length - 1;\r\n\t\t\t\t\t\t\tfor ( indx = 0; indx < childLen; indx++ ) {\r\n\t\t\t\t\t\t\t\tarry[ arry.length ] = '' + cache.normalized[ rowIndex ][ c.columns ].child[ indx ][ column ];\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t} else {\r\n\t\t\t\t\t\t// get raw cached data instead of content directly from the cells\r\n\t\t\t\t\t\tarry[ arry.length ] = cache.normalized[ rowIndex ][ c.columns ].raw[ column ];\r\n\t\t\t\t\t\t// child row unparsed data\r\n\t\t\t\t\t\tif ( wo.filter_childRows && wo.filter_childByColumn ) {\r\n\t\t\t\t\t\t\tchildLen = cache.normalized[ rowIndex ][ c.columns ].$row.length;\r\n\t\t\t\t\t\t\tfor ( indx = 1; indx < childLen; indx++ ) {\r\n\t\t\t\t\t\t\t\tchild =  cache.normalized[ rowIndex ][ c.columns ].$row.eq( indx ).children().eq( column );\r\n\t\t\t\t\t\t\t\tarry[ arry.length ] = '' + ts.getElementText( c, child, column );\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\treturn arry;\r\n\t\t},\r\n\t\tbuildSelect: function( table, column, arry, updating, onlyAvail ) {\r\n\t\t\ttable = $( table )[0];\r\n\t\t\tcolumn = parseInt( column, 10 );\r\n\t\t\tif ( !table.config.cache || $.isEmptyObject( table.config.cache ) ) {\r\n\t\t\t\treturn;\r\n\t\t\t}\r\n\r\n\t\t\tvar indx, val, txt, t, $filters, $filter, option,\r\n\t\t\t\tc = table.config,\r\n\t\t\t\two = c.widgetOptions,\r\n\t\t\t\tnode = c.$headerIndexed[ column ],\r\n\t\t\t\t// t.data( 'placeholder' ) won't work in jQuery older than 1.4.3\r\n\t\t\t\toptions = '<option value=\"\">' +\r\n\t\t\t\t\t( node.data( 'placeholder' ) ||\r\n\t\t\t\t\t\tnode.attr( 'data-placeholder' ) ||\r\n\t\t\t\t\t\two.filter_placeholder.select || ''\r\n\t\t\t\t\t) + '</option>',\r\n\t\t\t\t// Get curent filter value\r\n\t\t\t\tcurrentValue = c.$table\r\n\t\t\t\t\t.find( 'thead' )\r\n\t\t\t\t\t.find( 'select.' + tscss.filter + '[data-column=\"' + column + '\"]' )\r\n\t\t\t\t\t.val();\r\n\r\n\t\t\t// nothing included in arry ( external source ), so get the options from\r\n\t\t\t// filter_selectSource or column data\r\n\t\t\tif ( typeof arry === 'undefined' || arry === '' ) {\r\n\t\t\t\tarry = tsf.getOptionSource( table, column, onlyAvail );\r\n\t\t\t\t// abort, selects are updated by an external method\r\n\t\t\t\tif (arry === null) {\r\n\t\t\t\t\treturn;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t\tif ( $.isArray( arry ) ) {\r\n\t\t\t\t// build option list\r\n\t\t\t\tfor ( indx = 0; indx < arry.length; indx++ ) {\r\n\t\t\t\t\toption = arry[ indx ];\r\n\t\t\t\t\tif ( option.text ) {\r\n\t\t\t\t\t\t// OBJECT!! add data-function-name in case the value is set in filter_functions\r\n\t\t\t\t\t\toption['data-function-name'] = typeof option.value === 'undefined' ? option.text : option.value;\r\n\r\n\t\t\t\t\t\t// support jQuery < v1.8, otherwise the below code could be shortened to\r\n\t\t\t\t\t\t// options += $( '<option>', option )[ 0 ].outerHTML;\r\n\t\t\t\t\t\toptions += '<option';\r\n\t\t\t\t\t\tfor ( val in option ) {\r\n\t\t\t\t\t\t\tif ( option.hasOwnProperty( val ) && val !== 'text' ) {\r\n\t\t\t\t\t\t\t\toptions += ' ' + val + '=\"' + option[ val ].replace( tsfRegex.quote, '&quot;' ) + '\"';\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\tif ( !option.value ) {\r\n\t\t\t\t\t\t\toptions += ' value=\"' + option.text.replace( tsfRegex.quote, '&quot;' ) + '\"';\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\toptions += '>' + option.text.replace( tsfRegex.quote, '&quot;' ) + '</option>';\r\n\t\t\t\t\t\t// above code is needed in jQuery < v1.8\r\n\r\n\t\t\t\t\t\t// make sure we don't turn an object into a string (objects without a \"text\" property)\r\n\t\t\t\t\t} else if ( '' + option !== '[object Object]' ) {\r\n\t\t\t\t\t\ttxt = option = ( '' + option ).replace( tsfRegex.quote, '&quot;' );\r\n\t\t\t\t\t\tval = txt;\r\n\t\t\t\t\t\t// allow including a symbol in the selectSource array\r\n\t\t\t\t\t\t// 'a-z|A through Z' so that 'a-z' becomes the option value\r\n\t\t\t\t\t\t// and 'A through Z' becomes the option text\r\n\t\t\t\t\t\tif ( txt.indexOf( wo.filter_selectSourceSeparator ) >= 0 ) {\r\n\t\t\t\t\t\t\tt = txt.split( wo.filter_selectSourceSeparator );\r\n\t\t\t\t\t\t\tval = t[0];\r\n\t\t\t\t\t\t\ttxt = t[1];\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\t// replace quotes - fixes #242 & ignore empty strings\r\n\t\t\t\t\t\t// see http://stackoverflow.com/q/14990971/145346\r\n\t\t\t\t\t\toptions += option !== '' ?\r\n\t\t\t\t\t\t\t'<option ' +\r\n\t\t\t\t\t\t\t\t( val === txt ? '' : 'data-function-name=\"' + option + '\" ' ) +\r\n\t\t\t\t\t\t\t\t'value=\"' + val + '\">' + txt +\r\n\t\t\t\t\t\t\t'</option>' : '';\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t\t// clear arry so it doesn't get appended twice\r\n\t\t\t\tarry = [];\r\n\t\t\t}\r\n\r\n\t\t\t// update all selects in the same column ( clone thead in sticky headers &\r\n\t\t\t// any external selects ) - fixes 473\r\n\t\t\t$filters = ( c.$filters ? c.$filters : c.$table.children( 'thead' ) )\r\n\t\t\t\t.find( '.' + tscss.filter );\r\n\t\t\tif ( wo.filter_$externalFilters ) {\r\n\t\t\t\t$filters = $filters && $filters.length ?\r\n\t\t\t\t\t$filters.add( wo.filter_$externalFilters ) :\r\n\t\t\t\t\two.filter_$externalFilters;\r\n\t\t\t}\r\n\t\t\t$filter = $filters.filter( 'select[data-column=\"' + column + '\"]' );\r\n\r\n\t\t\t// make sure there is a select there!\r\n\t\t\tif ( $filter.length ) {\r\n\t\t\t\t$filter[ updating ? 'html' : 'append' ]( options );\r\n\t\t\t\tif ( !$.isArray( arry ) ) {\r\n\t\t\t\t\t// append options if arry is provided externally as a string or jQuery object\r\n\t\t\t\t\t// options ( default value ) was already added\r\n\t\t\t\t\t$filter.append( arry ).val( currentValue );\r\n\t\t\t\t}\r\n\t\t\t\t$filter.val( currentValue );\r\n\t\t\t}\r\n\t\t},\r\n\t\tbuildDefault: function( table, updating ) {\r\n\t\t\tvar columnIndex, $header, noSelect,\r\n\t\t\t\tc = table.config,\r\n\t\t\t\two = c.widgetOptions,\r\n\t\t\t\tcolumns = c.columns;\r\n\t\t\t// build default select dropdown\r\n\t\t\tfor ( columnIndex = 0; columnIndex < columns; columnIndex++ ) {\r\n\t\t\t\t$header = c.$headerIndexed[columnIndex];\r\n\t\t\t\tnoSelect = !( $header.hasClass( 'filter-false' ) || $header.hasClass( 'parser-false' ) );\r\n\t\t\t\t// look for the filter-select class; build/update it if found\r\n\t\t\t\tif ( ( $header.hasClass( 'filter-select' ) ||\r\n\t\t\t\t\tts.getColumnData( table, wo.filter_functions, columnIndex ) === true ) && noSelect ) {\r\n\t\t\t\t\ttsf.buildSelect( table, columnIndex, '', updating, $header.hasClass( wo.filter_onlyAvail ) );\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\t};\r\n\r\n\t// filter regex variable\r\n\ttsfRegex = tsf.regex;\r\n\r\n\tts.getFilters = function( table, getRaw, setFilters, skipFirst ) {\r\n\t\tvar i, $filters, $column, cols,\r\n\t\t\tfilters = [],\r\n\t\t\tc = table ? $( table )[0].config : '',\r\n\t\t\two = c ? c.widgetOptions : '';\r\n\t\tif ( ( getRaw !== true && wo && !wo.filter_columnFilters ) ||\r\n\t\t\t// setFilters called, but last search is exactly the same as the current\r\n\t\t\t// fixes issue #733 & #903 where calling update causes the input values to reset\r\n\t\t\t( $.isArray(setFilters) && tsf.equalFilters(c, setFilters, c.lastSearch) )\r\n\t\t) {\r\n\t\t\treturn $( table ).data( 'lastSearch' ) || [];\r\n\t\t}\r\n\t\tif ( c ) {\r\n\t\t\tif ( c.$filters ) {\r\n\t\t\t\t$filters = c.$filters.find( '.' + tscss.filter );\r\n\t\t\t}\r\n\t\t\tif ( wo.filter_$externalFilters ) {\r\n\t\t\t\t$filters = $filters && $filters.length ?\r\n\t\t\t\t\t$filters.add( wo.filter_$externalFilters ) :\r\n\t\t\t\t\two.filter_$externalFilters;\r\n\t\t\t}\r\n\t\t\tif ( $filters && $filters.length ) {\r\n\t\t\t\tfilters = setFilters || [];\r\n\t\t\t\tfor ( i = 0; i < c.columns + 1; i++ ) {\r\n\t\t\t\t\tcols = ( i === c.columns ?\r\n\t\t\t\t\t\t// 'all' columns can now include a range or set of columms ( data-column='0-2,4,6-7' )\r\n\t\t\t\t\t\two.filter_anyColumnSelector + ',' + wo.filter_multipleColumnSelector :\r\n\t\t\t\t\t\t'[data-column=\"' + i + '\"]' );\r\n\t\t\t\t\t$column = $filters.filter( cols );\r\n\t\t\t\t\tif ( $column.length ) {\r\n\t\t\t\t\t\t// move the latest search to the first slot in the array\r\n\t\t\t\t\t\t$column = tsf.getLatestSearch( $column );\r\n\t\t\t\t\t\tif ( $.isArray( setFilters ) ) {\r\n\t\t\t\t\t\t\t// skip first ( latest input ) to maintain cursor position while typing\r\n\t\t\t\t\t\t\tif ( skipFirst && $column.length > 1 ) {\r\n\t\t\t\t\t\t\t\t$column = $column.slice( 1 );\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\tif ( i === c.columns ) {\r\n\t\t\t\t\t\t\t\t// prevent data-column='all' from filling data-column='0,1' ( etc )\r\n\t\t\t\t\t\t\t\tcols = $column.filter( wo.filter_anyColumnSelector );\r\n\t\t\t\t\t\t\t\t$column = cols.length ? cols : $column;\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t$column\r\n\t\t\t\t\t\t\t\t.val( setFilters[ i ] )\r\n\t\t\t\t\t\t\t\t// must include a namespace here; but not c.namespace + 'filter'?\r\n\t\t\t\t\t\t\t\t.trigger( 'change' + c.namespace );\r\n\t\t\t\t\t\t} else {\r\n\t\t\t\t\t\t\tfilters[i] = $column.val() || '';\r\n\t\t\t\t\t\t\t// don't change the first... it will move the cursor\r\n\t\t\t\t\t\t\tif ( i === c.columns ) {\r\n\t\t\t\t\t\t\t\t// don't update range columns from 'all' setting\r\n\t\t\t\t\t\t\t\t$column\r\n\t\t\t\t\t\t\t\t\t.slice( 1 )\r\n\t\t\t\t\t\t\t\t\t.filter( '[data-column*=\"' + $column.attr( 'data-column' ) + '\"]' )\r\n\t\t\t\t\t\t\t\t\t.val( filters[ i ] );\r\n\t\t\t\t\t\t\t} else {\r\n\t\t\t\t\t\t\t\t$column\r\n\t\t\t\t\t\t\t\t\t.slice( 1 )\r\n\t\t\t\t\t\t\t\t\t.val( filters[ i ] );\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\t// save any match input dynamically\r\n\t\t\t\t\t\tif ( i === c.columns && $column.length ) {\r\n\t\t\t\t\t\t\two.filter_$anyMatch = $column;\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\t\treturn filters;\r\n\t};\r\n\r\n\tts.setFilters = function( table, filter, apply, skipFirst ) {\r\n\t\tvar c = table ? $( table )[0].config : '',\r\n\t\t\tvalid = ts.getFilters( table, true, filter, skipFirst );\r\n\t\t// default apply to \"true\"\r\n\t\tif ( typeof apply === 'undefined' ) {\r\n\t\t\tapply = true;\r\n\t\t}\r\n\t\tif ( c && apply ) {\r\n\t\t\t// ensure new set filters are applied, even if the search is the same\r\n\t\t\tc.lastCombinedFilter = null;\r\n\t\t\tc.lastSearch = [];\r\n\t\t\ttsf.searching( c.table, filter, skipFirst );\r\n\t\t\tc.$table.triggerHandler( 'filterFomatterUpdate' );\r\n\t\t}\r\n\t\treturn valid.length !== 0;\r\n\t};\r\n\r\n})( jQuery );\r\n\r\n/*! Widget: stickyHeaders - updated 9/27/2017 (v2.29.0) *//*\r\n * Requires tablesorter v2.8+ and jQuery 1.4.3+\r\n * by Rob Garrison\r\n */\r\n;(function ($, window) {\r\n\t'use strict';\r\n\tvar ts = $.tablesorter || {};\r\n\r\n\t$.extend(ts.css, {\r\n\t\tsticky    : 'tablesorter-stickyHeader', // stickyHeader\r\n\t\tstickyVis : 'tablesorter-sticky-visible',\r\n\t\tstickyHide: 'tablesorter-sticky-hidden',\r\n\t\tstickyWrap: 'tablesorter-sticky-wrapper'\r\n\t});\r\n\r\n\t// Add a resize event to table headers\r\n\tts.addHeaderResizeEvent = function(table, disable, settings) {\r\n\t\ttable = $(table)[0]; // make sure we're using a dom element\r\n\t\tif ( !table.config ) { return; }\r\n\t\tvar defaults = {\r\n\t\t\t\ttimer : 250\r\n\t\t\t},\r\n\t\t\toptions = $.extend({}, defaults, settings),\r\n\t\t\tc = table.config,\r\n\t\t\two = c.widgetOptions,\r\n\t\t\tcheckSizes = function( triggerEvent ) {\r\n\t\t\t\tvar index, headers, $header, sizes, width, height,\r\n\t\t\t\t\tlen = c.$headers.length;\r\n\t\t\t\two.resize_flag = true;\r\n\t\t\t\theaders = [];\r\n\t\t\t\tfor ( index = 0; index < len; index++ ) {\r\n\t\t\t\t\t$header = c.$headers.eq( index );\r\n\t\t\t\t\tsizes = $header.data( 'savedSizes' ) || [ 0, 0 ]; // fixes #394\r\n\t\t\t\t\twidth = $header[0].offsetWidth;\r\n\t\t\t\t\theight = $header[0].offsetHeight;\r\n\t\t\t\t\tif ( width !== sizes[0] || height !== sizes[1] ) {\r\n\t\t\t\t\t\t$header.data( 'savedSizes', [ width, height ] );\r\n\t\t\t\t\t\theaders.push( $header[0] );\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t\tif ( headers.length && triggerEvent !== false ) {\r\n\t\t\t\t\tc.$table.triggerHandler( 'resize', [ headers ] );\r\n\t\t\t\t}\r\n\t\t\t\two.resize_flag = false;\r\n\t\t\t};\r\n\t\tclearInterval(wo.resize_timer);\r\n\t\tif (disable) {\r\n\t\t\two.resize_flag = false;\r\n\t\t\treturn false;\r\n\t\t}\r\n\t\tcheckSizes( false );\r\n\t\two.resize_timer = setInterval(function() {\r\n\t\t\tif (wo.resize_flag) { return; }\r\n\t\t\tcheckSizes();\r\n\t\t}, options.timer);\r\n\t};\r\n\r\n\tfunction getStickyOffset(c, wo) {\r\n\t\tvar $el = isNaN(wo.stickyHeaders_offset) ? $(wo.stickyHeaders_offset) : [];\r\n\t\treturn $el.length ?\r\n\t\t\t$el.height() || 0 :\r\n\t\t\tparseInt(wo.stickyHeaders_offset, 10) || 0;\r\n\t}\r\n\r\n\t// Sticky headers based on this awesome article:\r\n\t// http://css-tricks.com/13465-persistent-headers/\r\n\t// and https://github.com/jmosbech/StickyTableHeaders by Jonas Mosbech\r\n\t// **************************\r\n\tts.addWidget({\r\n\t\tid: 'stickyHeaders',\r\n\t\tpriority: 54, // sticky widget must be initialized after the filter & before pager widget!\r\n\t\toptions: {\r\n\t\t\tstickyHeaders : '',       // extra class name added to the sticky header row\r\n\t\t\tstickyHeaders_appendTo : null, // jQuery selector or object to phycially attach the sticky headers\r\n\t\t\tstickyHeaders_attachTo : null, // jQuery selector or object to attach scroll listener to (overridden by xScroll & yScroll settings)\r\n\t\t\tstickyHeaders_xScroll : null, // jQuery selector or object to monitor horizontal scroll position (defaults: xScroll > attachTo > window)\r\n\t\t\tstickyHeaders_yScroll : null, // jQuery selector or object to monitor vertical scroll position (defaults: yScroll > attachTo > window)\r\n\t\t\tstickyHeaders_offset : 0, // number or jquery selector targeting the position:fixed element\r\n\t\t\tstickyHeaders_filteredToTop: true, // scroll table top into view after filtering\r\n\t\t\tstickyHeaders_cloneId : '-sticky', // added to table ID, if it exists\r\n\t\t\tstickyHeaders_addResizeEvent : true, // trigger 'resize' event on headers\r\n\t\t\tstickyHeaders_includeCaption : true, // if false and a caption exist, it won't be included in the sticky header\r\n\t\t\tstickyHeaders_zIndex : 2 // The zIndex of the stickyHeaders, allows the user to adjust this to their needs\r\n\t\t},\r\n\t\tformat: function(table, c, wo) {\r\n\t\t\t// filter widget doesn't initialize on an empty table. Fixes #449\r\n\t\t\tif ( c.$table.hasClass('hasStickyHeaders') || ($.inArray('filter', c.widgets) >= 0 && !c.$table.hasClass('hasFilters')) ) {\r\n\t\t\t\treturn;\r\n\t\t\t}\r\n\t\t\tvar index, len, $t,\r\n\t\t\t\t$table = c.$table,\r\n\t\t\t\t// add position: relative to attach element, hopefully it won't cause trouble.\r\n\t\t\t\t$attach = $(wo.stickyHeaders_attachTo || wo.stickyHeaders_appendTo),\r\n\t\t\t\tnamespace = c.namespace + 'stickyheaders ',\r\n\t\t\t\t// element to watch for the scroll event\r\n\t\t\t\t$yScroll = $(wo.stickyHeaders_yScroll || wo.stickyHeaders_attachTo || window),\r\n\t\t\t\t$xScroll = $(wo.stickyHeaders_xScroll || wo.stickyHeaders_attachTo || window),\r\n\t\t\t\t$thead = $table.children('thead:first'),\r\n\t\t\t\t$header = $thead.children('tr').not('.sticky-false').children(),\r\n\t\t\t\t$tfoot = $table.children('tfoot'),\r\n\t\t\t\tstickyOffset = getStickyOffset(c, wo),\r\n\t\t\t\t// is this table nested? If so, find parent sticky header wrapper (div, not table)\r\n\t\t\t\t$nestedSticky = $table.parent().closest('.' + ts.css.table).hasClass('hasStickyHeaders') ?\r\n\t\t\t\t\t$table.parent().closest('table.tablesorter')[0].config.widgetOptions.$sticky.parent() : [],\r\n\t\t\t\tnestedStickyTop = $nestedSticky.length ? $nestedSticky.height() : 0,\r\n\t\t\t\t// clone table, then wrap to make sticky header\r\n\t\t\t\t$stickyTable = wo.$sticky = $table.clone()\r\n\t\t\t\t\t.addClass('containsStickyHeaders ' + ts.css.sticky + ' ' + wo.stickyHeaders + ' ' + c.namespace.slice(1) + '_extra_table' )\r\n\t\t\t\t\t.wrap('<div class=\"' + ts.css.stickyWrap + '\">'),\r\n\t\t\t\t$stickyWrap = $stickyTable.parent()\r\n\t\t\t\t\t.addClass(ts.css.stickyHide)\r\n\t\t\t\t\t.css({\r\n\t\t\t\t\t\tposition   : $attach.length ? 'absolute' : 'fixed',\r\n\t\t\t\t\t\tpadding    : parseInt( $stickyTable.parent().parent().css('padding-left'), 10 ),\r\n\t\t\t\t\t\ttop        : stickyOffset + nestedStickyTop,\r\n\t\t\t\t\t\tleft       : 0,\r\n\t\t\t\t\t\tvisibility : 'hidden',\r\n\t\t\t\t\t\tzIndex     : wo.stickyHeaders_zIndex || 2\r\n\t\t\t\t\t}),\r\n\t\t\t\t$stickyThead = $stickyTable.children('thead:first'),\r\n\t\t\t\t$stickyCells,\r\n\t\t\t\tlaststate = '',\r\n\t\t\t\tsetWidth = function($orig, $clone) {\r\n\t\t\t\t\tvar index, width, border, $cell, $this,\r\n\t\t\t\t\t\t$cells = $orig.filter(':visible'),\r\n\t\t\t\t\t\tlen = $cells.length;\r\n\t\t\t\t\tfor ( index = 0; index < len; index++ ) {\r\n\t\t\t\t\t\t$cell = $clone.filter(':visible').eq(index);\r\n\t\t\t\t\t\t$this = $cells.eq(index);\r\n\t\t\t\t\t\t// code from https://github.com/jmosbech/StickyTableHeaders\r\n\t\t\t\t\t\tif ($this.css('box-sizing') === 'border-box') {\r\n\t\t\t\t\t\t\twidth = $this.outerWidth();\r\n\t\t\t\t\t\t} else {\r\n\t\t\t\t\t\t\tif ($cell.css('border-collapse') === 'collapse') {\r\n\t\t\t\t\t\t\t\tif (window.getComputedStyle) {\r\n\t\t\t\t\t\t\t\t\twidth = parseFloat( window.getComputedStyle($this[0], null).width );\r\n\t\t\t\t\t\t\t\t} else {\r\n\t\t\t\t\t\t\t\t\t// ie8 only\r\n\t\t\t\t\t\t\t\t\tborder = parseFloat( $this.css('border-width') );\r\n\t\t\t\t\t\t\t\t\twidth = $this.outerWidth() - parseFloat( $this.css('padding-left') ) - parseFloat( $this.css('padding-right') ) - border;\r\n\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t} else {\r\n\t\t\t\t\t\t\t\twidth = $this.width();\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\t$cell.css({\r\n\t\t\t\t\t\t\t'width': width,\r\n\t\t\t\t\t\t\t'min-width': width,\r\n\t\t\t\t\t\t\t'max-width': width\r\n\t\t\t\t\t\t});\r\n\t\t\t\t\t}\r\n\t\t\t\t},\r\n\t\t\t\tgetLeftPosition = function(yWindow) {\r\n\t\t\t\t\tif (yWindow === false && $nestedSticky.length) {\r\n\t\t\t\t\t\treturn $table.position().left;\r\n\t\t\t\t\t}\r\n\t\t\t\t\treturn $attach.length ?\r\n\t\t\t\t\t\tparseInt($attach.css('padding-left'), 10) || 0 :\r\n\t\t\t\t\t\t$table.offset().left - parseInt($table.css('margin-left'), 10) - $(window).scrollLeft();\r\n\t\t\t\t},\r\n\t\t\t\tresizeHeader = function() {\r\n\t\t\t\t\t$stickyWrap.css({\r\n\t\t\t\t\t\tleft : getLeftPosition(),\r\n\t\t\t\t\t\twidth: $table.outerWidth()\r\n\t\t\t\t\t});\r\n\t\t\t\t\tsetWidth( $table, $stickyTable );\r\n\t\t\t\t\tsetWidth( $header, $stickyCells );\r\n\t\t\t\t},\r\n\t\t\t\tscrollSticky = function( resizing ) {\r\n\t\t\t\t\tif (!$table.is(':visible')) { return; } // fixes #278\r\n\t\t\t\t\t// Detect nested tables - fixes #724\r\n\t\t\t\t\tnestedStickyTop = $nestedSticky.length ? $nestedSticky.offset().top - $yScroll.scrollTop() + $nestedSticky.height() : 0;\r\n\t\t\t\t\tvar tmp,\r\n\t\t\t\t\t\toffset = $table.offset(),\r\n\t\t\t\t\t\tstickyOffset = getStickyOffset(c, wo),\r\n\t\t\t\t\t\tyWindow = $.isWindow( $yScroll[0] ), // $.isWindow needs jQuery 1.4.3\r\n\t\t\t\t\t\tyScroll = yWindow ?\r\n\t\t\t\t\t\t\t$yScroll.scrollTop() :\r\n\t\t\t\t\t\t\t// use parent sticky position if nested AND inside of a scrollable element - see #1512\r\n\t\t\t\t\t\t\t$nestedSticky.length ? parseInt($nestedSticky[0].style.top, 10) : $yScroll.offset().top,\r\n\t\t\t\t\t\tattachTop = $attach.length ? yScroll : $yScroll.scrollTop(),\r\n\t\t\t\t\t\tcaptionHeight = wo.stickyHeaders_includeCaption ? 0 : $table.children( 'caption' ).height() || 0,\r\n\t\t\t\t\t\tscrollTop = attachTop + stickyOffset + nestedStickyTop - captionHeight,\r\n\t\t\t\t\t\ttableHeight = $table.height() - ($stickyWrap.height() + ($tfoot.height() || 0)) - captionHeight,\r\n\t\t\t\t\t\tisVisible = ( scrollTop > offset.top ) && ( scrollTop < offset.top + tableHeight ) ? 'visible' : 'hidden',\r\n\t\t\t\t\t\tstate = isVisible === 'visible' ? ts.css.stickyVis : ts.css.stickyHide,\r\n\t\t\t\t\t\tneedsUpdating = !$stickyWrap.hasClass( state ),\r\n\t\t\t\t\t\tcssSettings = { visibility : isVisible };\r\n\t\t\t\t\tif ($attach.length) {\r\n\t\t\t\t\t\t// attached sticky headers always need updating\r\n\t\t\t\t\t\tneedsUpdating = true;\r\n\t\t\t\t\t\tcssSettings.top = yWindow ? scrollTop - $attach.offset().top : $attach.scrollTop();\r\n\t\t\t\t\t}\r\n\t\t\t\t\t// adjust when scrolling horizontally - fixes issue #143\r\n\t\t\t\t\ttmp = getLeftPosition(yWindow);\r\n\t\t\t\t\tif (tmp !== parseInt($stickyWrap.css('left'), 10)) {\r\n\t\t\t\t\t\tneedsUpdating = true;\r\n\t\t\t\t\t\tcssSettings.left = tmp;\r\n\t\t\t\t\t}\r\n\t\t\t\t\tcssSettings.top = ( cssSettings.top || 0 ) +\r\n\t\t\t\t\t\t// If nested AND inside of a scrollable element, only add parent sticky height\r\n\t\t\t\t\t\t(!yWindow && $nestedSticky.length ? $nestedSticky.height() : stickyOffset + nestedStickyTop);\r\n\t\t\t\t\tif (needsUpdating) {\r\n\t\t\t\t\t\t$stickyWrap\r\n\t\t\t\t\t\t\t.removeClass( ts.css.stickyVis + ' ' + ts.css.stickyHide )\r\n\t\t\t\t\t\t\t.addClass( state )\r\n\t\t\t\t\t\t\t.css(cssSettings);\r\n\t\t\t\t\t}\r\n\t\t\t\t\tif (isVisible !== laststate || resizing) {\r\n\t\t\t\t\t\t// make sure the column widths match\r\n\t\t\t\t\t\tresizeHeader();\r\n\t\t\t\t\t\tlaststate = isVisible;\r\n\t\t\t\t\t}\r\n\t\t\t\t};\r\n\t\t\t// only add a position relative if a position isn't already defined\r\n\t\t\tif ($attach.length && !$attach.css('position')) {\r\n\t\t\t\t$attach.css('position', 'relative');\r\n\t\t\t}\r\n\t\t\t// fix clone ID, if it exists - fixes #271\r\n\t\t\tif ($stickyTable.attr('id')) { $stickyTable[0].id += wo.stickyHeaders_cloneId; }\r\n\t\t\t// clear out cloned table, except for sticky header\r\n\t\t\t// include caption & filter row (fixes #126 & #249) - don't remove cells to get correct cell indexing\r\n\t\t\t$stickyTable.find('> thead:gt(0), tr.sticky-false').hide();\r\n\t\t\t$stickyTable.find('> tbody, > tfoot').remove();\r\n\t\t\t$stickyTable.find('caption').toggle(wo.stickyHeaders_includeCaption);\r\n\t\t\t// issue #172 - find td/th in sticky header\r\n\t\t\t$stickyCells = $stickyThead.children().children();\r\n\t\t\t$stickyTable.css({ height:0, width:0, margin: 0 });\r\n\t\t\t// remove resizable block\r\n\t\t\t$stickyCells.find('.' + ts.css.resizer).remove();\r\n\t\t\t// update sticky header class names to match real header after sorting\r\n\t\t\t$table\r\n\t\t\t\t.addClass('hasStickyHeaders')\r\n\t\t\t\t.bind('pagerComplete' + namespace, function() {\r\n\t\t\t\t\tresizeHeader();\r\n\t\t\t\t});\r\n\r\n\t\t\tts.bindEvents(table, $stickyThead.children().children('.' + ts.css.header));\r\n\r\n\t\t\tif (wo.stickyHeaders_appendTo) {\r\n\t\t\t\t$(wo.stickyHeaders_appendTo).append( $stickyWrap );\r\n\t\t\t} else {\r\n\t\t\t\t// add stickyheaders AFTER the table. If the table is selected by ID, the original one (first) will be returned.\r\n\t\t\t\t$table.after( $stickyWrap );\r\n\t\t\t}\r\n\r\n\t\t\t// onRenderHeader is defined, we need to do something about it (fixes #641)\r\n\t\t\tif (c.onRenderHeader) {\r\n\t\t\t\t$t = $stickyThead.children('tr').children();\r\n\t\t\t\tlen = $t.length;\r\n\t\t\t\tfor ( index = 0; index < len; index++ ) {\r\n\t\t\t\t\t// send second parameter\r\n\t\t\t\t\tc.onRenderHeader.apply( $t.eq( index ), [ index, c, $stickyTable ] );\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\t// make it sticky!\r\n\t\t\t$xScroll.add($yScroll)\r\n\t\t\t\t.unbind( ('scroll resize '.split(' ').join( namespace )).replace(/\\s+/g, ' ') )\r\n\t\t\t\t.bind('scroll resize '.split(' ').join( namespace ), function( event ) {\r\n\t\t\t\t\tscrollSticky( event.type === 'resize' );\r\n\t\t\t\t});\r\n\t\t\tc.$table\r\n\t\t\t\t.unbind('stickyHeadersUpdate' + namespace)\r\n\t\t\t\t.bind('stickyHeadersUpdate' + namespace, function() {\r\n\t\t\t\t\tscrollSticky( true );\r\n\t\t\t\t});\r\n\r\n\t\t\tif (wo.stickyHeaders_addResizeEvent) {\r\n\t\t\t\tts.addHeaderResizeEvent(table);\r\n\t\t\t}\r\n\r\n\t\t\t// look for filter widget\r\n\t\t\tif ($table.hasClass('hasFilters') && wo.filter_columnFilters) {\r\n\t\t\t\t// scroll table into view after filtering, if sticky header is active - #482\r\n\t\t\t\t$table.bind('filterEnd' + namespace, function() {\r\n\t\t\t\t\t// $(':focus') needs jQuery 1.6+\r\n\t\t\t\t\tvar $td = $(document.activeElement).closest('td'),\r\n\t\t\t\t\t\tcolumn = $td.parent().children().index($td);\r\n\t\t\t\t\t// only scroll if sticky header is active\r\n\t\t\t\t\tif ($stickyWrap.hasClass(ts.css.stickyVis) && wo.stickyHeaders_filteredToTop) {\r\n\t\t\t\t\t\t// scroll to original table (not sticky clone)\r\n\t\t\t\t\t\twindow.scrollTo(0, $table.position().top);\r\n\t\t\t\t\t\t// give same input/select focus; check if c.$filters exists; fixes #594\r\n\t\t\t\t\t\tif (column >= 0 && c.$filters) {\r\n\t\t\t\t\t\t\tc.$filters.eq(column).find('a, select, input').filter(':visible').focus();\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\t\t\t\t});\r\n\t\t\t\tts.filter.bindSearch( $table, $stickyCells.find('.' + ts.css.filter) );\r\n\t\t\t\t// support hideFilters\r\n\t\t\t\tif (wo.filter_hideFilters) {\r\n\t\t\t\t\tts.filter.hideFilters(c, $stickyTable);\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t\t// resize table (Firefox)\r\n\t\t\tif (wo.stickyHeaders_addResizeEvent) {\r\n\t\t\t\t$table.bind('resize' + c.namespace + 'stickyheaders', function() {\r\n\t\t\t\t\tresizeHeader();\r\n\t\t\t\t});\r\n\t\t\t}\r\n\r\n\t\t\t// make sure sticky is visible if page is partially scrolled\r\n\t\t\tscrollSticky( true );\r\n\t\t\t$table.triggerHandler('stickyHeadersInit');\r\n\r\n\t\t},\r\n\t\tremove: function(table, c, wo) {\r\n\t\t\tvar namespace = c.namespace + 'stickyheaders ';\r\n\t\t\tc.$table\r\n\t\t\t\t.removeClass('hasStickyHeaders')\r\n\t\t\t\t.unbind( ('pagerComplete resize filterEnd stickyHeadersUpdate '.split(' ').join(namespace)).replace(/\\s+/g, ' ') )\r\n\t\t\t\t.next('.' + ts.css.stickyWrap).remove();\r\n\t\t\tif (wo.$sticky && wo.$sticky.length) { wo.$sticky.remove(); } // remove cloned table\r\n\t\t\t$(window)\r\n\t\t\t\t.add(wo.stickyHeaders_xScroll)\r\n\t\t\t\t.add(wo.stickyHeaders_yScroll)\r\n\t\t\t\t.add(wo.stickyHeaders_attachTo)\r\n\t\t\t\t.unbind( ('scroll resize '.split(' ').join(namespace)).replace(/\\s+/g, ' ') );\r\n\t\t\tts.addHeaderResizeEvent(table, true);\r\n\t\t}\r\n\t});\r\n\r\n})(jQuery, window);\r\n\r\n/*! Widget: resizable - updated 2018-03-26 (v2.30.2) */\r\n/*jshint browser:true, jquery:true, unused:false */\r\n;(function ($, window) {\r\n\t'use strict';\r\n\tvar ts = $.tablesorter || {};\r\n\r\n\t$.extend(ts.css, {\r\n\t\tresizableContainer : 'tablesorter-resizable-container',\r\n\t\tresizableHandle    : 'tablesorter-resizable-handle',\r\n\t\tresizableNoSelect  : 'tablesorter-disableSelection',\r\n\t\tresizableStorage   : 'tablesorter-resizable'\r\n\t});\r\n\r\n\t// Add extra scroller css\r\n\t$(function() {\r\n\t\tvar s = '<style>' +\r\n\t\t\t'body.' + ts.css.resizableNoSelect + ' { -ms-user-select: none; -moz-user-select: -moz-none;' +\r\n\t\t\t\t'-khtml-user-select: none; -webkit-user-select: none; user-select: none; }' +\r\n\t\t\t'.' + ts.css.resizableContainer + ' { position: relative; height: 1px; }' +\r\n\t\t\t// make handle z-index > than stickyHeader z-index, so the handle stays above sticky header\r\n\t\t\t'.' + ts.css.resizableHandle + ' { position: absolute; display: inline-block; width: 8px;' +\r\n\t\t\t\t'top: 1px; cursor: ew-resize; z-index: 3; user-select: none; -moz-user-select: none; }' +\r\n\t\t\t'</style>';\r\n\t\t$('head').append(s);\r\n\t});\r\n\r\n\tts.resizable = {\r\n\t\tinit : function( c, wo ) {\r\n\t\t\tif ( c.$table.hasClass( 'hasResizable' ) ) { return; }\r\n\t\t\tc.$table.addClass( 'hasResizable' );\r\n\r\n\t\t\tvar noResize, $header, column, storedSizes, tmp,\r\n\t\t\t\t$table = c.$table,\r\n\t\t\t\t$parent = $table.parent(),\r\n\t\t\t\tmarginTop = parseInt( $table.css( 'margin-top' ), 10 ),\r\n\r\n\t\t\t// internal variables\r\n\t\t\tvars = wo.resizable_vars = {\r\n\t\t\t\tuseStorage : ts.storage && wo.resizable !== false,\r\n\t\t\t\t$wrap : $parent,\r\n\t\t\t\tmouseXPosition : 0,\r\n\t\t\t\t$target : null,\r\n\t\t\t\t$next : null,\r\n\t\t\t\toverflow : $parent.css('overflow') === 'auto' ||\r\n\t\t\t\t\t$parent.css('overflow') === 'scroll' ||\r\n\t\t\t\t\t$parent.css('overflow-x') === 'auto' ||\r\n\t\t\t\t\t$parent.css('overflow-x') === 'scroll',\r\n\t\t\t\tstoredSizes : []\r\n\t\t\t};\r\n\r\n\t\t\t// set default widths\r\n\t\t\tts.resizableReset( c.table, true );\r\n\r\n\t\t\t// now get measurements!\r\n\t\t\tvars.tableWidth = $table.width();\r\n\t\t\t// attempt to autodetect\r\n\t\t\tvars.fullWidth = Math.abs( $parent.width() - vars.tableWidth ) < 20;\r\n\r\n\t\t\t/*\r\n\t\t\t// Hacky method to determine if table width is set to 'auto'\r\n\t\t\t// http://stackoverflow.com/a/20892048/145346\r\n\t\t\tif ( !vars.fullWidth ) {\r\n\t\t\t\ttmp = $table.width();\r\n\t\t\t\t$header = $table.wrap('<span>').parent(); // temp variable\r\n\t\t\t\tstoredSizes = parseInt( $table.css( 'margin-left' ), 10 ) || 0;\r\n\t\t\t\t$table.css( 'margin-left', storedSizes + 50 );\r\n\t\t\t\tvars.tableWidth = $header.width() > tmp ? 'auto' : tmp;\r\n\t\t\t\t$table.css( 'margin-left', storedSizes ? storedSizes : '' );\r\n\t\t\t\t$header = null;\r\n\t\t\t\t$table.unwrap('<span>');\r\n\t\t\t}\r\n\t\t\t*/\r\n\r\n\t\t\tif ( vars.useStorage && vars.overflow ) {\r\n\t\t\t\t// save table width\r\n\t\t\t\tts.storage( c.table, 'tablesorter-table-original-css-width', vars.tableWidth );\r\n\t\t\t\ttmp = ts.storage( c.table, 'tablesorter-table-resized-width' ) || 'auto';\r\n\t\t\t\tts.resizable.setWidth( $table, tmp, true );\r\n\t\t\t}\r\n\t\t\two.resizable_vars.storedSizes = storedSizes = ( vars.useStorage ?\r\n\t\t\t\tts.storage( c.table, ts.css.resizableStorage ) :\r\n\t\t\t\t[] ) || [];\r\n\t\t\tts.resizable.setWidths( c, wo, storedSizes );\r\n\t\t\tts.resizable.updateStoredSizes( c, wo );\r\n\r\n\t\t\two.$resizable_container = $( '<div class=\"' + ts.css.resizableContainer + '\">' )\r\n\t\t\t\t.css({ top : marginTop })\r\n\t\t\t\t.insertBefore( $table );\r\n\t\t\t// add container\r\n\t\t\tfor ( column = 0; column < c.columns; column++ ) {\r\n\t\t\t\t$header = c.$headerIndexed[ column ];\r\n\t\t\t\ttmp = ts.getColumnData( c.table, c.headers, column );\r\n\t\t\t\tnoResize = ts.getData( $header, tmp, 'resizable' ) === 'false';\r\n\t\t\t\tif ( !noResize ) {\r\n\t\t\t\t\t$( '<div class=\"' + ts.css.resizableHandle + '\">' )\r\n\t\t\t\t\t\t.appendTo( wo.$resizable_container )\r\n\t\t\t\t\t\t.attr({\r\n\t\t\t\t\t\t\t'data-column' : column,\r\n\t\t\t\t\t\t\t'unselectable' : 'on'\r\n\t\t\t\t\t\t})\r\n\t\t\t\t\t\t.data( 'header', $header )\r\n\t\t\t\t\t\t.bind( 'selectstart', false );\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\tts.resizable.bindings( c, wo );\r\n\t\t},\r\n\r\n\t\tupdateStoredSizes : function( c, wo ) {\r\n\t\t\tvar column, $header,\r\n\t\t\t\tlen = c.columns,\r\n\t\t\t\tvars = wo.resizable_vars;\r\n\t\t\tvars.storedSizes = [];\r\n\t\t\tfor ( column = 0; column < len; column++ ) {\r\n\t\t\t\t$header = c.$headerIndexed[ column ];\r\n\t\t\t\tvars.storedSizes[ column ] = $header.is(':visible') ? $header.width() : 0;\r\n\t\t\t}\r\n\t\t},\r\n\r\n\t\tsetWidth : function( $el, width, overflow ) {\r\n\t\t\t// overflow tables need min & max width set as well\r\n\t\t\t$el.css({\r\n\t\t\t\t'width' : width,\r\n\t\t\t\t'min-width' : overflow ? width : '',\r\n\t\t\t\t'max-width' : overflow ? width : ''\r\n\t\t\t});\r\n\t\t},\r\n\r\n\t\tsetWidths : function( c, wo, storedSizes ) {\r\n\t\t\tvar column, $temp,\r\n\t\t\t\tvars = wo.resizable_vars,\r\n\t\t\t\t$extra = $( c.namespace + '_extra_headers' ),\r\n\t\t\t\t$col = c.$table.children( 'colgroup' ).children( 'col' );\r\n\t\t\tstoredSizes = storedSizes || vars.storedSizes || [];\r\n\t\t\t// process only if table ID or url match\r\n\t\t\tif ( storedSizes.length ) {\r\n\t\t\t\tfor ( column = 0; column < c.columns; column++ ) {\r\n\t\t\t\t\t// set saved resizable widths\r\n\t\t\t\t\tts.resizable.setWidth( c.$headerIndexed[ column ], storedSizes[ column ], vars.overflow );\r\n\t\t\t\t\tif ( $extra.length ) {\r\n\t\t\t\t\t\t// stickyHeaders needs to modify min & max width as well\r\n\t\t\t\t\t\t$temp = $extra.eq( column ).add( $col.eq( column ) );\r\n\t\t\t\t\t\tts.resizable.setWidth( $temp, storedSizes[ column ], vars.overflow );\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t\t$temp = $( c.namespace + '_extra_table' );\r\n\t\t\t\tif ( $temp.length && !ts.hasWidget( c.table, 'scroller' ) ) {\r\n\t\t\t\t\tts.resizable.setWidth( $temp, c.$table.outerWidth(), vars.overflow );\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t},\r\n\r\n\t\tsetHandlePosition : function( c, wo ) {\r\n\t\t\tvar startPosition,\r\n\t\t\t\ttableHeight = c.$table.height(),\r\n\t\t\t\t$handles = wo.$resizable_container.children(),\r\n\t\t\t\thandleCenter = Math.floor( $handles.width() / 2 );\r\n\r\n\t\t\tif ( ts.hasWidget( c.table, 'scroller' ) ) {\r\n\t\t\t\ttableHeight = 0;\r\n\t\t\t\tc.$table.closest( '.' + ts.css.scrollerWrap ).children().each(function() {\r\n\t\t\t\t\tvar $this = $(this);\r\n\t\t\t\t\t// center table has a max-height set\r\n\t\t\t\t\ttableHeight += $this.filter('[style*=\"height\"]').length ? $this.height() : $this.children('table').height();\r\n\t\t\t\t});\r\n\t\t\t}\r\n\r\n\t\t\tif ( !wo.resizable_includeFooter && c.$table.children('tfoot').length ) {\r\n\t\t\t\ttableHeight -= c.$table.children('tfoot').height();\r\n\t\t\t}\r\n\t\t\t// subtract out table left position from resizable handles. Fixes #864\r\n\t\t\t// jQuery v3.3.0+ appears to include the start position with the $header.position().left; see #1544\r\n\t\t\tstartPosition = parseFloat($.fn.jquery) >= 3.3 ? 0 : c.$table.position().left;\r\n\t\t\t$handles.each( function() {\r\n\t\t\t\tvar $this = $(this),\r\n\t\t\t\t\tcolumn = parseInt( $this.attr( 'data-column' ), 10 ),\r\n\t\t\t\t\tcolumns = c.columns - 1,\r\n\t\t\t\t\t$header = $this.data( 'header' );\r\n\t\t\t\tif ( !$header ) { return; } // see #859\r\n\t\t\t\tif (\r\n\t\t\t\t\t!$header.is(':visible') ||\r\n\t\t\t\t\t( !wo.resizable_addLastColumn && ts.resizable.checkVisibleColumns(c, column) )\r\n\t\t\t\t) {\r\n\t\t\t\t\t$this.hide();\r\n\t\t\t\t} else if ( column < columns || column === columns && wo.resizable_addLastColumn ) {\r\n\t\t\t\t\t$this.css({\r\n\t\t\t\t\t\tdisplay: 'inline-block',\r\n\t\t\t\t\t\theight : tableHeight,\r\n\t\t\t\t\t\tleft : $header.position().left - startPosition + $header.outerWidth() - handleCenter\r\n\t\t\t\t\t});\r\n\t\t\t\t}\r\n\t\t\t});\r\n\t\t},\r\n\r\n\t\t// Fixes #1485\r\n\t\tcheckVisibleColumns: function( c, column ) {\r\n\t\t\tvar i,\r\n\t\t\t\tlen = 0;\r\n\t\t\tfor ( i = column + 1; i < c.columns; i++ ) {\r\n\t\t\t\tlen += c.$headerIndexed[i].is( ':visible' ) ? 1 : 0;\r\n\t\t\t}\r\n\t\t\treturn len === 0;\r\n\t\t},\r\n\r\n\t\t// prevent text selection while dragging resize bar\r\n\t\ttoggleTextSelection : function( c, wo, toggle ) {\r\n\t\t\tvar namespace = c.namespace + 'tsresize';\r\n\t\t\two.resizable_vars.disabled = toggle;\r\n\t\t\t$( 'body' ).toggleClass( ts.css.resizableNoSelect, toggle );\r\n\t\t\tif ( toggle ) {\r\n\t\t\t\t$( 'body' )\r\n\t\t\t\t\t.attr( 'unselectable', 'on' )\r\n\t\t\t\t\t.bind( 'selectstart' + namespace, false );\r\n\t\t\t} else {\r\n\t\t\t\t$( 'body' )\r\n\t\t\t\t\t.removeAttr( 'unselectable' )\r\n\t\t\t\t\t.unbind( 'selectstart' + namespace );\r\n\t\t\t}\r\n\t\t},\r\n\r\n\t\tbindings : function( c, wo ) {\r\n\t\t\tvar namespace = c.namespace + 'tsresize';\r\n\t\t\two.$resizable_container.children().bind( 'mousedown', function( event ) {\r\n\t\t\t\t// save header cell and mouse position\r\n\t\t\t\tvar column,\r\n\t\t\t\t\tvars = wo.resizable_vars,\r\n\t\t\t\t\t$extras = $( c.namespace + '_extra_headers' ),\r\n\t\t\t\t\t$header = $( event.target ).data( 'header' );\r\n\r\n\t\t\t\tcolumn = parseInt( $header.attr( 'data-column' ), 10 );\r\n\t\t\t\tvars.$target = $header = $header.add( $extras.filter('[data-column=\"' + column + '\"]') );\r\n\t\t\t\tvars.target = column;\r\n\r\n\t\t\t\t// if table is not as wide as it's parent, then resize the table\r\n\t\t\t\tvars.$next = event.shiftKey || wo.resizable_targetLast ?\r\n\t\t\t\t\t$header.parent().children().not( '.resizable-false' ).filter( ':last' ) :\r\n\t\t\t\t\t$header.nextAll( ':not(.resizable-false)' ).eq( 0 );\r\n\r\n\t\t\t\tcolumn = parseInt( vars.$next.attr( 'data-column' ), 10 );\r\n\t\t\t\tvars.$next = vars.$next.add( $extras.filter('[data-column=\"' + column + '\"]') );\r\n\t\t\t\tvars.next = column;\r\n\r\n\t\t\t\tvars.mouseXPosition = event.pageX;\r\n\t\t\t\tts.resizable.updateStoredSizes( c, wo );\r\n\t\t\t\tts.resizable.toggleTextSelection(c, wo, true );\r\n\t\t\t});\r\n\r\n\t\t\t$( document )\r\n\t\t\t\t.bind( 'mousemove' + namespace, function( event ) {\r\n\t\t\t\t\tvar vars = wo.resizable_vars;\r\n\t\t\t\t\t// ignore mousemove if no mousedown\r\n\t\t\t\t\tif ( !vars.disabled || vars.mouseXPosition === 0 || !vars.$target ) { return; }\r\n\t\t\t\t\tif ( wo.resizable_throttle ) {\r\n\t\t\t\t\t\tclearTimeout( vars.timer );\r\n\t\t\t\t\t\tvars.timer = setTimeout( function() {\r\n\t\t\t\t\t\t\tts.resizable.mouseMove( c, wo, event );\r\n\t\t\t\t\t\t}, isNaN( wo.resizable_throttle ) ? 5 : wo.resizable_throttle );\r\n\t\t\t\t\t} else {\r\n\t\t\t\t\t\tts.resizable.mouseMove( c, wo, event );\r\n\t\t\t\t\t}\r\n\t\t\t\t})\r\n\t\t\t\t.bind( 'mouseup' + namespace, function() {\r\n\t\t\t\t\tif (!wo.resizable_vars.disabled) { return; }\r\n\t\t\t\t\tts.resizable.toggleTextSelection( c, wo, false );\r\n\t\t\t\t\tts.resizable.stopResize( c, wo );\r\n\t\t\t\t\tts.resizable.setHandlePosition( c, wo );\r\n\t\t\t\t});\r\n\r\n\t\t\t// resizeEnd event triggered by scroller widget\r\n\t\t\t$( window ).bind( 'resize' + namespace + ' resizeEnd' + namespace, function() {\r\n\t\t\t\tts.resizable.setHandlePosition( c, wo );\r\n\t\t\t});\r\n\r\n\t\t\t// right click to reset columns to default widths\r\n\t\t\tc.$table\r\n\t\t\t\t.bind( 'columnUpdate pagerComplete resizableUpdate '.split( ' ' ).join( namespace + ' ' ), function() {\r\n\t\t\t\t\tts.resizable.setHandlePosition( c, wo );\r\n\t\t\t\t})\r\n\t\t\t\t.bind( 'resizableReset' + namespace, function() {\r\n\t\t\t\t\tts.resizableReset( c.table );\r\n\t\t\t\t})\r\n\t\t\t\t.find( 'thead:first' )\r\n\t\t\t\t.add( $( c.namespace + '_extra_table' ).find( 'thead:first' ) )\r\n\t\t\t\t.bind( 'contextmenu' + namespace, function() {\r\n\t\t\t\t\t// $.isEmptyObject() needs jQuery 1.4+; allow right click if already reset\r\n\t\t\t\t\tvar allowClick = wo.resizable_vars.storedSizes.length === 0;\r\n\t\t\t\t\tts.resizableReset( c.table );\r\n\t\t\t\t\tts.resizable.setHandlePosition( c, wo );\r\n\t\t\t\t\two.resizable_vars.storedSizes = [];\r\n\t\t\t\t\treturn allowClick;\r\n\t\t\t\t});\r\n\r\n\t\t},\r\n\r\n\t\tmouseMove : function( c, wo, event ) {\r\n\t\t\tif ( wo.resizable_vars.mouseXPosition === 0 || !wo.resizable_vars.$target ) { return; }\r\n\t\t\t// resize columns\r\n\t\t\tvar column,\r\n\t\t\t\ttotal = 0,\r\n\t\t\t\tvars = wo.resizable_vars,\r\n\t\t\t\t$next = vars.$next,\r\n\t\t\t\ttar = vars.storedSizes[ vars.target ],\r\n\t\t\t\tleftEdge = event.pageX - vars.mouseXPosition;\r\n\t\t\tif ( vars.overflow ) {\r\n\t\t\t\tif ( tar + leftEdge > 0 ) {\r\n\t\t\t\t\tvars.storedSizes[ vars.target ] += leftEdge;\r\n\t\t\t\t\tts.resizable.setWidth( vars.$target, vars.storedSizes[ vars.target ], true );\r\n\t\t\t\t\t// update the entire table width\r\n\t\t\t\t\tfor ( column = 0; column < c.columns; column++ ) {\r\n\t\t\t\t\t\ttotal += vars.storedSizes[ column ];\r\n\t\t\t\t\t}\r\n\t\t\t\t\tts.resizable.setWidth( c.$table.add( $( c.namespace + '_extra_table' ) ), total );\r\n\t\t\t\t}\r\n\t\t\t\tif ( !$next.length ) {\r\n\t\t\t\t\t// if expanding right-most column, scroll the wrapper\r\n\t\t\t\t\tvars.$wrap[0].scrollLeft = c.$table.width();\r\n\t\t\t\t}\r\n\t\t\t} else if ( vars.fullWidth ) {\r\n\t\t\t\tvars.storedSizes[ vars.target ] += leftEdge;\r\n\t\t\t\tvars.storedSizes[ vars.next ] -= leftEdge;\r\n\t\t\t\tts.resizable.setWidths( c, wo );\r\n\t\t\t} else {\r\n\t\t\t\tvars.storedSizes[ vars.target ] += leftEdge;\r\n\t\t\t\tts.resizable.setWidths( c, wo );\r\n\t\t\t}\r\n\t\t\tvars.mouseXPosition = event.pageX;\r\n\t\t\t// dynamically update sticky header widths\r\n\t\t\tc.$table.triggerHandler('stickyHeadersUpdate');\r\n\t\t},\r\n\r\n\t\tstopResize : function( c, wo ) {\r\n\t\t\tvar vars = wo.resizable_vars;\r\n\t\t\tts.resizable.updateStoredSizes( c, wo );\r\n\t\t\tif ( vars.useStorage ) {\r\n\t\t\t\t// save all column widths\r\n\t\t\t\tts.storage( c.table, ts.css.resizableStorage, vars.storedSizes );\r\n\t\t\t\tts.storage( c.table, 'tablesorter-table-resized-width', c.$table.width() );\r\n\t\t\t}\r\n\t\t\tvars.mouseXPosition = 0;\r\n\t\t\tvars.$target = vars.$next = null;\r\n\t\t\t// will update stickyHeaders, just in case, see #912\r\n\t\t\tc.$table.triggerHandler('stickyHeadersUpdate');\r\n\t\t\tc.$table.triggerHandler('resizableComplete');\r\n\t\t}\r\n\t};\r\n\r\n\t// this widget saves the column widths if\r\n\t// $.tablesorter.storage function is included\r\n\t// **************************\r\n\tts.addWidget({\r\n\t\tid: 'resizable',\r\n\t\tpriority: 40,\r\n\t\toptions: {\r\n\t\t\tresizable : true, // save column widths to storage\r\n\t\t\tresizable_addLastColumn : false,\r\n\t\t\tresizable_includeFooter: true,\r\n\t\t\tresizable_widths : [],\r\n\t\t\tresizable_throttle : false, // set to true (5ms) or any number 0-10 range\r\n\t\t\tresizable_targetLast : false\r\n\t\t},\r\n\t\tinit: function(table, thisWidget, c, wo) {\r\n\t\t\tts.resizable.init( c, wo );\r\n\t\t},\r\n\t\tformat: function( table, c, wo ) {\r\n\t\t\tts.resizable.setHandlePosition( c, wo );\r\n\t\t},\r\n\t\tremove: function( table, c, wo, refreshing ) {\r\n\t\t\tif (wo.$resizable_container) {\r\n\t\t\t\tvar namespace = c.namespace + 'tsresize';\r\n\t\t\t\tc.$table.add( $( c.namespace + '_extra_table' ) )\r\n\t\t\t\t\t.removeClass('hasResizable')\r\n\t\t\t\t\t.children( 'thead' )\r\n\t\t\t\t\t.unbind( 'contextmenu' + namespace );\r\n\r\n\t\t\t\two.$resizable_container.remove();\r\n\t\t\t\tts.resizable.toggleTextSelection( c, wo, false );\r\n\t\t\t\tts.resizableReset( table, refreshing );\r\n\t\t\t\t$( document ).unbind( 'mousemove' + namespace + ' mouseup' + namespace );\r\n\t\t\t}\r\n\t\t}\r\n\t});\r\n\r\n\tts.resizableReset = function( table, refreshing ) {\r\n\t\t$( table ).each(function() {\r\n\t\t\tvar index, $t,\r\n\t\t\t\tc = this.config,\r\n\t\t\t\two = c && c.widgetOptions,\r\n\t\t\t\tvars = wo.resizable_vars;\r\n\t\t\tif ( table && c && c.$headerIndexed.length ) {\r\n\t\t\t\t// restore the initial table width\r\n\t\t\t\tif ( vars.overflow && vars.tableWidth ) {\r\n\t\t\t\t\tts.resizable.setWidth( c.$table, vars.tableWidth, true );\r\n\t\t\t\t\tif ( vars.useStorage ) {\r\n\t\t\t\t\t\tts.storage( table, 'tablesorter-table-resized-width', vars.tableWidth );\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t\tfor ( index = 0; index < c.columns; index++ ) {\r\n\t\t\t\t\t$t = c.$headerIndexed[ index ];\r\n\t\t\t\t\tif ( wo.resizable_widths && wo.resizable_widths[ index ] ) {\r\n\t\t\t\t\t\tts.resizable.setWidth( $t, wo.resizable_widths[ index ], vars.overflow );\r\n\t\t\t\t\t} else if ( !$t.hasClass( 'resizable-false' ) ) {\r\n\t\t\t\t\t\t// don't clear the width of any column that is not resizable\r\n\t\t\t\t\t\tts.resizable.setWidth( $t, '', vars.overflow );\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\r\n\t\t\t\t// reset stickyHeader widths\r\n\t\t\t\tc.$table.triggerHandler( 'stickyHeadersUpdate' );\r\n\t\t\t\tif ( ts.storage && !refreshing ) {\r\n\t\t\t\t\tts.storage( this, ts.css.resizableStorage, [] );\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t});\r\n\t};\r\n\r\n})( jQuery, window );\r\n\r\n/*! Widget: saveSort - updated 2018-03-19 (v2.30.1) *//*\r\n* Requires tablesorter v2.16+\r\n* by Rob Garrison\r\n*/\r\n;(function ($) {\r\n\t'use strict';\r\n\tvar ts = $.tablesorter || {};\r\n\r\n\tfunction getStoredSortList(c) {\r\n\t\tvar stored = ts.storage( c.table, 'tablesorter-savesort' );\r\n\t\treturn (stored && stored.hasOwnProperty('sortList') && $.isArray(stored.sortList)) ? stored.sortList : [];\r\n\t}\r\n\r\n\tfunction sortListChanged(c, sortList) {\r\n\t\treturn (sortList || getStoredSortList(c)).join(',') !== c.sortList.join(',');\r\n\t}\r\n\r\n\t// this widget saves the last sort only if the\r\n\t// saveSort widget option is true AND the\r\n\t// $.tablesorter.storage function is included\r\n\t// **************************\r\n\tts.addWidget({\r\n\t\tid: 'saveSort',\r\n\t\tpriority: 20,\r\n\t\toptions: {\r\n\t\t\tsaveSort : true\r\n\t\t},\r\n\t\tinit: function(table, thisWidget, c, wo) {\r\n\t\t\t// run widget format before all other widgets are applied to the table\r\n\t\t\tthisWidget.format(table, c, wo, true);\r\n\t\t},\r\n\t\tformat: function(table, c, wo, init) {\r\n\t\t\tvar time,\r\n\t\t\t\t$table = c.$table,\r\n\t\t\t\tsaveSort = wo.saveSort !== false, // make saveSort active/inactive; default to true\r\n\t\t\t\tsortList = { 'sortList' : c.sortList },\r\n\t\t\t\tdebug = ts.debug(c, 'saveSort');\r\n\t\t\tif (debug) {\r\n\t\t\t\ttime = new Date();\r\n\t\t\t}\r\n\t\t\tif ($table.hasClass('hasSaveSort')) {\r\n\t\t\t\tif (saveSort && table.hasInitialized && ts.storage && sortListChanged(c)) {\r\n\t\t\t\t\tts.storage( table, 'tablesorter-savesort', sortList );\r\n\t\t\t\t\tif (debug) {\r\n\t\t\t\t\t\tconsole.log('saveSort >> Saving last sort: ' + c.sortList + ts.benchmark(time));\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t} else {\r\n\t\t\t\t// set table sort on initial run of the widget\r\n\t\t\t\t$table.addClass('hasSaveSort');\r\n\t\t\t\tsortList = '';\r\n\t\t\t\t// get data\r\n\t\t\t\tif (ts.storage) {\r\n\t\t\t\t\tsortList = getStoredSortList(c);\r\n\t\t\t\t\tif (debug) {\r\n\t\t\t\t\t\tconsole.log('saveSort >> Last sort loaded: \"' + sortList + '\"' + ts.benchmark(time));\r\n\t\t\t\t\t}\r\n\t\t\t\t\t$table.bind('saveSortReset', function(event) {\r\n\t\t\t\t\t\tevent.stopPropagation();\r\n\t\t\t\t\t\tts.storage( table, 'tablesorter-savesort', '' );\r\n\t\t\t\t\t});\r\n\t\t\t\t}\r\n\t\t\t\t// init is true when widget init is run, this will run this widget before all other widgets have initialized\r\n\t\t\t\t// this method allows using this widget in the original tablesorter plugin; but then it will run all widgets twice.\r\n\t\t\t\tif (init && sortList && sortList.length > 0) {\r\n\t\t\t\t\tc.sortList = sortList;\r\n\t\t\t\t} else if (table.hasInitialized && sortList && sortList.length > 0) {\r\n\t\t\t\t\t// update sort change\r\n\t\t\t\t\tif (sortListChanged(c, sortList)) {\r\n\t\t\t\t\t\tts.sortOn(c, sortList);\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t},\r\n\t\tremove: function(table, c) {\r\n\t\t\tc.$table.removeClass('hasSaveSort');\r\n\t\t\t// clear storage\r\n\t\t\tif (ts.storage) { ts.storage( table, 'tablesorter-savesort', '' ); }\r\n\t\t}\r\n\t});\r\n\r\n})(jQuery);\r\nreturn jQuery.tablesorter;}));\r\n","(function(factory){if (typeof define === 'function' && define.amd){define(['jquery'], factory);} else if (typeof module === 'object' && typeof module.exports === 'object'){module.exports = factory(require('jquery'));} else {factory(jQuery);}}(function(jQuery){\r\n\r\n/*! Widget: grouping - updated 9/27/2017 (v2.29.0) */\r\n!function(i){\"use strict\";var l=i.tablesorter,g=l.grouping={types:{number:function(r,o,e,u){var p,t=o.hasClass(l.css.sortAsc);return 1<u&&\"\"!==e?(p=t?Math.floor(parseFloat(e)/u)*u:Math.ceil(parseFloat(e)/u)*u,p+=\" - \"+(p+(u-1)*(t?1:-1))):p=parseFloat(e)||e,p},separator:function(r,o,e,u){var p=(e+\"\").split(r.widgetOptions.group_separator);return i.trim(p[u-1]||\"\")},text:function(r,o,e){return e},word:function(r,o,e,u){return((e+\" \").match(/\\w+/g)||[])[u-1]||\"\"},letter:function(r,o,e,u){return e?(e+\" \").substring(0,u):\"\"},date:function(r,o,e,u){var p,t,a=r.widgetOptions,s=new Date(e||\"\");return s instanceof Date&&isFinite(s)?(p=s.getFullYear(),t=g.findMonth(a,s.getMonth()),\"year\"===u?p:\"month\"===u?t:\"monthyear\"===u?t+\" \"+p:\"day\"===u?t+\" \"+s.getDate():\"week\"===u?g.findWeek(a,s.getDay()):\"time\"===u?g.findTime(a,s):\"hour\"===u?g.findTime(a,s,\"hour\"):a.group_dateString(s,r,o)):a.group_dateInvalid}},findMonth:function(r,o){return r.group_months[o+(\"\"===(r.group_months[0]||\"\")?1:0)]},findWeek:function(r,o){if(i.isArray(r.group_week))return r.group_week[o];if(!i.isEmptyObject(r.group_week)){return r.group_week[[\"sun\",\"mon\",\"tue\",\"wed\",\"thu\",\"fri\",\"sat\"][o]]}},findTime:function(r,o,e){var u,p=r.group_time.am&&r.group_time.pm,t=o.getHours(),a=12<=t?1:0,s=(\"00\"+(r.group_time24Hour&&12<t?t-12:r.group_time24Hour&&0===t?t+12:t)).slice(-2),n=(\"00\"+o.getMinutes()).slice(-2);return u=r.group_time[p?[\"am\",\"pm\"][a]:a],\"hour\"===e?s:s+\":\"+n+(r.group_time24Hour?\"\":\" \"+(u||\"\"))},update:function(r){if(!i.isEmptyObject(r.config.cache)){var o=r.config,e=o.widgetOptions,u=void 0!==o.sortList[0],p={},t=i.isArray(e.group_forceColumn)&&void 0!==e.group_forceColumn[0]?e.group_enforceSort&&!u?-1:e.group_forceColumn[0]:u?o.sortList[0][0]:-1;o.$table.find(\"tr.group-hidden\").removeClass(\"group-hidden\").end().find(\"tr.group-header\").remove(),e.group_collapsible&&o.$table.data(\"pagerSavedHeight\",0),0<=t&&t<o.columns&&!o.$headerIndexed[t].hasClass(\"group-false\")&&(e.group_collapsedGroup=\"\",e.group_collapsedGroups={},p.column=t,p.groupClass=(o.$headerIndexed[t].attr(\"class\")||\"\").match(/(group-\\w+(-\\w+)?)/g),p.grouping=p.groupClass?p.groupClass[0].split(\"-\"):[\"group\",\"letter\",1],p.savedGroup=g.saveCurrentGrouping(o,e,p),g.findColumnGroups(o,e,p),g.processHeaders(o,e,p),o.$table.triggerHandler(e.group_complete))}},processHeaders:function(r,o,e){var u,p,t,a,s,n,l=r.$table.find(\"tr.group-header\"),g=l.length;for(l.bind(\"selectstart\",!1),u=0;u<g;u++)s=(n=l.eq(u)).nextUntil(\"tr.group-header\").filter(\":visible\"),(o.group_count||i.isFunction(o.group_callback))&&(t=n.find(\".group-count\")).length&&(o.group_count&&t.html(o.group_count.toString().replace(/\\{num\\}/g,s.length)),i.isFunction(o.group_callback)&&o.group_callback(n.find(\"td\"),s,e.column,r.table)),o.group_saveGroups&&!i.isEmptyObject(o.group_collapsedGroups)&&o.group_collapsedGroups[o.group_collapsedGroup].length?(a=n.find(\".group-name\").text().toLowerCase()+n.attr(\"data-group-index\"),p=-1<i.inArray(a,o.group_collapsedGroups[o.group_collapsedGroup]),n.toggleClass(\"collapsed\",p),s.toggleClass(\"group-hidden\",p)):o.group_collapsed&&o.group_collapsible&&(n.addClass(\"collapsed\"),s.addClass(\"group-hidden\"))},groupHeaderHTML:function(r,o,e){var u=(e.currentGroup||\"\").toString().replace(/</g,\"&lt;\").replace(/>/g,\"&gt;\");return'<tr class=\"group-header '+r.selectorRemove.slice(1)+\" \"+(o.columnSelector_classHasSpan||\"hasSpan\")+'\" unselectable=\"on\" '+(r.tabIndex?'tabindex=\"0\" ':\"\")+'data-group-index=\"'+e.groupIndex+'\"><td colspan=\"'+r.columns+'\">'+(o.group_collapsible?\"<i/>\":\"\")+'<span class=\"group-name\">'+u+'</span><span class=\"group-count\"></span></td></tr>'},saveCurrentGrouping:function(r,o,e){var u,p,t=!1;return o.group_collapsible&&o.group_saveGroups&&(o.group_collapsedGroups=l.storage&&l.storage(r.table,\"tablesorter-groups\")||{},p=\"dir\"+r.sortList[0][1],u=o.group_collapsedGroup=r.sortList[0][0]+p+e.grouping.join(\"\"),o.group_collapsedGroups[u]?t=!0:o.group_collapsedGroups[u]=[]),t},findColumnGroups:function(r,o,e){var u,p,t,a,s=l.hasWidget(r.table,\"pager\"),n=r.pager||{};for(u=e.groupIndex=0;u<r.$tbodies.length;u++)for(p=r.cache[u].normalized,e.group=void 0,t=s&&!n.ajax?n.startRow-1:0,a=s?n.endRow-(n.ajax?n.startRow:0):p.length;t<a;t++)e.rowData=p[t],e.rowData&&(e.$row=e.rowData[r.columns].$row,e.$row.is(\":visible\")&&g.types[e.grouping[1]]&&g.insertGroupHeader(r,o,e));l.hasWidget(r.table,\"columnSelector\")&&l.columnSelector.setUpColspan(r,o)},insertGroupHeader:function(r,o,e){var u=r.$headerIndexed[e.column],p=e.rowData[e.column],t=/date/.test(e.groupClass)?e.grouping[2]:parseInt(e.grouping[2]||1,10)||1;e.currentGroup=e.rowData?g.types[e.grouping[1]](r,u,p,t,e.group):e.currentGroup,e.group!==e.currentGroup&&(e.group=e.currentGroup,i.isFunction(o.group_formatter)&&(e.currentGroup=o.group_formatter((e.group||\"\").toString(),e.column,r.table,r,o,e)||e.group),e.$row.first().before(g.groupHeaderHTML(r,o,e)),o.group_saveGroups&&!e.savedGroup&&o.group_collapsed&&o.group_collapsible&&o.group_collapsedGroups[o.group_collapsedGroup].push(e.currentGroup+e.groupIndex),e.groupIndex++)},bindEvents:function(t,a,s){s.group_collapsible&&(s.group_collapsedGroups=[],a.$table.on(\"click toggleGroup keyup\",\"tr.group-header\",function(r){if(r.stopPropagation(),\"keyup\"!==r.type||13===r.which){var o,e,u=i(this),p=u.find(\".group-name\").text().toLowerCase()+u.attr(\"data-group-index\");!r.shiftKey||\"click\"!==r.type&&\"keyup\"!==r.type||u.siblings(\".group-header\").trigger(\"toggleGroup\"),u.toggleClass(\"collapsed\"),u.nextUntil(\"tr.group-header\").toggleClass(\"group-hidden\",u.hasClass(\"collapsed\")),!(o=u.hasClass(\"collapsed\"))&&l.hasWidget(a.$table,\"zebra\")&&l.applyWidgetId(a.$table,\"zebra\"),s.group_saveGroups&&l.storage&&(s.group_collapsedGroups[s.group_collapsedGroup]||(s.group_collapsedGroups[s.group_collapsedGroup]=[]),o&&s.group_collapsedGroup?s.group_collapsedGroups[s.group_collapsedGroup].push(p):s.group_collapsedGroup&&-1<(e=i.inArray(p,s.group_collapsedGroups[s.group_collapsedGroup]))&&s.group_collapsedGroups[s.group_collapsedGroup].splice(e,1),l.storage(t,\"tablesorter-groups\",s.group_collapsedGroups))}})),i(s.group_saveReset).on(\"click\",function(){g.clearSavedGroups(t)}),a.$table.on(\"pagerChange.tsgrouping\",function(){g.update(t)})},clearSavedGroups:function(r){r&&l.storage&&(l.storage(r,\"tablesorter-groups\",\"\"),g.update(r))}};l.addWidget({id:\"group\",priority:100,options:{group_collapsible:!0,group_collapsed:!1,group_saveGroups:!0,group_saveReset:null,group_count:\" ({num})\",group_separator:\"-\",group_formatter:null,group_callback:null,group_complete:\"groupingComplete\",group_forceColumn:[],group_enforceSort:!0,group_checkbox:[\"checked\",\"unchecked\"],group_months:[\"Jan\",\"Feb\",\"Mar\",\"Apr\",\"May\",\"Jun\",\"Jul\",\"Aug\",\"Sep\",\"Oct\",\"Nov\",\"Dec\"],group_week:[\"Sunday\",\"Monday\",\"Tuesday\",\"Wednesday\",\"Thursday\",\"Friday\",\"Saturday\"],group_time:[\"AM\",\"PM\"],group_time24Hour:!1,group_dateInvalid:\"Invalid Date\",group_dateString:function(r){return r.toLocaleString()}},init:function(r,o,e,u){g.bindEvents(r,e,u)},format:function(r){g.update(r)},remove:function(r,o){o.$table.off(\"click\",\"tr.group-header\").off(\"pagerChange.tsgrouping\").find(\".group-hidden\").removeClass(\"group-hidden\").end().find(\"tr.group-header\").remove()}})}(jQuery);return jQuery;}));\r\n","(function(factory){if (typeof define === 'function' && define.amd){define(['jquery'], factory);} else if (typeof module === 'object' && typeof module.exports === 'object'){module.exports = factory(require('jquery'));} else {factory(jQuery);}}(function(jQuery){\r\n\r\n/*! Widget: uitheme - updated 2018-03-18 (v2.30.0) */\r\n!function(A){\"use strict\";var N=A.tablesorter||{};N.themes={bootstrap:{table:\"table table-bordered table-striped\",caption:\"caption\",header:\"bootstrap-header\",sortNone:\"\",sortAsc:\"\",sortDesc:\"\",active:\"\",hover:\"\",icons:\"\",iconSortNone:\"bootstrap-icon-unsorted\",iconSortAsc:\"glyphicon glyphicon-chevron-up\",iconSortDesc:\"glyphicon glyphicon-chevron-down\",filterRow:\"\",footerRow:\"\",footerCells:\"\",even:\"\",odd:\"\"},jui:{table:\"ui-widget ui-widget-content ui-corner-all\",caption:\"ui-widget-content\",header:\"ui-widget-header ui-corner-all ui-state-default\",sortNone:\"\",sortAsc:\"\",sortDesc:\"\",active:\"ui-state-active\",hover:\"ui-state-hover\",icons:\"ui-icon\",iconSortNone:\"ui-icon-carat-2-n-s ui-icon-caret-2-n-s\",iconSortAsc:\"ui-icon-carat-1-n ui-icon-caret-1-n\",iconSortDesc:\"ui-icon-carat-1-s ui-icon-caret-1-s\",filterRow:\"\",footerRow:\"\",footerCells:\"\",even:\"ui-widget-content\",odd:\"ui-state-default\"}},A.extend(N.css,{wrapper:\"tablesorter-wrapper\"}),N.addWidget({id:\"uitheme\",priority:10,format:function(e,o,t){var s,r,i,a,n,c,l,d,h,m,u,p,v,f=N.themes,b=o.$table.add(A(o.namespace+\"_extra_table\")),C=o.$headers.add(A(o.namespace+\"_extra_headers\")),w=o.theme||\"jui\",S=f[w]||{},g=A.trim([S.sortNone,S.sortDesc,S.sortAsc,S.active].join(\" \")),j=A.trim([S.iconSortNone,S.iconSortDesc,S.iconSortAsc].join(\" \")),D=N.debug(o,\"uitheme\");for(D&&(n=new Date),b.hasClass(\"tablesorter-\"+w)&&o.theme===o.appliedTheme&&t.uitheme_applied||(t.uitheme_applied=!0,m=f[o.appliedTheme]||{},u=(v=!A.isEmptyObject(m))?[m.sortNone,m.sortDesc,m.sortAsc,m.active].join(\" \"):\"\",p=v?[m.iconSortNone,m.iconSortDesc,m.iconSortAsc].join(\" \"):\"\",v&&(t.zebra[0]=A.trim(\" \"+t.zebra[0].replace(\" \"+m.even,\"\")),t.zebra[1]=A.trim(\" \"+t.zebra[1].replace(\" \"+m.odd,\"\")),o.$tbodies.children().removeClass([m.even,m.odd].join(\" \"))),S.even&&(t.zebra[0]+=\" \"+S.even),S.odd&&(t.zebra[1]+=\" \"+S.odd),b.children(\"caption\").removeClass(m.caption||\"\").addClass(S.caption),d=b.removeClass((o.appliedTheme?\"tablesorter-\"+(o.appliedTheme||\"\"):\"\")+\" \"+(m.table||\"\")).addClass(\"tablesorter-\"+w+\" \"+(S.table||\"\")).children(\"tfoot\"),o.appliedTheme=o.theme,d.length&&d.children(\"tr\").removeClass(m.footerRow||\"\").addClass(S.footerRow).children(\"th, td\").removeClass(m.footerCells||\"\").addClass(S.footerCells),C.removeClass((v?[m.header,m.hover,u].join(\" \"):\"\")||\"\").addClass(S.header).not(\".sorter-false\").unbind(\"mouseenter.tsuitheme mouseleave.tsuitheme\").bind(\"mouseenter.tsuitheme mouseleave.tsuitheme\",function(e){A(this)[\"mouseenter\"===e.type?\"addClass\":\"removeClass\"](S.hover||\"\")}),C.each(function(){var e=A(this);e.find(\".\"+N.css.wrapper).length||e.wrapInner('<div class=\"'+N.css.wrapper+'\" style=\"position:relative;height:100%;width:100%\"></div>')}),o.cssIcon&&C.find(\".\"+N.css.icon).removeClass(v?[m.icons,p].join(\" \"):\"\").addClass(S.icons||\"\"),N.hasWidget(o.table,\"filter\")&&(r=function(){b.children(\"thead\").children(\".\"+N.css.filterRow).removeClass(v&&m.filterRow||\"\").addClass(S.filterRow||\"\")},t.filter_initialized?r():b.one(\"filterInit\",function(){r()}))),s=0;s<o.columns;s++)c=o.$headers.add(A(o.namespace+\"_extra_headers\")).not(\".sorter-false\").filter('[data-column=\"'+s+'\"]'),l=N.css.icon?c.find(\".\"+N.css.icon):A(),(h=C.not(\".sorter-false\").filter('[data-column=\"'+s+'\"]:last')).length&&(c.removeClass(g),l.removeClass(j),h[0].sortDisabled?l.removeClass(S.icons||\"\"):(i=S.sortNone,a=S.iconSortNone,h.hasClass(N.css.sortAsc)?(i=[S.sortAsc,S.active].join(\" \"),a=S.iconSortAsc):h.hasClass(N.css.sortDesc)&&(i=[S.sortDesc,S.active].join(\" \"),a=S.iconSortDesc),c.addClass(i),l.addClass(a||\"\")));D&&console.log(\"uitheme >> Applied \"+w+\" theme\"+N.benchmark(n))},remove:function(e,o,t,s){if(t.uitheme_applied){var r=o.$table,i=o.appliedTheme||\"jui\",a=N.themes[i]||N.themes.jui,n=r.children(\"thead\").children(),c=a.sortNone+\" \"+a.sortDesc+\" \"+a.sortAsc,l=a.iconSortNone+\" \"+a.iconSortDesc+\" \"+a.iconSortAsc;r.removeClass(\"tablesorter-\"+i+\" \"+a.table),t.uitheme_applied=!1,s||(r.find(N.css.header).removeClass(a.header),n.unbind(\"mouseenter.tsuitheme mouseleave.tsuitheme\").removeClass(a.hover+\" \"+c+\" \"+a.active).filter(\".\"+N.css.filterRow).removeClass(a.filterRow),n.find(\".\"+N.css.icon).removeClass(a.icons+\" \"+l))}}})}(jQuery);return jQuery;}));\r\n","(function(factory){if (typeof define === 'function' && define.amd){define(['jquery'], factory);} else if (typeof module === 'object' && typeof module.exports === 'object'){module.exports = factory(require('jquery'));} else {factory(jQuery);}}(function(jQuery){\r\n\r\n/*! Widget: filter - updated 2018-03-18 (v2.30.0) */\r\n!function(M){\"use strict\";var I,D,z=M.tablesorter||{},_=z.css,o=z.keyCodes;M.extend(_,{filterRow:\"tablesorter-filter-row\",filter:\"tablesorter-filter\",filterDisabled:\"disabled\",filterRowHide:\"hideme\"}),M.extend(o,{backSpace:8,escape:27,space:32,left:37,down:40}),z.addWidget({id:\"filter\",priority:50,options:{filter_cellFilter:\"\",filter_childRows:!1,filter_childByColumn:!1,filter_childWithSibs:!0,filter_columnAnyMatch:!0,filter_columnFilters:!0,filter_cssFilter:\"\",filter_defaultAttrib:\"data-value\",filter_defaultFilter:{},filter_excludeFilter:{},filter_external:\"\",filter_filteredRow:\"filtered\",filter_filterLabel:'Filter \"{{label}}\" column by...',filter_formatter:null,filter_functions:null,filter_hideEmpty:!0,filter_hideFilters:!1,filter_ignoreCase:!0,filter_liveSearch:!0,filter_matchType:{input:\"exact\",select:\"exact\"},filter_onlyAvail:\"filter-onlyAvail\",filter_placeholder:{search:\"\",select:\"\"},filter_reset:null,filter_resetOnEsc:!0,filter_saveFilters:!1,filter_searchDelay:300,filter_searchFiltered:!0,filter_selectSource:null,filter_selectSourceSeparator:\"|\",filter_serversideFiltering:!1,filter_startsWith:!1,filter_useParsedData:!1},format:function(e,t,r){t.$table.hasClass(\"hasFilters\")||I.init(e,t,r)},remove:function(e,t,r,i){var l,a,n=t.$table,s=t.$tbodies,o=\"addRows updateCell update updateRows updateComplete appendCache filterReset filterAndSortReset filterFomatterUpdate filterEnd search stickyHeadersInit \".split(\" \").join(t.namespace+\"filter \");if(n.removeClass(\"hasFilters\").unbind(o.replace(z.regex.spaces,\" \")).find(\".\"+_.filterRow).remove(),r.filter_initialized=!1,!i){for(l=0;l<s.length;l++)(a=z.processTbody(e,s.eq(l),!0)).children().removeClass(r.filter_filteredRow).show(),z.processTbody(e,a,!1);r.filter_reset&&M(document).undelegate(r.filter_reset,\"click\"+t.namespace+\"filter\")}}}),D=(I=z.filter={regex:{regex:/^\\/((?:\\\\\\/|[^\\/])+)\\/([migyu]{0,5})?$/,child:/tablesorter-childRow/,filtered:/filtered/,type:/undefined|number/,exact:/(^[\\\"\\'=]+)|([\\\"\\'=]+$)/g,operators:/[<>=]/g,query:\"(q|query)\",wild01:/\\?/g,wild0More:/\\*/g,quote:/\\\"/g,isNeg1:/(>=?\\s*-\\d)/,isNeg2:/(<=?\\s*\\d)/},types:{or:function(e,t,r){if(!D.orTest.test(t.iFilter)&&!D.orSplit.test(t.filter)||D.regex.test(t.filter))return null;var i,l,a,n=M.extend({},t),s=t.filter.split(D.orSplit),o=t.iFilter.split(D.orSplit),c=s.length;for(i=0;i<c;i++){n.nestedFilters=!0,n.filter=\"\"+(I.parseFilter(e,s[i],t)||\"\"),n.iFilter=\"\"+(I.parseFilter(e,o[i],t)||\"\"),a=\"(\"+(I.parseFilter(e,n.filter,t)||\"\")+\")\";try{if(l=new RegExp(t.isMatch?a:\"^\"+a+\"$\",e.widgetOptions.filter_ignoreCase?\"i\":\"\").test(n.exact)||I.processTypes(e,n,r))return l}catch(e){return null}}return l||!1},and:function(e,t,r){if(D.andTest.test(t.filter)){var i,l,a,n,s=M.extend({},t),o=t.filter.split(D.andSplit),c=t.iFilter.split(D.andSplit),f=o.length;for(i=0;i<f;i++){s.nestedFilters=!0,s.filter=\"\"+(I.parseFilter(e,o[i],t)||\"\"),s.iFilter=\"\"+(I.parseFilter(e,c[i],t)||\"\"),n=(\"(\"+(I.parseFilter(e,s.filter,t)||\"\")+\")\").replace(D.wild01,\"\\\\S{1}\").replace(D.wild0More,\"\\\\S*\");try{a=new RegExp(t.isMatch?n:\"^\"+n+\"$\",e.widgetOptions.filter_ignoreCase?\"i\":\"\").test(s.exact)||I.processTypes(e,s,r),l=0===i?a:l&&a}catch(e){return null}}return l||!1}return null},regex:function(e,t){if(D.regex.test(t.filter)){var r,i=t.filter_regexCache[t.index]||D.regex.exec(t.filter),l=i instanceof RegExp;try{l||(t.filter_regexCache[t.index]=i=new RegExp(i[1],i[2])),r=i.test(t.exact)}catch(e){r=!1}return r}return null},operators:function(e,t){if(D.operTest.test(t.iFilter)&&\"\"!==t.iExact){var r,i,l,a=e.table,n=t.parsed[t.index],s=z.formatFloat(t.iFilter.replace(D.operators,\"\"),a),o=e.parsers[t.index]||{},c=s;return!n&&\"numeric\"!==o.type||(l=M.trim(\"\"+t.iFilter.replace(D.operators,\"\")),s=\"number\"!=typeof(i=I.parseFilter(e,l,t,!0))||\"\"===i||isNaN(i)?s:i),r=!n&&\"numeric\"!==o.type||isNaN(s)||void 0===t.cache?(l=isNaN(t.iExact)?t.iExact.replace(z.regex.nondigit,\"\"):t.iExact,z.formatFloat(l,a)):t.cache,D.gtTest.test(t.iFilter)?i=D.gteTest.test(t.iFilter)?s<=r:s<r:D.ltTest.test(t.iFilter)&&(i=D.lteTest.test(t.iFilter)?r<=s:r<s),i||\"\"!==c||(i=!0),i}return null},notMatch:function(e,t){if(D.notTest.test(t.iFilter)){var r,i=t.iFilter.replace(\"!\",\"\"),l=I.parseFilter(e,i,t)||\"\";return D.exact.test(l)?\"\"===(l=l.replace(D.exact,\"\"))||M.trim(l)!==t.iExact:(r=t.iExact.search(M.trim(l)),\"\"===l||(t.anyMatch?r<0:!(e.widgetOptions.filter_startsWith?0===r:0<=r)))}return null},exact:function(e,t){if(D.exact.test(t.iFilter)){var r=t.iFilter.replace(D.exact,\"\"),i=I.parseFilter(e,r,t)||\"\";return t.anyMatch?0<=M.inArray(i,t.rowArray):i==t.iExact}return null},range:function(e,t){if(D.toTest.test(t.iFilter)){var r,i,l,a,n=e.table,s=t.index,o=t.parsed[s],c=t.iFilter.split(D.toSplit);return i=c[0].replace(z.regex.nondigit,\"\")||\"\",l=z.formatFloat(I.parseFilter(e,i,t),n),i=c[1].replace(z.regex.nondigit,\"\")||\"\",a=z.formatFloat(I.parseFilter(e,i,t),n),!o&&\"numeric\"!==e.parsers[s].type||(l=\"\"===(r=e.parsers[s].format(\"\"+c[0],n,e.$headers.eq(s),s))||isNaN(r)?l:r,a=\"\"===(r=e.parsers[s].format(\"\"+c[1],n,e.$headers.eq(s),s))||isNaN(r)?a:r),r=!o&&\"numeric\"!==e.parsers[s].type||isNaN(l)||isNaN(a)?(i=isNaN(t.iExact)?t.iExact.replace(z.regex.nondigit,\"\"):t.iExact,z.formatFloat(i,n)):t.cache,a<l&&(i=l,l=a,a=i),l<=r&&r<=a||\"\"===l||\"\"===a}return null},wild:function(e,t){if(D.wildOrTest.test(t.iFilter)){var r=\"\"+(I.parseFilter(e,t.iFilter,t)||\"\");!D.wildTest.test(r)&&t.nestedFilters&&(r=t.isMatch?r:\"^(\"+r+\")$\");try{return new RegExp(r.replace(D.wild01,\"\\\\S{1}\").replace(D.wild0More,\"\\\\S*\"),e.widgetOptions.filter_ignoreCase?\"i\":\"\").test(t.exact)}catch(e){return null}}return null},fuzzy:function(e,t){if(D.fuzzyTest.test(t.iFilter)){var r,i=0,l=t.iExact.length,a=t.iFilter.slice(1),n=I.parseFilter(e,a,t)||\"\";for(r=0;r<l;r++)t.iExact[r]===n[i]&&(i+=1);return i===n.length}return null}},init:function(r){z.language=M.extend(!0,{},{to:\"to\",or:\"or\",and:\"and\"},z.language);function e(e,t,r){return\"\"===(t=t.trim())?\"\":(e||\"\")+t+(r||\"\")}var t,i,l,a,n,s,o,c,f=r.config,d=f.widgetOptions;if(f.$table.addClass(\"hasFilters\"),f.lastSearch=[],d.filter_searchTimer=null,d.filter_initTimer=null,d.filter_formatterCount=0,d.filter_formatterInit=[],d.filter_anyColumnSelector='[data-column=\"all\"],[data-column=\"any\"]',d.filter_multipleColumnSelector='[data-column*=\"-\"],[data-column*=\",\"]',s=\"\\\\{\"+D.query+\"\\\\}\",M.extend(D,{child:new RegExp(f.cssChildRow),filtered:new RegExp(d.filter_filteredRow),alreadyFiltered:new RegExp(\"(\\\\s+(-\"+e(\"|\",z.language.or)+e(\"|\",z.language.to)+\")\\\\s+)\",\"i\"),toTest:new RegExp(\"\\\\s+(-\"+e(\"|\",z.language.to)+\")\\\\s+\",\"i\"),toSplit:new RegExp(\"(?:\\\\s+(?:-\"+e(\"|\",z.language.to)+\")\\\\s+)\",\"gi\"),andTest:new RegExp(\"\\\\s+(\"+e(\"\",z.language.and,\"|\")+\"&&)\\\\s+\",\"i\"),andSplit:new RegExp(\"(?:\\\\s+(?:\"+e(\"\",z.language.and,\"|\")+\"&&)\\\\s+)\",\"gi\"),orTest:new RegExp(\"(\\\\|\"+e(\"|\\\\s+\",z.language.or,\"\\\\s+\")+\")\",\"i\"),orSplit:new RegExp(\"(?:\\\\|\"+e(\"|\\\\s+(?:\",z.language.or,\")\\\\s+\")+\")\",\"gi\"),iQuery:new RegExp(s,\"i\"),igQuery:new RegExp(s,\"ig\"),operTest:/^[<>]=?/,gtTest:/>/,gteTest:/>=/,ltTest:/</,lteTest:/<=/,notTest:/^\\!/,wildOrTest:/[\\?\\*\\|]/,wildTest:/\\?\\*/,fuzzyTest:/^~/,exactTest:/[=\\\"\\|!]/}),s=f.$headers.filter(\".filter-false, .parser-false\").length,!1!==d.filter_columnFilters&&s!==f.$headers.length&&I.buildRow(r,f,d),l=\"addRows updateCell update updateRows updateComplete appendCache filterReset \"+\"filterAndSortReset filterResetSaved filterEnd search \".split(\" \").join(f.namespace+\"filter \"),f.$table.bind(l,function(e,t){return s=d.filter_hideEmpty&&M.isEmptyObject(f.cache)&&!(f.delayInit&&\"appendCache\"===e.type),f.$table.find(\".\"+_.filterRow).toggleClass(d.filter_filteredRow,s),/(search|filter)/.test(e.type)||(e.stopPropagation(),I.buildDefault(r,!0)),\"filterReset\"===e.type||\"filterAndSortReset\"===e.type?(f.$table.find(\".\"+_.filter).add(d.filter_$externalFilters).val(\"\"),\"filterAndSortReset\"===e.type?z.sortReset(this.config,function(){I.searching(r,[])}):I.searching(r,[])):\"filterResetSaved\"===e.type?z.storage(r,\"tablesorter-filters\",\"\"):\"filterEnd\"===e.type?I.buildDefault(r,!0):(t=\"search\"===e.type?t:\"updateComplete\"===e.type?f.$table.data(\"lastSearch\"):\"\",/(update|add)/.test(e.type)&&\"updateComplete\"!==e.type&&(f.lastCombinedFilter=null,f.lastSearch=[],setTimeout(function(){f.$table.triggerHandler(\"filterFomatterUpdate\")},100)),I.searching(r,t,!0)),!1}),d.filter_reset&&(d.filter_reset instanceof M?d.filter_reset.click(function(){f.$table.triggerHandler(\"filterReset\")}):M(d.filter_reset).length&&M(document).undelegate(d.filter_reset,\"click\"+f.namespace+\"filter\").delegate(d.filter_reset,\"click\"+f.namespace+\"filter\",function(){f.$table.triggerHandler(\"filterReset\")})),d.filter_functions)for(n=0;n<f.columns;n++)if(o=z.getColumnData(r,d.filter_functions,n))if(c=!((a=f.$headerIndexed[n].removeClass(\"filter-select\")).hasClass(\"filter-false\")||a.hasClass(\"parser-false\")),!(t=\"\")===o&&c)I.buildSelect(r,n);else if(\"object\"==typeof o&&c){for(i in o)\"string\"==typeof i&&(t+=\"\"===t?'<option value=\"\">'+(a.data(\"placeholder\")||a.attr(\"data-placeholder\")||d.filter_placeholder.select||\"\")+\"</option>\":\"\",0<=(l=s=i).indexOf(d.filter_selectSourceSeparator)&&(l=(s=i.split(d.filter_selectSourceSeparator))[1],s=s[0]),t+=\"<option \"+(l===s?\"\":'data-function-name=\"'+i+'\" ')+'value=\"'+s+'\">'+l+\"</option>\");f.$table.find(\"thead\").find(\"select.\"+_.filter+'[data-column=\"'+n+'\"]').append(t),(o=\"function\"==typeof(l=d.filter_selectSource)||z.getColumnData(r,l,n))&&I.buildSelect(f.table,n,\"\",!0,a.hasClass(d.filter_onlyAvail))}I.buildDefault(r,!0),I.bindSearch(r,f.$table.find(\".\"+_.filter),!0),d.filter_external&&I.bindSearch(r,d.filter_external),d.filter_hideFilters&&I.hideFilters(f),f.showProcessing&&(l=\"filterStart filterEnd \".split(\" \").join(f.namespace+\"filter-sp \"),f.$table.unbind(l.replace(z.regex.spaces,\" \")).bind(l,function(e,t){a=t?f.$table.find(\".\"+_.header).filter(\"[data-column]\").filter(function(){return\"\"!==t[M(this).data(\"column\")]}):\"\",z.isProcessing(r,\"filterStart\"===e.type,t?a:\"\")})),f.filteredRows=f.totalRows,l=\"tablesorter-initialized pagerBeforeInitialized \".split(\" \").join(f.namespace+\"filter \"),f.$table.unbind(l.replace(z.regex.spaces,\" \")).bind(l,function(){I.completeInit(this)}),f.pager&&f.pager.initialized&&!d.filter_initialized?(f.$table.triggerHandler(\"filterFomatterUpdate\"),setTimeout(function(){I.filterInitComplete(f)},100)):d.filter_initialized||I.completeInit(r)},completeInit:function(e){var t=e.config,r=t.widgetOptions,i=I.setDefaults(e,t,r)||[];i.length&&(t.delayInit&&\"\"===i.join(\"\")||z.setFilters(e,i,!0)),t.$table.triggerHandler(\"filterFomatterUpdate\"),setTimeout(function(){r.filter_initialized||I.filterInitComplete(t)},100)},formatterUpdated:function(e,t){var r=e&&e.closest(\"table\"),i=r.length&&r[0].config,l=i&&i.widgetOptions;l&&!l.filter_initialized&&(l.filter_formatterInit[t]=1)},filterInitComplete:function(e){function t(){l.filter_initialized=!0,e.lastSearch=e.$table.data(\"lastSearch\"),e.$table.triggerHandler(\"filterInit\",e),I.findRows(e.table,e.lastSearch||[]),z.debug(e,\"filter\")&&console.log(\"Filter >> Widget initialized\")}var r,i,l=e.widgetOptions,a=0;if(M.isEmptyObject(l.filter_formatter))t();else{for(i=l.filter_formatterInit.length,r=0;r<i;r++)1===l.filter_formatterInit[r]&&a++;clearTimeout(l.filter_initTimer),l.filter_initialized||a!==l.filter_formatterCount?l.filter_initialized||(l.filter_initTimer=setTimeout(function(){t()},500)):t()}},processFilters:function(e,t){var r,i=[],l=t?encodeURIComponent:decodeURIComponent,a=e.length;for(r=0;r<a;r++)e[r]&&(i[r]=l(e[r]));return i},setDefaults:function(e,t,r){var i,l,a,n,s,o=z.getFilters(e)||[];if(r.filter_saveFilters&&z.storage&&(l=z.storage(e,\"tablesorter-filters\")||[],(i=M.isArray(l))&&\"\"===l.join(\"\")||!i||(o=I.processFilters(l))),\"\"===o.join(\"\"))for(s=t.$headers.add(r.filter_$externalFilters).filter(\"[\"+r.filter_defaultAttrib+\"]\"),a=0;a<=t.columns;a++)n=a===t.columns?\"all\":a,o[a]=s.filter('[data-column=\"'+n+'\"]').attr(r.filter_defaultAttrib)||o[a]||\"\";return t.$table.data(\"lastSearch\",o),o},parseFilter:function(e,t,r,i){return i||r.parsed[r.index]?e.parsers[r.index].format(t,e.table,[],r.index):t},buildRow:function(e,t,r){var i,l,a,n,s,o,c,f,d,u=r.filter_cellFilter,h=t.columns,p=M.isArray(u),g='<tr role=\"search\" class=\"'+_.filterRow+\" \"+t.cssIgnoreRow+'\">';for(a=0;a<h;a++)t.$headerIndexed[a].length&&(g+=1<(d=t.$headerIndexed[a]&&t.$headerIndexed[a][0].colSpan||0)?'<td data-column=\"'+a+\"-\"+(a+d-1)+'\" colspan=\"'+d+'\"':'<td data-column=\"'+a+'\"',g+=p?u[a]?' class=\"'+u[a]+'\"':\"\":\"\"!==u?' class=\"'+u+'\"':\"\",g+=\"></td>\");for(t.$filters=M(g+=\"</tr>\").appendTo(t.$table.children(\"thead\").eq(0)).children(\"td\"),a=0;a<h;a++)o=!1,(n=t.$headerIndexed[a])&&n.length&&(i=I.getColumnElm(t,t.$filters,a),f=z.getColumnData(e,r.filter_functions,a),s=r.filter_functions&&f&&\"function\"!=typeof f||n.hasClass(\"filter-select\"),l=z.getColumnData(e,t.headers,a),o=\"false\"===z.getData(n[0],l,\"filter\")||\"false\"===z.getData(n[0],l,\"parser\"),s?g=M(\"<select>\").appendTo(i):((f=z.getColumnData(e,r.filter_formatter,a))?(r.filter_formatterCount++,(g=f(i,a))&&0===g.length&&(g=i.children(\"input\")),g&&(0===g.parent().length||g.parent().length&&g.parent()[0]!==i[0])&&i.append(g)):g=M('<input type=\"search\">').appendTo(i),g&&(d=n.data(\"placeholder\")||n.attr(\"data-placeholder\")||r.filter_placeholder.search||\"\",g.attr(\"placeholder\",d))),g&&(c=(M.isArray(r.filter_cssFilter)?void 0!==r.filter_cssFilter[a]&&r.filter_cssFilter[a]||\"\":r.filter_cssFilter)||\"\",g.addClass(_.filter+\" \"+c),d=(d=(c=r.filter_filterLabel).match(/{{([^}]+?)}}/g))||[\"{{label}}\"],M.each(d,function(e,t){var r=new RegExp(t,\"g\"),i=n.attr(\"data-\"+t.replace(/{{|}}/g,\"\")),l=void 0===i?n.text():i;c=c.replace(r,M.trim(l))}),g.attr({\"data-column\":i.attr(\"data-column\"),\"aria-label\":c}),o&&(g.attr(\"placeholder\",\"\").addClass(_.filterDisabled)[0].disabled=!0)))},bindSearch:function(l,e,t){if(l=M(l)[0],(e=M(e)).length){var r,a=l.config,n=a.widgetOptions,i=a.namespace+\"filter\",s=n.filter_$externalFilters;!0!==t&&(r=n.filter_anyColumnSelector+\",\"+n.filter_multipleColumnSelector,n.filter_$anyMatch=e.filter(r),s&&s.length?n.filter_$externalFilters=n.filter_$externalFilters.add(e):n.filter_$externalFilters=e,z.setFilters(l,a.$table.data(\"lastSearch\")||[],!1===t)),r=\"keypress keyup keydown search change input \".split(\" \").join(i+\" \"),e.attr(\"data-lastSearchTime\",(new Date).getTime()).unbind(r.replace(z.regex.spaces,\" \")).bind(\"keydown\"+i,function(e){if(e.which===o.escape&&!l.config.widgetOptions.filter_resetOnEsc)return!1}).bind(\"keyup\"+i,function(e){n=l.config.widgetOptions;var t=parseInt(M(this).attr(\"data-column\"),10),r=\"boolean\"==typeof n.filter_liveSearch?n.filter_liveSearch:z.getColumnData(l,n.filter_liveSearch,t);if(void 0===r&&(r=n.filter_liveSearch.fallback||!1),M(this).attr(\"data-lastSearchTime\",(new Date).getTime()),e.which===o.escape)this.value=n.filter_resetOnEsc?\"\":a.lastSearch[t];else{if(\"\"!==this.value&&(\"number\"==typeof r&&this.value.length<r||e.which!==o.enter&&e.which!==o.backSpace&&(e.which<o.space||e.which>=o.left&&e.which<=o.down)))return;if(!1===r&&\"\"!==this.value&&e.which!==o.enter)return}I.searching(l,!0,!0,t)}).bind(\"search change keypress input blur \".split(\" \").join(i+\" \"),function(e){var t=parseInt(M(this).attr(\"data-column\"),10),r=e.type,i=\"boolean\"==typeof n.filter_liveSearch?n.filter_liveSearch:z.getColumnData(l,n.filter_liveSearch,t);!l.config.widgetOptions.filter_initialized||e.which!==o.enter&&\"search\"!==r&&\"blur\"!==r&&(\"change\"!==r&&\"input\"!==r||!0!==i&&(!0===i||\"INPUT\"===e.target.nodeName)||this.value===a.lastSearch[t])||(e.preventDefault(),M(this).attr(\"data-lastSearchTime\",(new Date).getTime()),I.searching(l,\"keypress\"!==r||e.which===o.enter,!0,t))})}},searching:function(e,t,r,i){var l,a=e.config.widgetOptions;void 0===i?l=!1:void 0===(l=\"boolean\"==typeof a.filter_liveSearch?a.filter_liveSearch:z.getColumnData(e,a.filter_liveSearch,i))&&(l=a.filter_liveSearch.fallback||!1),clearTimeout(a.filter_searchTimer),void 0===t||!0===t?a.filter_searchTimer=setTimeout(function(){I.checkFilters(e,t,r)},l?a.filter_searchDelay:10):I.checkFilters(e,t,r)},equalFilters:function(e,t,r){var i,l=[],a=[],n=e.columns+1;for(t=M.isArray(t)?t:[],r=M.isArray(r)?r:[],i=0;i<n;i++)l[i]=t[i]||\"\",a[i]=r[i]||\"\";return l.join(\",\")===a.join(\",\")},checkFilters:function(e,t,r){var i=e.config,l=i.widgetOptions,a=M.isArray(t),n=a?t:z.getFilters(e,!0),s=n||[];if(M.isEmptyObject(i.cache))i.delayInit&&(!i.pager||i.pager&&i.pager.initialized)&&z.updateCache(i,function(){I.checkFilters(e,!1,r)});else{if(a&&(z.setFilters(e,n,!1,!0!==r),l.filter_initialized||(i.lastSearch=[],i.lastCombinedFilter=\"\")),l.filter_hideFilters&&i.$table.find(\".\"+_.filterRow).triggerHandler(I.hideFiltersCheck(i)?\"mouseleave\":\"mouseenter\"),I.equalFilters(i,i.lastSearch,s)){if(!1!==t)return;i.lastCombinedFilter=\"\",i.lastSearch=[]}if(n=n||[],n=Array.prototype.map?n.map(String):n.join(\"�\").split(\"�\"),l.filter_initialized&&i.$table.triggerHandler(\"filterStart\",[n]),!i.showProcessing)return I.findRows(e,n,s),!1;setTimeout(function(){return I.findRows(e,n,s),!1},30)}},hideFiltersCheck:function(e){if(\"function\"==typeof e.widgetOptions.filter_hideFilters){var t=e.widgetOptions.filter_hideFilters(e);if(\"boolean\"==typeof t)return t}return\"\"===z.getFilters(e.$table).join(\"\")},hideFilters:function(i,e){var l;(e||i.$table).find(\".\"+_.filterRow).addClass(_.filterRowHide).bind(\"mouseenter mouseleave\",function(e){var t=e,r=M(this);clearTimeout(l),l=setTimeout(function(){/enter|over/.test(t.type)?r.removeClass(_.filterRowHide):M(document.activeElement).closest(\"tr\")[0]!==r[0]&&r.toggleClass(_.filterRowHide,I.hideFiltersCheck(i))},200)}).find(\"input, select\").bind(\"focus blur\",function(e){var t=e,r=M(this).closest(\"tr\");clearTimeout(l),l=setTimeout(function(){clearTimeout(l),r.toggleClass(_.filterRowHide,I.hideFiltersCheck(i)&&\"focus\"!==t.type)},200)})},defaultFilter:function(e,t){if(\"\"===e)return e;var r=D.iQuery,i=t.match(D.igQuery).length,l=1<i?M.trim(e).split(/\\s/):[M.trim(e)],a=l.length-1,n=0,s=t;for(a<1&&1<i&&(l[1]=l[0]);r.test(s);)s=s.replace(r,l[n++]||\"\"),r.test(s)&&n<a&&\"\"!==(l[n]||\"\")&&(s=t.replace(r,s));return s},getLatestSearch:function(e){return e?e.sort(function(e,t){return M(t).attr(\"data-lastSearchTime\")-M(e).attr(\"data-lastSearchTime\")}):e||M()},findRange:function(e,t,r){var i,l,a,n,s,o,c,f,d,u=[];if(/^[0-9]+$/.test(t))return[parseInt(t,10)];if(!r&&/-/.test(t))for(d=(l=t.match(/(\\d+)\\s*-\\s*(\\d+)/g))?l.length:0,f=0;f<d;f++){for(a=l[f].split(/\\s*-\\s*/),n=parseInt(a[0],10)||0,(s=parseInt(a[1],10)||e.columns-1)<n&&(i=n,n=s,s=i),s>=e.columns&&(s=e.columns-1);n<=s;n++)u[u.length]=n;t=t.replace(l[f],\"\")}if(!r&&/,/.test(t))for(d=(o=t.split(/\\s*,\\s*/)).length,c=0;c<d;c++)\"\"!==o[c]&&(f=parseInt(o[c],10))<e.columns&&(u[u.length]=f);if(!u.length)for(f=0;f<e.columns;f++)u[u.length]=f;return u},getColumnElm:function(t,e,r){return e.filter(function(){var e=I.findRange(t,M(this).attr(\"data-column\"));return-1<M.inArray(r,e)})},multipleColumns:function(e,t){var r=e.widgetOptions,i=r.filter_initialized||!t.filter(r.filter_anyColumnSelector).length,l=M.trim(I.getLatestSearch(t).attr(\"data-column\")||\"\");return I.findRange(e,l,!i)},processTypes:function(e,t,r){var i,l=null,a=null;for(i in I.types)M.inArray(i,r.excludeMatch)<0&&null===a&&null!==(a=I.types[i](e,t,r))&&(t.matchedOn=i,l=a);return l},matchType:function(e,t){var r=e.widgetOptions,i=e.$headerIndexed[t];return!i.hasClass(\"filter-exact\")&&(!!i.hasClass(\"filter-match\")||(r.filter_columnFilters?i=e.$filters.find(\".\"+_.filter).add(r.filter_$externalFilters).filter('[data-column=\"'+t+'\"]'):r.filter_$externalFilters&&(i=r.filter_$externalFilters.filter('[data-column=\"'+t+'\"]')),!!i.length&&\"match\"===e.widgetOptions.filter_matchType[(i[0].nodeName||\"\").toLowerCase()]))},processRow:function(t,r,e){var i,l,a,n,s,o=t.widgetOptions,c=!0,f=o.filter_$anyMatch&&o.filter_$anyMatch.length,d=o.filter_$anyMatch&&o.filter_$anyMatch.length?I.multipleColumns(t,o.filter_$anyMatch):[];if(r.$cells=r.$row.children(),r.matchedOn=null,r.anyMatchFlag&&1<d.length||r.anyMatchFilter&&!f){if(r.anyMatch=!0,r.isMatch=!0,r.rowArray=r.$cells.map(function(e){if(-1<M.inArray(e,d)||r.anyMatchFilter&&!f)return r.parsed[e]?s=r.cacheArray[e]:(s=r.rawArray[e],s=M.trim(o.filter_ignoreCase?s.toLowerCase():s),t.sortLocaleCompare&&(s=z.replaceAccents(s))),s}).get(),r.filter=r.anyMatchFilter,r.iFilter=r.iAnyMatchFilter,r.exact=r.rowArray.join(\" \"),r.iExact=o.filter_ignoreCase?r.exact.toLowerCase():r.exact,r.cache=r.cacheArray.slice(0,-1).join(\" \"),e.excludeMatch=e.noAnyMatch,null!==(l=I.processTypes(t,r,e)))c=l;else if(o.filter_startsWith)for(c=!1,d=Math.min(t.columns,r.rowArray.length);!c&&0<d;)d--,c=c||0===r.rowArray[d].indexOf(r.iFilter);else c=0<=(r.iExact+r.childRowText).indexOf(r.iFilter);if(r.anyMatch=!1,r.filters.join(\"\")===r.filter)return c}for(d=0;d<t.columns;d++)r.filter=r.filters[d],r.index=d,e.excludeMatch=e.excludeFilter[d],r.filter&&(r.cache=r.cacheArray[d],i=r.parsed[d]?r.cache:r.rawArray[d]||\"\",r.exact=t.sortLocaleCompare?z.replaceAccents(i):i,r.iExact=!D.type.test(typeof r.exact)&&o.filter_ignoreCase?r.exact.toLowerCase():r.exact,r.isMatch=I.matchType(t,d),i=c,n=o.filter_columnFilters&&t.$filters.add(o.filter_$externalFilters).filter('[data-column=\"'+d+'\"]').find(\"select option:selected\").attr(\"data-function-name\")||\"\",t.sortLocaleCompare&&(r.filter=z.replaceAccents(r.filter)),o.filter_defaultFilter&&D.iQuery.test(e.defaultColFilter[d])&&(r.filter=I.defaultFilter(r.filter,e.defaultColFilter[d])),r.iFilter=o.filter_ignoreCase?(r.filter||\"\").toLowerCase():r.filter,l=null,(a=e.functions[d])&&(\"function\"==typeof a?l=a(r.exact,r.cache,r.filter,d,r.$row,t,r):\"function\"==typeof a[n||r.filter]&&(l=a[s=n||r.filter](r.exact,r.cache,r.filter,d,r.$row,t,r))),c=!!(i=null===l?(l=I.processTypes(t,r,e),s=!0===a&&(\"and\"===r.matchedOn||\"or\"===r.matchedOn),null===l||s?!0===a?r.isMatch?0<=(\"\"+r.iExact).search(r.iFilter):r.filter===r.exact:(s=(r.iExact+r.childRowText).indexOf(I.parseFilter(t,r.iFilter,r)),!o.filter_startsWith&&0<=s||o.filter_startsWith&&0===s):l):l)&&c);return c},findRows:function(e,r,t){if(!I.equalFilters(e.config,e.config.lastSearch,t)&&e.config.widgetOptions.filter_initialized){var i,l,a,n,s,o,c,f,d,u,h,p,g,m,_,y,F,w,x,b,C,v,$,S=M.extend([],r),R=e.config,T=R.widgetOptions,A=z.debug(R,\"filter\"),O={anyMatch:!1,filters:r,filter_regexCache:[]},E={noAnyMatch:[\"range\",\"operators\"],functions:[],excludeFilter:[],defaultColFilter:[],defaultAnyFilter:z.getColumnData(e,T.filter_defaultFilter,R.columns,!0)||\"\"};for(O.parsed=[],d=0;d<R.columns;d++)O.parsed[d]=T.filter_useParsedData||R.parsers&&R.parsers[d]&&R.parsers[d].parsed||z.getData&&\"parsed\"===z.getData(R.$headerIndexed[d],z.getColumnData(e,R.headers,d),\"filter\")||R.$headerIndexed[d].hasClass(\"filter-parsed\"),E.functions[d]=z.getColumnData(e,T.filter_functions,d)||R.$headerIndexed[d].hasClass(\"filter-select\"),E.defaultColFilter[d]=z.getColumnData(e,T.filter_defaultFilter,d)||\"\",E.excludeFilter[d]=(z.getColumnData(e,T.filter_excludeFilter,d,!0)||\"\").split(/\\s+/);for(A&&(console.log(\"Filter >> Starting filter widget search\",r),m=new Date),R.filteredRows=0,t=S||[],c=R.totalRows=0;c<R.$tbodies.length;c++){if(f=z.processTbody(e,R.$tbodies.eq(c),!0),d=R.columns,l=R.cache[c].normalized,n=M(M.map(l,function(e){return e[d].$row.get()})),\"\"===t.join(\"\")||T.filter_serversideFiltering)n.removeClass(T.filter_filteredRow).not(\".\"+R.cssChildRow).css(\"display\",\"\");else{if(i=(n=n.not(\".\"+R.cssChildRow)).length,(T.filter_$anyMatch&&T.filter_$anyMatch.length||void 0!==r[R.columns])&&(O.anyMatchFlag=!0,O.anyMatchFilter=\"\"+(r[R.columns]||T.filter_$anyMatch&&I.getLatestSearch(T.filter_$anyMatch).val()||\"\"),T.filter_columnAnyMatch)){for(x=O.anyMatchFilter.split(D.andSplit),b=!1,y=0;y<x.length;y++)1<(C=x[y].split(\":\")).length&&(isNaN(C[0])?M.each(R.headerContent,function(e,t){-1<t.toLowerCase().indexOf(C[0])&&(r[v=e]=C[1])}):v=parseInt(C[0],10)-1,0<=v&&v<R.columns&&(r[v]=C[1],x.splice(y,1),y--,b=!0));b&&(O.anyMatchFilter=x.join(\" && \"))}if(w=T.filter_searchFiltered,h=R.lastSearch||R.$table.data(\"lastSearch\")||[],w)for(y=0;y<d+1;y++)_=r[y]||\"\",w||(y=d),w=w&&h.length&&0===_.indexOf(h[y]||\"\")&&!D.alreadyFiltered.test(_)&&!D.exactTest.test(_)&&!(D.isNeg1.test(_)||D.isNeg2.test(_))&&!(\"\"!==_&&R.$filters&&R.$filters.filter('[data-column=\"'+y+'\"]').find(\"select\").length&&!I.matchType(R,y));for(F=n.not(\".\"+T.filter_filteredRow).length,w&&0===F&&(w=!1),A&&console.log(\"Filter >> Searching through \"+(w&&F<i?F:\"all\")+\" rows\"),O.anyMatchFlag&&(R.sortLocaleCompare&&(O.anyMatchFilter=z.replaceAccents(O.anyMatchFilter)),T.filter_defaultFilter&&D.iQuery.test(E.defaultAnyFilter)&&(O.anyMatchFilter=I.defaultFilter(O.anyMatchFilter,E.defaultAnyFilter),w=!1),O.iAnyMatchFilter=T.filter_ignoreCase&&R.ignoreCase?O.anyMatchFilter.toLowerCase():O.anyMatchFilter),o=0;o<i;o++)if($=n[o].className,!(o&&D.child.test($)||w&&D.filtered.test($))){if(O.$row=n.eq(o),O.rowIndex=o,O.cacheArray=l[o],a=O.cacheArray[R.columns],O.rawArray=a.raw,O.childRowText=\"\",!T.filter_childByColumn){for($=\"\",u=a.child,y=0;y<u.length;y++)$+=\" \"+u[y].join(\" \")||\"\";O.childRowText=T.filter_childRows?T.filter_ignoreCase?$.toLowerCase():$:\"\"}if(p=!1,g=I.processRow(R,O,E),s=a.$row,_=!!g,u=a.$row.filter(\":gt(0)\"),T.filter_childRows&&u.length){if(T.filter_childByColumn)for(T.filter_childWithSibs||(u.addClass(T.filter_filteredRow),s=s.eq(0)),y=0;y<u.length;y++)O.$row=u.eq(y),O.cacheArray=a.child[y],O.rawArray=O.cacheArray,_=I.processRow(R,O,E),p=p||_,!T.filter_childWithSibs&&_&&u.eq(y).removeClass(T.filter_filteredRow);p=p||g}else p=_;s.toggleClass(T.filter_filteredRow,!p)[0].display=p?\"\":\"none\"}}R.filteredRows+=n.not(\".\"+T.filter_filteredRow).length,R.totalRows+=n.length,z.processTbody(e,f,!1)}R.lastCombinedFilter=S.join(\"\"),R.lastSearch=S,R.$table.data(\"lastSearch\",S),T.filter_saveFilters&&z.storage&&z.storage(e,\"tablesorter-filters\",I.processFilters(S,!0)),A&&console.log(\"Filter >> Completed search\"+z.benchmark(m)),T.filter_initialized&&(R.$table.triggerHandler(\"filterBeforeEnd\",R),R.$table.triggerHandler(\"filterEnd\",R)),setTimeout(function(){z.applyWidget(R.table)},0)}},getOptionSource:function(e,t,r){var i=(e=M(e)[0]).config,l=!1,a=i.widgetOptions.filter_selectSource,n=i.$table.data(\"lastSearch\")||[],s=\"function\"==typeof a||z.getColumnData(e,a,t);if(r&&\"\"!==n[t]&&(r=!1),!0===s)l=a(e,t,r);else{if(s instanceof M||\"string\"===M.type(s)&&0<=s.indexOf(\"</option>\"))return s;if(M.isArray(s))l=s;else if(\"object\"===M.type(a)&&s&&null===(l=s(e,t,r)))return null}return!1===l&&(l=I.getOptions(e,t,r)),I.processOptions(e,t,l)},processOptions:function(l,a,r){if(!M.isArray(r))return!1;var n,e,t,i,s,o,c=(l=M(l)[0]).config,f=null!=a&&0<=a&&a<c.columns,d=f&&c.$headerIndexed[a].hasClass(\"filter-select-sort-desc\"),u=[];if(r=M.grep(r,function(e,t){return!!e.text||M.inArray(e,r)===t}),f&&c.$headerIndexed[a].hasClass(\"filter-select-nosort\"))return r;for(i=r.length,t=0;t<i;t++)o=(e=r[t]).text?e.text:e,s=(f&&c.parsers&&c.parsers.length&&c.parsers[a].format(o,l,[],a)||o).toString(),s=c.widgetOptions.filter_ignoreCase?s.toLowerCase():s,e.text?(e.parsed=s,u[u.length]=e):u[u.length]={text:e,parsed:s};for(n=c.textSorter||\"\",u.sort(function(e,t){var r=d?t.parsed:e.parsed,i=d?e.parsed:t.parsed;return f&&\"function\"==typeof n?n(r,i,!0,a,l):f&&\"object\"==typeof n&&n.hasOwnProperty(a)?n[a](r,i,!0,a,l):!z.sortNatural||z.sortNatural(r,i)}),r=[],i=u.length,t=0;t<i;t++)r[r.length]=u[t];return r},getOptions:function(e,t,r){var i,l,a,n,s,o,c,f,d=(e=M(e)[0]).config,u=d.widgetOptions,h=[];for(l=0;l<d.$tbodies.length;l++)for(s=d.cache[l],a=d.cache[l].normalized.length,i=0;i<a;i++)if(n=s.row?s.row[i]:s.normalized[i][d.columns].$row[0],!r||!n.className.match(u.filter_filteredRow))if(u.filter_useParsedData||d.parsers[t].parsed||d.$headerIndexed[t].hasClass(\"filter-parsed\")){if(h[h.length]=\"\"+s.normalized[i][t],u.filter_childRows&&u.filter_childByColumn)for(f=s.normalized[i][d.columns].$row.length-1,o=0;o<f;o++)h[h.length]=\"\"+s.normalized[i][d.columns].child[o][t]}else if(h[h.length]=s.normalized[i][d.columns].raw[t],u.filter_childRows&&u.filter_childByColumn)for(f=s.normalized[i][d.columns].$row.length,o=1;o<f;o++)c=s.normalized[i][d.columns].$row.eq(o).children().eq(t),h[h.length]=\"\"+z.getElementText(d,c,t);return h},buildSelect:function(e,t,r,i,l){if(e=M(e)[0],t=parseInt(t,10),e.config.cache&&!M.isEmptyObject(e.config.cache)){var a,n,s,o,c,f,d,u=e.config,h=u.widgetOptions,p=u.$headerIndexed[t],g='<option value=\"\">'+(p.data(\"placeholder\")||p.attr(\"data-placeholder\")||h.filter_placeholder.select||\"\")+\"</option>\",m=u.$table.find(\"thead\").find(\"select.\"+_.filter+'[data-column=\"'+t+'\"]').val();if(void 0!==r&&\"\"!==r||null!==(r=I.getOptionSource(e,t,l))){if(M.isArray(r)){for(a=0;a<r.length;a++)if((d=r[a]).text){for(n in d[\"data-function-name\"]=void 0===d.value?d.text:d.value,g+=\"<option\",d)d.hasOwnProperty(n)&&\"text\"!==n&&(g+=\" \"+n+'=\"'+d[n].replace(D.quote,\"&quot;\")+'\"');d.value||(g+=' value=\"'+d.text.replace(D.quote,\"&quot;\")+'\"'),g+=\">\"+d.text.replace(D.quote,\"&quot;\")+\"</option>\"}else\"\"+d!=\"[object Object]\"&&(0<=(n=s=d=(\"\"+d).replace(D.quote,\"&quot;\")).indexOf(h.filter_selectSourceSeparator)&&(n=(o=s.split(h.filter_selectSourceSeparator))[0],s=o[1]),g+=\"\"!==d?\"<option \"+(n===s?\"\":'data-function-name=\"'+d+'\" ')+'value=\"'+n+'\">'+s+\"</option>\":\"\");r=[]}c=(u.$filters?u.$filters:u.$table.children(\"thead\")).find(\".\"+_.filter),h.filter_$externalFilters&&(c=c&&c.length?c.add(h.filter_$externalFilters):h.filter_$externalFilters),(f=c.filter('select[data-column=\"'+t+'\"]')).length&&(f[i?\"html\":\"append\"](g),M.isArray(r)||f.append(r).val(m),f.val(m))}}},buildDefault:function(e,t){var r,i,l,a=e.config,n=a.widgetOptions,s=a.columns;for(r=0;r<s;r++)l=!((i=a.$headerIndexed[r]).hasClass(\"filter-false\")||i.hasClass(\"parser-false\")),(i.hasClass(\"filter-select\")||!0===z.getColumnData(e,n.filter_functions,r))&&l&&I.buildSelect(e,r,\"\",t,i.hasClass(n.filter_onlyAvail))}}).regex,z.getFilters=function(e,t,r,i){var l,a,n,s,o=[],c=e?M(e)[0].config:\"\",f=c?c.widgetOptions:\"\";if(!0!==t&&f&&!f.filter_columnFilters||M.isArray(r)&&I.equalFilters(c,r,c.lastSearch))return M(e).data(\"lastSearch\")||[];if(c&&(c.$filters&&(a=c.$filters.find(\".\"+_.filter)),f.filter_$externalFilters&&(a=a&&a.length?a.add(f.filter_$externalFilters):f.filter_$externalFilters),a&&a.length))for(o=r||[],l=0;l<c.columns+1;l++)s=l===c.columns?f.filter_anyColumnSelector+\",\"+f.filter_multipleColumnSelector:'[data-column=\"'+l+'\"]',(n=a.filter(s)).length&&(n=I.getLatestSearch(n),M.isArray(r)?(i&&1<n.length&&(n=n.slice(1)),l===c.columns&&(n=(s=n.filter(f.filter_anyColumnSelector)).length?s:n),n.val(r[l]).trigger(\"change\"+c.namespace)):(o[l]=n.val()||\"\",l===c.columns?n.slice(1).filter('[data-column*=\"'+n.attr(\"data-column\")+'\"]').val(o[l]):n.slice(1).val(o[l])),l===c.columns&&n.length&&(f.filter_$anyMatch=n));return o},z.setFilters=function(e,t,r,i){var l=e?M(e)[0].config:\"\",a=z.getFilters(e,!0,t,i);return void 0===r&&(r=!0),l&&r&&(l.lastCombinedFilter=null,l.lastSearch=[],I.searching(l.table,t,i),l.$table.triggerHandler(\"filterFomatterUpdate\")),0!==a.length}}(jQuery);return jQuery;}));\r\n","(function(factory){if (typeof define === 'function' && define.amd){define(['jquery'], factory);} else if (typeof module === 'object' && typeof module.exports === 'object'){module.exports = factory(require('jquery'));} else {factory(jQuery);}}(function(jQuery){\r\n\r\n!function(h){\"use strict\";var f=h.tablesorter,c=\".tscolsel\",S=f.columnSelector={queryAll:\"@media only all { [columns] { display: none; } } \",queryBreak:\"@media all and (min-width: [size]) { [columns] { display: table-cell; } } \",init:function(e,t,o){var l,a,n=f.debug(t,\"columnSelector\");(l=h(o.columnSelector_layout)).find(\"input\").add(l.filter(\"input\")).length?(t.$table.addClass(t.namespace.slice(1)+\"columnselector\"),(a=t.selector={$container:h(o.columnSelector_container||\"<div>\")}).$style=h(\"<style></style>\").prop(\"disabled\",!0).appendTo(\"head\"),a.$breakpoints=h(\"<style></style>\").prop(\"disabled\",!0).appendTo(\"head\"),a.isInitializing=!0,S.setUpColspan(t,o),S.setupSelector(t,o),o.columnSelector_mediaquery&&S.setupBreakpoints(t,o),a.isInitializing=!1,a.$container.length?S.updateCols(t,o):n&&console.warn(\"ColumnSelector >> container not found\"),t.$table.off(\"refreshColumnSelector\"+c).on(\"refreshColumnSelector\"+c,function(e,t,o){S.refreshColumns(this.config,t,o)}),n&&console.log(\"ColumnSelector >> Widget initialized\")):n&&console.error(\"ColumnSelector >> ERROR: Column Selector aborting, no input found in the layout! ***\")},refreshColumns:function(e,t,o){var l,a,n,c,r=e.selector,s=h.isArray(o||t),i=e.widgetOptions;if(null!=t&&r.$container.length){if(\"selectors\"===t&&(r.$container.empty(),S.setupSelector(e,i),S.setupBreakpoints(e,i),void 0===o&&null!==o&&(o=r.auto)),s)for(a=o||t,h.each(a,function(e,t){a[e]=parseInt(t,10)}),l=0;l<e.columns;l++)c=0<=h.inArray(l,a),(n=r.$container.find(\"input[data-column=\"+l+\"]\")).length&&(n.prop(\"checked\",c),r.states[l]=c);c=!0===o||!0===t||\"auto\"===t&&!1!==o,n=r.$container.find('input[data-column=\"auto\"]').prop(\"checked\",c),S.updateAuto(e,i,n)}else S.updateBreakpoints(e,i),S.updateCols(e,i);S.saveValues(e,i),S.adjustColspans(e,i)},setupSelector:function(t,o){var e,l,a,n,c,r,s,i=t.selector,u=i.$container,d=o.columnSelector_saveColumns&&f.storage,p=d?f.storage(t.table,\"tablesorter-columnSelector\"):[],m=d?f.storage(t.table,\"tablesorter-columnSelector-auto\"):{};for(i.auto=h.isEmptyObject(m)||\"boolean\"!==h.type(m.auto)?o.columnSelector_mediaqueryState:m.auto,i.states=[],i.$column=[],i.$wrapper=[],i.$checkbox=[],e=0;e<t.columns;e++)n=(a=t.$headerIndexed[e]).attr(o.columnSelector_priority)||1,r=a.attr(\"data-column\"),c=f.getColumnData(t.table,t.headers,r),m=f.getData(a,c,\"columnSelector\"),isNaN(n)&&0<n.length||\"disable\"===m||o.columnSelector_columns[r]&&\"disable\"===o.columnSelector_columns[r]?i.states[r]=null:(i.states[r]=p&&void 0!==p[r]&&null!==p[r]?p[r]:void 0!==o.columnSelector_columns[r]&&null!==o.columnSelector_columns[r]?o.columnSelector_columns[r]:\"true\"===m||\"false\"!==m,i.$column[r]=h(this),u.length&&(l=a.attr(o.columnSelector_name)||a.text().trim(),\"function\"==typeof o.columnSelector_layoutCustomizer&&(s=a.find(\".\"+f.css.headerIn),l=o.columnSelector_layoutCustomizer(s.length?s:a,l,parseInt(r,10))),i.$wrapper[r]=h(o.columnSelector_layout.replace(/\\{name\\}/g,l)).appendTo(u),i.$checkbox[r]=i.$wrapper[r].find(\"input\").add(i.$wrapper[r].filter(\"input\")).attr(\"data-column\",r).toggleClass(o.columnSelector_cssChecked,i.states[r]).prop(\"checked\",i.states[r]).on(\"change\",function(){if(!i.isInitializing){var e=h(this).attr(\"data-column\");if(!S.checkChange(t,this.checked))return this.checked=!this.checked,!1;t.selector.states[e]=this.checked,S.updateCols(t,o)}}).change()))},checkChange:function(e,t){for(var o=e.widgetOptions,l=o.columnSelector_maxVisible,a=o.columnSelector_minVisible,n=e.selector.states,c=n.length,r=0;0<=c--;)n[c]&&r++;return!(t&null!==l&&l<=r||!t&&null!==a&&r<=a)},setupBreakpoints:function(e,t){var o=e.selector;t.columnSelector_mediaquery&&(o.lastIndex=-1,S.updateBreakpoints(e,t),e.$table.off(\"updateAll\"+c).on(\"updateAll\"+c,function(){S.setupSelector(e,t),S.setupBreakpoints(e,t),S.updateBreakpoints(e,t),S.updateCols(e,t)})),o.$container.length&&(t.columnSelector_mediaquery&&(o.$auto=h(t.columnSelector_layout.replace(/\\{name\\}/g,t.columnSelector_mediaqueryName)).prependTo(o.$container),o.$auto.find(\"input\").add(o.$auto.filter(\"input\")).attr(\"data-column\",\"auto\").prop(\"checked\",o.auto).toggleClass(t.columnSelector_cssChecked,o.auto).on(\"change\",function(){S.updateAuto(e,t,h(this))}).change()),e.$table.off(\"update\"+c).on(\"update\"+c,function(){S.updateCols(e,t)}))},updateAuto:function(e,t,o){var l=e.selector;l.auto=o.prop(\"checked\")||!1,h.each(l.$checkbox,function(e,t){t&&(t[0].disabled=l.auto,l.$wrapper[e].toggleClass(\"disabled\",l.auto))}),t.columnSelector_mediaquery&&S.updateBreakpoints(e,t),S.updateCols(e,t),e.selector.$popup&&e.selector.$popup.find(\".tablesorter-column-selector\").html(l.$container.html()).find(\"input\").each(function(){var e=h(this).attr(\"data-column\");h(this).prop(\"checked\",\"auto\"===e?l.auto:l.states[e])}),S.saveValues(e,t),S.adjustColspans(e,t),l.auto&&e.$table.triggerHandler(t.columnSelector_updated)},addSelectors:function(e,t,o){var l=[],a=\" col:nth-child(\"+o+\")\";return l.push(t+a+\",\"+t+\"_extra_table\"+a),a=\" tr:not(.\"+e.columnSelector_classHasSpan+') th[data-column=\"'+(o-1)+'\"]',l.push(t+a+\",\"+t+\"_extra_table\"+a),a=\" tr:not(.\"+e.columnSelector_classHasSpan+\") td:nth-child(\"+o+\")\",l.push(t+a+\",\"+t+\"_extra_table\"+a),a=\" tr td:not(\"+t+e.columnSelector_classHasSpan+')[data-column=\"'+(o-1)+'\"]',l.push(t+a+\",\"+t+\"_extra_table\"+a),l},updateBreakpoints:function(e,t){var o,l,a,n,c=[],r=e.selector,s=e.namespace+\"columnselector\",i=[],u=\"\";if(t.columnSelector_mediaquery&&!r.auto)return r.$breakpoints.prop(\"disabled\",!0),void r.$style.prop(\"disabled\",!1);if(t.columnSelector_mediaqueryHidden)for(a=0;a<e.columns;a++)l=f.getColumnData(e.table,e.headers,a),c[a+1]=\"false\"===f.getData(e.$headerIndexed[a],l,\"columnSelector\"),c[a+1]&&(i=i.concat(S.addSelectors(t,s,a+1)));for(o=0;o<t.columnSelector_maxPriorities;o++)n=[],e.$headers.filter(\"[\"+t.columnSelector_priority+\"=\"+(o+1)+\"]\").each(function(){a=parseInt(h(this).attr(\"data-column\"),10)+1,c[a]||(n=n.concat(S.addSelectors(t,s,a)))}),n.length&&(i=i.concat(n),u+=S.queryBreak.replace(/\\[size\\]/g,t.columnSelector_breakpoints[o]).replace(/\\[columns\\]/g,n.join(\",\")));r.$style&&r.$style.prop(\"disabled\",!0),i.length&&r.$breakpoints.prop(\"disabled\",!1).text(S.queryAll.replace(/\\[columns\\]/g,i.join(\",\"))+u)},updateCols:function(e,t){if(!(t.columnSelector_mediaquery&&e.selector.auto||e.selector.isInitializing)){var o,l=e.selector,a=[],n=e.namespace+\"columnselector\";l.$container.find(\"input[data-column]\").filter('[data-column!=\"auto\"]').each(function(){this.checked||(o=parseInt(h(this).attr(\"data-column\"),10)+1,a=a.concat(S.addSelectors(t,n,o))),h(this).toggleClass(t.columnSelector_cssChecked,this.checked)}),t.columnSelector_mediaquery&&l.$breakpoints.prop(\"disabled\",!0),l.$style&&l.$style.prop(\"disabled\",!1).text(a.length?a.join(\",\")+\" { display: none; }\":\"\"),S.saveValues(e,t),S.adjustColspans(e,t),e.$table.triggerHandler(t.columnSelector_updated)}},setUpColspan:function(e,t){var o,l,a,n=h(window),c=!1,r=e.$table.add(h(e.namespace+\"_extra_table\")).children().children(\"tr\").children(\"th, td\"),s=r.length;for(o=0;o<s;o++)1<(l=r[o].colSpan)&&(c=!0,r.eq(o).addClass(e.namespace.slice(1)+\"columnselector\"+t.columnSelector_classHasSpan).attr(\"data-col-span\",l),f.computeColumnIndex(r.eq(o).parent().addClass(t.columnSelector_classHasSpan)));c&&t.columnSelector_mediaquery&&(a=e.namespace+\"columnselector\",n.off(a).on(\"resize\"+a,f.window_resize).on(\"resizeEnd\"+a,function(){n.off(\"resize\"+a,f.window_resize),S.adjustColspans(e,t),n.on(\"resize\"+a,f.window_resize)}))},findHeaders:function(e){var t,o,l=\".\"+f.css.scrollerHeader+\" thead > tr > \",a=h(l+\"th,\"+l+\"td\"),n=[];for(t=0;t<e.columns;t++)o=a.filter('[data-column=\"'+t+'\"]'),n[t]=o.length?o.not(\".sorter-false\").length?o.not(\".sorter-false\").filter(\":last\"):o.filter(\":last\"):h();return n},adjustColspans:function(e,t){var o,l,a,n,c,r,s=e.selector,i=t.filter_filteredRow||\"filtered\",u=t.columnSelector_mediaquery&&s.auto,d=e.$table.children(\"thead, tfoot\").children().children().add(h(e.namespace+\"_extra_table\").children(\"thead, tfoot\").children().children()).add(e.$table.find(\".group-header\").children()),p=d.length,m=f.hasWidget(e.table,\"scroller\")?S.findHeaders(e):e.$headerIndexed;for(o=0;o<p;o++)if(r=d.eq(o),c=(a=parseInt(r.attr(\"data-column\"),10)||r[0].cellIndex)+(n=parseInt(r.attr(\"data-col-span\"),10)||1),1<n){for(l=a;l<c;l++)(!u&&!1===s.states[l]||u&&m[l]&&!m[l].is(\":visible\"))&&n--;n?r.removeClass(i)[0].colSpan=n:r.addClass(i)}else void 0!==s.states[a]&&null!==s.states[a]&&r.toggleClass(i,!u&&!s.states[a])},saveValues:function(e,t){if(t.columnSelector_saveColumns&&f.storage){var o=e.selector;f.storage(e.$table[0],\"tablesorter-columnSelector-auto\",{auto:o.auto}),f.storage(e.$table[0],\"tablesorter-columnSelector\",o.states)}},attachTo:function(e,t){var o,l,a,n=(e=h(e)[0]).config,c=h(t);c.length&&n&&(c.find(\".tablesorter-column-selector\").length||c.append('<span class=\"tablesorter-column-selector\"></span>'),o=n.selector,l=n.widgetOptions,c.find(\".tablesorter-column-selector\").html(o.$container.html()).find(\"input\").each(function(){var e=h(this).attr(\"data-column\"),t=\"auto\"===e?o.auto:o.states[e];h(this).toggleClass(l.columnSelector_cssChecked,t).prop(\"checked\",t)}),o.$popup=c.on(\"change\",\"input\",function(){if(!o.isInitializing){if(!S.checkChange(n,this.checked))return this.checked=!this.checked,!1;a=h(this).toggleClass(l.columnSelector_cssChecked,this.checked).attr(\"data-column\"),o.$container.find('input[data-column=\"'+a+'\"]').prop(\"checked\",this.checked).trigger(\"change\")}}))}};f.window_resize=function(){f.timer_resize&&clearTimeout(f.timer_resize),f.timer_resize=setTimeout(function(){h(window).trigger(\"resizeEnd\")},250)},f.addWidget({id:\"columnSelector\",priority:10,options:{columnSelector_container:null,columnSelector_columns:{},columnSelector_saveColumns:!0,columnSelector_layout:'<label><input type=\"checkbox\">{name}</label>',columnSelector_layoutCustomizer:null,columnSelector_name:\"data-selector-name\",columnSelector_mediaquery:!0,columnSelector_mediaqueryName:\"Auto: \",columnSelector_mediaqueryState:!0,columnSelector_mediaqueryHidden:!1,columnSelector_maxVisible:null,columnSelector_minVisible:null,columnSelector_breakpoints:[\"20em\",\"30em\",\"40em\",\"50em\",\"60em\",\"70em\"],columnSelector_maxPriorities:6,columnSelector_priority:\"data-priority\",columnSelector_cssChecked:\"checked\",columnSelector_classHasSpan:\"hasSpan\",columnSelector_updated:\"columnUpdate\"},init:function(e,t,o,l){S.init(e,o,l)},remove:function(e,t,o,l){var a=t.selector;!l&&a&&(a&&a.$container.empty(),a.$popup&&a.$popup.empty(),a.$style.remove(),a.$breakpoints.remove(),h(t.namespace+\"columnselector\"+o.columnSelector_classHasSpan).removeClass(o.filter_filteredRow||\"filtered\"),t.$table.find(\"[data-col-span]\").each(function(e,t){var o=h(t);o.attr(\"colspan\",o.attr(\"data-col-span\"))}),t.$table.off(\"updateAll\"+c+\" update\"+c))}})}(jQuery);return jQuery;}));\r\n"]}